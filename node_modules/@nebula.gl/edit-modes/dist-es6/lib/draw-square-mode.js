"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DrawSquareMode = void 0;

var _bboxPolygon = _interopRequireDefault(require("@turf/bbox-polygon"));

var _distance = _interopRequireDefault(require("@turf/distance"));

var _along = _interopRequireDefault(require("@turf/along"));

var _helpers = require("@turf/helpers");

var _twoClickPolygonMode = require("./two-click-polygon-mode");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var DrawSquareMode = /*#__PURE__*/function (_TwoClickPolygonMode) {
  _inherits(DrawSquareMode, _TwoClickPolygonMode);

  var _super = _createSuper(DrawSquareMode);

  function DrawSquareMode() {
    _classCallCheck(this, DrawSquareMode);

    return _super.apply(this, arguments);
  }

  _createClass(DrawSquareMode, [{
    key: "getTwoClickPolygon",
    value: function getTwoClickPolygon(coord1, coord2, modeConfig) {
      // get the coordinates of the other two rectangle vertices
      var coord3 = [coord2[0], coord1[1]];
      var coord4 = [coord1[0], coord2[1]]; // determine the shortest distance to the origin, which will be the length of each square side

      var distance1 = (0, _distance["default"])((0, _helpers.point)(coord3), (0, _helpers.point)(coord1));
      var distance2 = (0, _distance["default"])((0, _helpers.point)(coord4), (0, _helpers.point)(coord1));
      var shortestDistance = distance1 <= distance2 ? distance1 : distance2; // determine which coordinate pair of the two is closest to the origin

      var closestPoint = distance1 <= distance2 ? coord3 : coord4; // create a linestring which will used to locate the second square vertex

      var line = (0, _helpers.lineString)([closestPoint, coord2]); // get the coordinates of the second square vertex

      var newPoint = (0, _along["default"])(line, shortestDistance);
      var corner = newPoint.geometry.coordinates;
      var square = (0, _bboxPolygon["default"])([coord1[0], coord1[1], corner[0], corner[1]]);
      square.properties = square.properties || {};
      square.properties.shape = 'Square'; // @ts-ignore

      return square;
    }
  }]);

  return DrawSquareMode;
}(_twoClickPolygonMode.TwoClickPolygonMode);

exports.DrawSquareMode = DrawSquareMode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvZHJhdy1zcXVhcmUtbW9kZS50cyJdLCJuYW1lcyI6WyJEcmF3U3F1YXJlTW9kZSIsImNvb3JkMSIsImNvb3JkMiIsIm1vZGVDb25maWciLCJjb29yZDMiLCJjb29yZDQiLCJkaXN0YW5jZTEiLCJkaXN0YW5jZTIiLCJzaG9ydGVzdERpc3RhbmNlIiwiY2xvc2VzdFBvaW50IiwibGluZSIsIm5ld1BvaW50IiwiY29ybmVyIiwiZ2VvbWV0cnkiLCJjb29yZGluYXRlcyIsInNxdWFyZSIsInByb3BlcnRpZXMiLCJzaGFwZSIsIlR3b0NsaWNrUG9seWdvbk1vZGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFYUEsYzs7Ozs7Ozs7Ozs7Ozt1Q0FDUUMsTSxFQUFrQkMsTSxFQUFrQkMsVSxFQUFxQztBQUMxRjtBQUNBLFVBQU1DLE1BQU0sR0FBRyxDQUFDRixNQUFNLENBQUMsQ0FBRCxDQUFQLEVBQVlELE1BQU0sQ0FBQyxDQUFELENBQWxCLENBQWY7QUFDQSxVQUFNSSxNQUFNLEdBQUcsQ0FBQ0osTUFBTSxDQUFDLENBQUQsQ0FBUCxFQUFZQyxNQUFNLENBQUMsQ0FBRCxDQUFsQixDQUFmLENBSDBGLENBSzFGOztBQUNBLFVBQU1JLFNBQVMsR0FBRywwQkFBYSxvQkFBTUYsTUFBTixDQUFiLEVBQTRCLG9CQUFNSCxNQUFOLENBQTVCLENBQWxCO0FBQ0EsVUFBTU0sU0FBUyxHQUFHLDBCQUFhLG9CQUFNRixNQUFOLENBQWIsRUFBNEIsb0JBQU1KLE1BQU4sQ0FBNUIsQ0FBbEI7QUFDQSxVQUFNTyxnQkFBZ0IsR0FBR0YsU0FBUyxJQUFJQyxTQUFiLEdBQXlCRCxTQUF6QixHQUFxQ0MsU0FBOUQsQ0FSMEYsQ0FVMUY7O0FBQ0EsVUFBTUUsWUFBWSxHQUFHSCxTQUFTLElBQUlDLFNBQWIsR0FBeUJILE1BQXpCLEdBQWtDQyxNQUF2RCxDQVgwRixDQWExRjs7QUFDQSxVQUFNSyxJQUFJLEdBQUcseUJBQWUsQ0FBQ0QsWUFBRCxFQUFlUCxNQUFmLENBQWYsQ0FBYixDQWQwRixDQWdCMUY7O0FBQ0EsVUFBTVMsUUFBUSxHQUFHLHVCQUFVRCxJQUFWLEVBQWdCRixnQkFBaEIsQ0FBakI7QUFDQSxVQUFNSSxNQUFNLEdBQUdELFFBQVEsQ0FBQ0UsUUFBVCxDQUFrQkMsV0FBakM7QUFFQSxVQUFNQyxNQUFNLEdBQUcsNkJBQVksQ0FBQ2QsTUFBTSxDQUFDLENBQUQsQ0FBUCxFQUFZQSxNQUFNLENBQUMsQ0FBRCxDQUFsQixFQUF1QlcsTUFBTSxDQUFDLENBQUQsQ0FBN0IsRUFBa0NBLE1BQU0sQ0FBQyxDQUFELENBQXhDLENBQVosQ0FBZjtBQUNBRyxNQUFBQSxNQUFNLENBQUNDLFVBQVAsR0FBb0JELE1BQU0sQ0FBQ0MsVUFBUCxJQUFxQixFQUF6QztBQUNBRCxNQUFBQSxNQUFNLENBQUNDLFVBQVAsQ0FBa0JDLEtBQWxCLEdBQTBCLFFBQTFCLENBdEIwRixDQXdCMUY7O0FBQ0EsYUFBT0YsTUFBUDtBQUNEOzs7O0VBM0JpQ0csd0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmJveFBvbHlnb24gZnJvbSAnQHR1cmYvYmJveC1wb2x5Z29uJztcbmltcG9ydCB0dXJmRGlzdGFuY2UgZnJvbSAnQHR1cmYvZGlzdGFuY2UnO1xuaW1wb3J0IHR1cmZBbG9uZyBmcm9tICdAdHVyZi9hbG9uZyc7XG5pbXBvcnQgeyBwb2ludCwgbGluZVN0cmluZyBhcyB0dXJmTGluZVN0cmluZyB9IGZyb20gJ0B0dXJmL2hlbHBlcnMnO1xuaW1wb3J0IHsgUG9zaXRpb24sIFBvbHlnb24sIEZlYXR1cmVPZiB9IGZyb20gJy4uL2dlb2pzb24tdHlwZXMnO1xuaW1wb3J0IHsgVHdvQ2xpY2tQb2x5Z29uTW9kZSB9IGZyb20gJy4vdHdvLWNsaWNrLXBvbHlnb24tbW9kZSc7XG5cbmV4cG9ydCBjbGFzcyBEcmF3U3F1YXJlTW9kZSBleHRlbmRzIFR3b0NsaWNrUG9seWdvbk1vZGUge1xuICBnZXRUd29DbGlja1BvbHlnb24oY29vcmQxOiBQb3NpdGlvbiwgY29vcmQyOiBQb3NpdGlvbiwgbW9kZUNvbmZpZzogYW55KTogRmVhdHVyZU9mPFBvbHlnb24+IHtcbiAgICAvLyBnZXQgdGhlIGNvb3JkaW5hdGVzIG9mIHRoZSBvdGhlciB0d28gcmVjdGFuZ2xlIHZlcnRpY2VzXG4gICAgY29uc3QgY29vcmQzID0gW2Nvb3JkMlswXSwgY29vcmQxWzFdXTtcbiAgICBjb25zdCBjb29yZDQgPSBbY29vcmQxWzBdLCBjb29yZDJbMV1dO1xuXG4gICAgLy8gZGV0ZXJtaW5lIHRoZSBzaG9ydGVzdCBkaXN0YW5jZSB0byB0aGUgb3JpZ2luLCB3aGljaCB3aWxsIGJlIHRoZSBsZW5ndGggb2YgZWFjaCBzcXVhcmUgc2lkZVxuICAgIGNvbnN0IGRpc3RhbmNlMSA9IHR1cmZEaXN0YW5jZShwb2ludChjb29yZDMpLCBwb2ludChjb29yZDEpKTtcbiAgICBjb25zdCBkaXN0YW5jZTIgPSB0dXJmRGlzdGFuY2UocG9pbnQoY29vcmQ0KSwgcG9pbnQoY29vcmQxKSk7XG4gICAgY29uc3Qgc2hvcnRlc3REaXN0YW5jZSA9IGRpc3RhbmNlMSA8PSBkaXN0YW5jZTIgPyBkaXN0YW5jZTEgOiBkaXN0YW5jZTI7XG5cbiAgICAvLyBkZXRlcm1pbmUgd2hpY2ggY29vcmRpbmF0ZSBwYWlyIG9mIHRoZSB0d28gaXMgY2xvc2VzdCB0byB0aGUgb3JpZ2luXG4gICAgY29uc3QgY2xvc2VzdFBvaW50ID0gZGlzdGFuY2UxIDw9IGRpc3RhbmNlMiA/IGNvb3JkMyA6IGNvb3JkNDtcblxuICAgIC8vIGNyZWF0ZSBhIGxpbmVzdHJpbmcgd2hpY2ggd2lsbCB1c2VkIHRvIGxvY2F0ZSB0aGUgc2Vjb25kIHNxdWFyZSB2ZXJ0ZXhcbiAgICBjb25zdCBsaW5lID0gdHVyZkxpbmVTdHJpbmcoW2Nsb3Nlc3RQb2ludCwgY29vcmQyXSk7XG5cbiAgICAvLyBnZXQgdGhlIGNvb3JkaW5hdGVzIG9mIHRoZSBzZWNvbmQgc3F1YXJlIHZlcnRleFxuICAgIGNvbnN0IG5ld1BvaW50ID0gdHVyZkFsb25nKGxpbmUsIHNob3J0ZXN0RGlzdGFuY2UpO1xuICAgIGNvbnN0IGNvcm5lciA9IG5ld1BvaW50Lmdlb21ldHJ5LmNvb3JkaW5hdGVzO1xuXG4gICAgY29uc3Qgc3F1YXJlID0gYmJveFBvbHlnb24oW2Nvb3JkMVswXSwgY29vcmQxWzFdLCBjb3JuZXJbMF0sIGNvcm5lclsxXV0pO1xuICAgIHNxdWFyZS5wcm9wZXJ0aWVzID0gc3F1YXJlLnByb3BlcnRpZXMgfHwge307XG4gICAgc3F1YXJlLnByb3BlcnRpZXMuc2hhcGUgPSAnU3F1YXJlJztcblxuICAgIC8vIEB0cy1pZ25vcmVcbiAgICByZXR1cm4gc3F1YXJlO1xuICB9XG59XG4iXX0=