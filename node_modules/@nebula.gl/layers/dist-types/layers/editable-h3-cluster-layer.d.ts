import EditableLayer, { EditableLayerProps } from './editable-layer';
export interface EditableH3ClusterLayerProps<D> extends EditableLayerProps<D> {
    resolution?: number;
    mode?: any;
    modeConfig?: any;
    selectedIndexes?: number[];
    getEditedCluster?: (updatedHexagons: any[], existingCluster: any) => any;
    getHexagons?: (d: any) => number[];
    onEdit?: (updatedData?: any, editType?: string, featureIndexes?: number[], editContext?: any) => void;
    filled?: boolean;
    stroked?: boolean;
    lineWidthScale?: number;
    lineWidthMinPixels?: number;
    lineWidthMaxPixels?: number;
    lineWidthUnits?: string;
}
export default class EditableH3ClusterLayer extends EditableLayer<any, EditableH3ClusterLayerProps<any>> {
    static layerName: string;
    static defaultProps: EditableH3ClusterLayerProps<any>;
    initializeState(): void;
    getDerivedHexagonIDs(coords: any): string[];
    getDerivedHexagonID(coords: any): string;
    renderLayers(): any;
    getSelectedHexIDs(): any[];
    getCursor({ isDragging }: {
        isDragging: boolean;
    }): any;
}
//# sourceMappingURL=editable-h3-cluster-layer.d.ts.map