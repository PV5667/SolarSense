{
  "version": 3,
  "sources": ["../../react-map-gl/src/components/map.tsx", "../../react-map-gl/src/components/use-map.tsx", "../../react-map-gl/src/utils/transform.ts", "../../react-map-gl/src/utils/style-utils.ts", "../../react-map-gl/src/utils/deep-equal.ts", "../../react-map-gl/src/mapbox/mapbox.ts", "../../react-map-gl/src/mapbox/create-ref.ts", "../../react-map-gl/src/utils/use-isomorphic-layout-effect.ts", "../../react-map-gl/src/utils/set-globals.ts", "../../react-map-gl/src/components/marker.ts", "../../react-map-gl/src/utils/apply-react-style.ts", "../../react-map-gl/src/components/popup.ts", "../../react-map-gl/src/components/attribution-control.ts", "../../react-map-gl/src/components/use-control.ts", "../../react-map-gl/src/components/fullscreen-control.ts", "../../react-map-gl/src/components/geolocate-control.ts", "../../react-map-gl/src/components/navigation-control.ts", "../../react-map-gl/src/components/scale-control.ts", "../../react-map-gl/src/components/source.ts", "../../react-map-gl/src/utils/assert.ts", "../../react-map-gl/src/components/layer.ts"],
  "sourcesContent": ["import * as React from 'react';\nimport {\n  useState,\n  useRef,\n  useEffect,\n  useContext,\n  useMemo,\n  forwardRef,\n  useImperativeHandle\n} from 'react';\n\nimport {MountedMapsContext} from './use-map';\nimport Mapbox, {MapboxProps} from '../mapbox/mapbox';\nimport createRef, {MapRef} from '../mapbox/create-ref';\n\nimport type {CSSProperties} from 'react';\nimport useIsomorphicLayoutEffect from '../utils/use-isomorphic-layout-effect';\nimport setGlobals, {GlobalSettings} from '../utils/set-globals';\n\nexport type MapContextValue = {\n  mapLib: any;\n  map: MapRef;\n};\n\nexport const MapContext = React.createContext<MapContextValue>(null);\n\nexport type MapProps = MapboxProps &\n  GlobalSettings & {\n    mapLib?: any;\n    reuseMaps?: boolean;\n    /** Map container id */\n    id?: string;\n    /** Map container CSS style */\n    style?: CSSProperties;\n    children?: any;\n  };\n\nconst defaultProps: MapProps = {\n  // Constraints\n  minZoom: 0,\n  maxZoom: 22,\n  minPitch: 0,\n  maxPitch: 60,\n\n  // Interaction handlers\n  scrollZoom: true,\n  boxZoom: true,\n  dragRotate: true,\n  dragPan: true,\n  keyboard: true,\n  doubleClickZoom: true,\n  touchZoomRotate: true,\n  touchPitch: true,\n\n  // Style\n  mapStyle: {version: 8, sources: {}, layers: []},\n  styleDiffing: true,\n  projection: 'mercator',\n  renderWorldCopies: true,\n\n  // Callbacks\n  onError: e => console.error(e.error), // eslint-disable-line\n\n  // Globals\n  RTLTextPlugin:\n    'https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js'\n};\n\nconst Map = forwardRef<MapRef, MapProps>((props, ref) => {\n  const mountedMapsContext = useContext(MountedMapsContext);\n  const [mapInstance, setMapInstance] = useState<Mapbox>(null);\n  const containerRef = useRef();\n\n  const {current: contextValue} = useRef<MapContextValue>({mapLib: null, map: null});\n\n  useEffect(() => {\n    const mapLib = props.mapLib;\n    let isMounted = true;\n    let mapbox;\n\n    Promise.resolve(mapLib || import('mapbox-gl'))\n      .then(mapboxgl => {\n        if (!isMounted) {\n          return;\n        }\n\n        if (!mapboxgl.Map) {\n          // commonjs style\n          mapboxgl = mapboxgl.default;\n        }\n        if (!mapboxgl || !mapboxgl.Map) {\n          throw new Error('Invalid mapLib');\n        }\n\n        // workerUrl & workerClass may change the result of supported()\n        // https://github.com/visgl/react-map-gl/discussions/2027\n        setGlobals(mapboxgl, props);\n        if (!mapboxgl.supported || mapboxgl.supported(props)) {\n          if (props.reuseMaps) {\n            mapbox = Mapbox.reuse(props, containerRef.current);\n          }\n          if (!mapbox) {\n            mapbox = new Mapbox(mapboxgl.Map, props, containerRef.current);\n          }\n          contextValue.map = createRef(mapbox, mapboxgl);\n          contextValue.mapLib = mapboxgl;\n\n          setMapInstance(mapbox);\n          mountedMapsContext?.onMapMount(contextValue.map, props.id);\n        } else {\n          throw new Error('Map is not supported by this browser');\n        }\n      })\n      .catch(error => {\n        props.onError({\n          type: 'error',\n          target: null,\n          originalEvent: null,\n          error\n        });\n      });\n\n    return () => {\n      isMounted = false;\n      if (mapbox) {\n        mountedMapsContext?.onMapUnmount(props.id);\n        if (props.reuseMaps) {\n          mapbox.recycle();\n        } else {\n          mapbox.destroy();\n        }\n      }\n    };\n  }, []);\n\n  useIsomorphicLayoutEffect(() => {\n    if (mapInstance) {\n      mapInstance.setProps(props);\n    }\n  });\n\n  useImperativeHandle(ref, () => contextValue.map, [mapInstance]);\n\n  const style: CSSProperties = useMemo(\n    () => ({\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      ...props.style\n    }),\n    [props.style]\n  );\n\n  const CHILD_CONTAINER_STYLE = {\n    height: '100%'\n  };\n\n  return (\n    <div id={props.id} ref={containerRef} style={style}>\n      {mapInstance && (\n        <MapContext.Provider value={contextValue}>\n          <div mapboxgl-children=\"\" style={CHILD_CONTAINER_STYLE}>\n            {props.children}\n          </div>\n        </MapContext.Provider>\n      )}\n    </div>\n  );\n});\n\nMap.displayName = 'Map';\nMap.defaultProps = defaultProps;\n\nexport default Map;\n", "import * as React from 'react';\nimport {useState, useCallback, useMemo, useContext} from 'react';\n\nimport {MapRef} from '../mapbox/create-ref';\nimport {MapContext} from './map';\n\ntype MountedMapsContextValue = {\n  maps: {[id: string]: MapRef};\n  onMapMount: (map: MapRef, id: string) => void;\n  onMapUnmount: (id: string) => void;\n};\n\nexport const MountedMapsContext = React.createContext<MountedMapsContextValue>(null);\n\nexport const MapProvider: React.FC<{children?: React.ReactNode}> = props => {\n  const [maps, setMaps] = useState<{[id: string]: MapRef}>({});\n\n  const onMapMount = useCallback((map: MapRef, id: string = 'default') => {\n    setMaps(currMaps => {\n      if (id === 'current') {\n        throw new Error(\"'current' cannot be used as map id\");\n      }\n      if (currMaps[id]) {\n        throw new Error(`Multiple maps with the same id: ${id}`);\n      }\n      return {...currMaps, [id]: map};\n    });\n  }, []);\n\n  const onMapUnmount = useCallback((id: string = 'default') => {\n    setMaps(currMaps => {\n      if (currMaps[id]) {\n        const nextMaps = {...currMaps};\n        delete nextMaps[id];\n        return nextMaps;\n      }\n      return currMaps;\n    });\n  }, []);\n\n  return (\n    <MountedMapsContext.Provider\n      value={{\n        maps,\n        onMapMount,\n        onMapUnmount\n      }}\n    >\n      {props.children}\n    </MountedMapsContext.Provider>\n  );\n};\n\nexport function useMap(): {current?: MapRef; [id: string]: MapRef | undefined} {\n  const maps = useContext(MountedMapsContext)?.maps;\n  const currentMap = useContext(MapContext);\n\n  const mapsWithCurrent = useMemo(() => {\n    return {...maps, current: currentMap?.map};\n  }, [maps, currentMap]);\n\n  return mapsWithCurrent;\n}\n", "import type {MapboxProps} from '../mapbox/mapbox';\nimport type {Transform, ViewState} from '../types';\n\n/**\n * Make a copy of a transform\n * @param tr\n */\nexport function cloneTransform(tr: Transform): Transform {\n  const newTransform = tr.clone();\n  // Work around mapbox bug - this value is not assigned in clone(), only in resize()\n  newTransform.pixelsToGLUnits = tr.pixelsToGLUnits;\n  return newTransform;\n}\n\n/**\n * Capture a transform's current state\n * @param transform\n * @returns descriptor of the view state\n */\nexport function transformToViewState(tr: Transform): ViewState {\n  return {\n    longitude: tr.center.lng,\n    latitude: tr.center.lat,\n    zoom: tr.zoom,\n    pitch: tr.pitch,\n    bearing: tr.bearing,\n    padding: tr.padding\n  };\n}\n\n/* eslint-disable complexity */\n/**\n * Mutate a transform to match the given view state\n * @param transform\n * @param viewState\n * @returns true if the transform has changed\n */\nexport function applyViewStateToTransform(tr: Transform, props: MapboxProps): boolean {\n  const v: Partial<ViewState> = props.viewState || props;\n  let changed = false;\n\n  if ('longitude' in v && 'latitude' in v) {\n    const center = tr.center;\n    // @ts-ignore\n    tr.center = new center.constructor(v.longitude, v.latitude);\n    changed = changed || center !== tr.center;\n  }\n  if ('zoom' in v) {\n    const zoom = tr.zoom;\n    tr.zoom = v.zoom;\n    changed = changed || zoom !== tr.zoom;\n  }\n  if ('bearing' in v) {\n    const bearing = tr.bearing;\n    tr.bearing = v.bearing;\n    changed = changed || bearing !== tr.bearing;\n  }\n  if ('pitch' in v) {\n    const pitch = tr.pitch;\n    tr.pitch = v.pitch;\n    changed = changed || pitch !== tr.pitch;\n  }\n  if (v.padding && !tr.isPaddingEqual(v.padding)) {\n    changed = true;\n    tr.padding = v.padding;\n  }\n  return changed;\n}\n", "import {ImmutableLike, MapboxStyle} from '../types';\n\nconst refProps = ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n\n// Prepare a map style object for diffing\n// If immutable - convert to plain object\n// Work around some issues in older styles that would fail Mapbox's diffing\nexport function normalizeStyle(style: string | MapboxStyle | ImmutableLike): string | MapboxStyle {\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'string') {\n    return style;\n  }\n  if ('toJS' in style) {\n    style = style.toJS() as MapboxStyle;\n  }\n  if (!style.layers) {\n    return style;\n  }\n  const layerIndex = {};\n\n  for (const layer of style.layers) {\n    layerIndex[layer.id] = layer;\n  }\n\n  const layers = style.layers.map(layer => {\n    // @ts-expect-error\n    const layerRef = layerIndex[layer.ref];\n    let normalizedLayer = null;\n\n    if ('interactive' in layer) {\n      normalizedLayer = {...layer};\n      // Breaks style diffing :(\n      delete normalizedLayer.interactive;\n    }\n\n    // Style diffing doesn't work with refs so expand them out manually before diffing.\n    if (layerRef) {\n      normalizedLayer = normalizedLayer || {...layer};\n      delete normalizedLayer.ref;\n      // https://github.com/mapbox/mapbox-gl-js/blob/master/src/style-spec/deref.js\n      for (const propName of refProps) {\n        if (propName in layerRef) {\n          normalizedLayer[propName] = layerRef[propName];\n        }\n      }\n    }\n\n    return normalizedLayer || layer;\n  });\n\n  // Do not mutate the style object provided by the user\n  return {...style, layers};\n}\n", "import type {PointLike} from '../types';\n\n/**\n * Compare two points\n * @param a\n * @param b\n * @returns true if the points are equal\n */\nexport function arePointsEqual(a?: PointLike, b?: PointLike): boolean {\n  const ax = Array.isArray(a) ? a[0] : a ? a.x : 0;\n  const ay = Array.isArray(a) ? a[1] : a ? a.y : 0;\n  const bx = Array.isArray(b) ? b[0] : b ? b.x : 0;\n  const by = Array.isArray(b) ? b[1] : b ? b.y : 0;\n  return ax === bx && ay === by;\n}\n\n/* eslint-disable complexity */\n/**\n * Compare any two objects\n * @param a\n * @param b\n * @returns true if the objects are deep equal\n */\nexport function deepEqual(a: any, b: any): boolean {\n  if (a === b) {\n    return true;\n  }\n  if (!a || !b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b) || a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n      if (!deepEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  } else if (Array.isArray(b)) {\n    return false;\n  }\n  if (typeof a === 'object' && typeof b === 'object') {\n    const aKeys = Object.keys(a);\n    const bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    for (const key of aKeys) {\n      if (!b.hasOwnProperty(key)) {\n        return false;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n", "import {transformToViewState, applyViewStateToTransform, cloneTransform} from '../utils/transform';\nimport {normalizeStyle} from '../utils/style-utils';\nimport {deepEqual} from '../utils/deep-equal';\n\nimport type {\n  Transform,\n  ProjectionSpecification,\n  ViewState,\n  ViewStateChangeEvent,\n  DragPanOptions,\n  ZoomRotateOptions,\n  TransformRequestFunction,\n  Light,\n  Fog,\n  Point,\n  TerrainSpecification,\n  MapboxStyle,\n  ImmutableLike,\n  LngLatBoundsLike,\n  FitBoundsOptions,\n  MapMouseEvent,\n  MapLayerMouseEvent,\n  MapLayerTouchEvent,\n  MapWheelEvent,\n  MapBoxZoomEvent,\n  MapStyleDataEvent,\n  MapSourceDataEvent,\n  MapboxEvent,\n  ErrorEvent,\n  MapboxGeoJSONFeature,\n  MapboxMap\n} from '../types';\n\nexport type MapboxProps = Partial<ViewState> & {\n  // Init options\n  mapboxAccessToken?: string;\n\n  /** Camera options used when constructing the Map instance */\n  initialViewState?: Partial<ViewState> & {\n    /** The initial bounds of the map. If bounds is specified, it overrides longitude, latitude and zoom options. */\n    bounds?: LngLatBoundsLike;\n    /** A fitBounds options object to use only when setting the bounds option. */\n    fitBoundsOptions?: FitBoundsOptions;\n  };\n\n  /** If provided, render into an external WebGL context */\n  gl?: WebGLRenderingContext;\n\n  /**\n   * If true, the gl context will be created with MSA antialiasing, which can be useful for antialiasing custom layers.\n   * This is false by default as a performance optimization.\n   * @default false\n   */\n  antialias?: boolean;\n  /**\n   * If true, an attribution control will be added to the map.\n   * @default true\n   */\n  attributionControl?: boolean;\n  /**\n   * Snap to north threshold in degrees.\n   * @default 7\n   */\n  bearingSnap?: number;\n  /**\n   * The max number of pixels a user can shift the mouse pointer during a click for it to be\n   * considered a valid click (as opposed to a mouse drag).\n   * @default 3\n   */\n  clickTolerance?: number;\n  /**\n   * If `true`, Resource Timing API information will be collected for requests made by GeoJSON\n   * and Vector Tile web workers (this information is normally inaccessible from the main\n   * Javascript thread). Information will be returned in a `resourceTiming` property of\n   * relevant `data` events.\n   * @default false\n   */\n  collectResourceTiming?: boolean;\n  /**\n   * If `true` , scroll zoom will require pressing the ctrl or ⌘ key while scrolling to zoom map,\n   * and touch pan will require using two fingers while panning to move the map.\n   * Touch pitch will require three fingers to activate if enabled.\n   */\n  cooperativeGestures?: boolean;\n  /**\n   * If `true`, symbols from multiple sources can collide with each other during collision\n   * detection. If `false`, collision detection is run separately for the symbols in each source.\n   * @default true\n   */\n  crossSourceCollisions?: boolean;\n  /** String or strings to show in an AttributionControl.\n   * Only applicable if options.attributionControl is `true`. */\n  customAttribution?: string | string[];\n  /**\n   * Controls the duration of the fade-in/fade-out animation for label collisions, in milliseconds.\n   * This setting affects all symbol layers. This setting does not affect the duration of runtime\n   * styling transitions or raster tile cross-fading.\n   * @default 300\n   */\n  fadeDuration?: number;\n  /** If true, map creation will fail if the implementation determines that the performance of the created WebGL context would be dramatically lower than expected.\n   * @default false\n   */\n  failIfMajorPerformanceCaveat?: boolean;\n  /** If `true`, the map's position (zoom, center latitude, center longitude, bearing, and pitch) will be synced with the hash fragment of the page's URL.\n   * For example, `http://path/to/my/page.html#2.59/39.26/53.07/-24.1/60`.\n   * An additional string may optionally be provided to indicate a parameter-styled hash,\n   * e.g. http://path/to/my/page.html#map=2.59/39.26/53.07/-24.1/60&foo=bar, where foo\n   * is a custom parameter and bar is an arbitrary hash distinct from the map hash.\n   */\n  hash?: boolean | string;\n  /** If false, no mouse, touch, or keyboard listeners are attached to the map, so it will not respond to input\n   * @default true\n   */\n  interactive?: boolean;\n  /** A patch to apply to the default localization table for UI strings, e.g. control tooltips.\n   * The `locale` object maps namespaced UI string IDs to translated strings in the target language;\n   * see `src/ui/default_locale.js` for an example with all supported string IDs.\n   * The object may specify all UI strings (thereby adding support for a new translation) or\n   * only a subset of strings (thereby patching the default translation table).\n   */\n  locale?: {[key: string]: string};\n  /**\n   * Overrides the generation of all glyphs and font settings except font-weight keywords\n   * Also overrides localIdeographFontFamily\n   * @default null\n   */\n  localFontFamily?: string;\n  /**\n   * If specified, defines a CSS font-family for locally overriding generation of glyphs in the\n   * 'CJK Unified Ideographs' and 'Hangul Syllables' ranges. In these ranges, font settings from\n   * the map's style will be ignored, except for font-weight keywords (light/regular/medium/bold).\n   * The purpose of this option is to avoid bandwidth-intensive glyph server requests.\n   * @default \"sans-serif\"\n   */\n  localIdeographFontFamily?: string;\n  /**\n   * A string representing the position of the Mapbox wordmark on the map.\n   * @default \"bottom-left\"\n   */\n  logoPosition?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n  /**\n   * The maximum number of tiles stored in the tile cache for a given source. If omitted, the\n   * cache will be dynamically sized based on the current viewport.\n   * @default null\n   */\n  maxTileCacheSize?: number;\n  /**\n   * If true, map will prioritize rendering for performance by reordering layers\n   * If false, layers will always be drawn in the specified order\n   * @default true\n   */\n  optimizeForTerrain?: boolean;\n  /**\n   * If `false`, the map's pitch (tilt) control with \"drag to rotate\" interaction will be disabled.\n   * @default true\n   */\n  pitchWithRotate?: boolean;\n  /** If true, The maps canvas can be exported to a PNG using map.getCanvas().toDataURL();. This is false by default as a performance optimization.\n   * @default false\n   */\n  preserveDrawingBuffer?: boolean;\n  /**\n   * If `false`, the map won't attempt to re-request tiles once they expire per their HTTP\n   * `cacheControl`/`expires` headers.\n   * @default true\n   */\n  refreshExpiredTiles?: boolean;\n  /**\n   * Allows for the usage of the map in automated tests without an accessToken with custom self-hosted test fixtures.\n   * @default null\n   */\n  testMode?: boolean;\n  /**\n   * If  true, the map will automatically resize when the browser window resizes\n   * @default true\n   */\n  trackResize?: boolean;\n  /**\n   * A callback run before the Map makes a request for an external URL. The callback can be\n   * used to modify the url, set headers, or set the credentials property for cross-origin requests.\n   * @default null\n   */\n  transformRequest?: TransformRequestFunction;\n\n  // Handlers\n\n  /**\n   * If true, enable the \"box zoom\" interaction (see BoxZoomHandler)\n   * @default true\n   */\n  boxZoom?: boolean;\n  /**\n   * If true, enable the \"double click to zoom\" interaction (see DoubleClickZoomHandler).\n   * @default true\n   */\n  doubleClickZoom?: boolean;\n  /**\n   * If `true`, the \"drag to pan\" interaction is enabled.\n   * An `Object` value is passed as options to {@link DragPanHandler#enable}.\n   * @default true\n   */\n  dragPan?: boolean | DragPanOptions;\n  /**\n   * If true, enable the \"drag to rotate\" interaction (see DragRotateHandler).\n   * @default true\n   */\n  dragRotate?: boolean;\n  /**\n   * If true, enable keyboard shortcuts (see KeyboardHandler).\n   * @default true\n   */\n  keyboard?: boolean;\n  /**\n   * If `true`, the \"scroll to zoom\" interaction is enabled.\n   * An `Object` value is passed as options to {@link ScrollZoomHandler#enable}.\n   * @default true\n   */\n  scrollZoom?: boolean | ZoomRotateOptions;\n  /**\n   * If `true`, the \"drag to pitch\" interaction is enabled.\n   * An `Object` value is passed as options to {@link TouchPitchHandler#enable}.\n   * @default true\n   */\n  touchPitch?: boolean;\n  /**\n   * If `true`, the \"pinch to rotate and zoom\" interaction is enabled.\n   * An `Object` value is passed as options to {@link TouchZoomRotateHandler#enable}.\n   * @default true\n   */\n  touchZoomRotate?: boolean | ZoomRotateOptions;\n\n  // Constraints\n\n  /** If set, the map is constrained to the given bounds. */\n  maxBounds?: LngLatBoundsLike;\n  /** Maximum pitch of the map. */\n  maxPitch?: number;\n  /** Maximum zoom of the map. */\n  maxZoom?: number;\n  /** Minimum pitch of the map. */\n  minPitch?: number;\n  /** Minimum zoom of the map. */\n  minZoom?: number;\n\n  /** For external controller to override the camera state */\n  viewState?: ViewState & {\n    width: number;\n    height: number;\n  };\n\n  // Styling\n\n  /** Mapbox style */\n  mapStyle?: string | MapboxStyle | ImmutableLike;\n  /** Enable diffing when the map style changes\n   * @default true\n   */\n  styleDiffing?: boolean;\n  /** The fog property of the style. Must conform to the Fog Style Specification .\n   * If `undefined` is provided, removes the fog from the map. */\n  fog?: Fog;\n  /** Light properties of the map. */\n  light?: Light;\n  /** Terrain property of the style. Must conform to the Terrain Style Specification .\n   * If `undefined` is provided, removes terrain from the map. */\n  terrain?: TerrainSpecification;\n  /** Default layers to query on pointer events */\n  interactiveLayerIds?: string[];\n  /** The projection the map should be rendered in\n   * @default \"mercator\"\n   */\n  projection?: ProjectionSpecification | string;\n  /**\n   * If `true`, multiple copies of the world will be rendered, when zoomed out.\n   * @default true\n   */\n  renderWorldCopies?: boolean;\n  /** CSS cursor */\n  cursor?: string;\n\n  // Callbacks\n  onMouseDown?: (e: MapLayerMouseEvent) => void;\n  onMouseUp?: (e: MapLayerMouseEvent) => void;\n  onMouseOver?: (e: MapLayerMouseEvent) => void;\n  onMouseMove?: (e: MapLayerMouseEvent) => void;\n  onClick?: (e: MapLayerMouseEvent) => void;\n  onDblClick?: (e: MapLayerMouseEvent) => void;\n  onMouseEnter?: (e: MapLayerMouseEvent) => void;\n  onMouseLeave?: (e: MapLayerMouseEvent) => void;\n  onMouseOut?: (e: MapLayerMouseEvent) => void;\n  onContextMenu?: (e: MapLayerMouseEvent) => void;\n  onTouchStart?: (e: MapLayerTouchEvent) => void;\n  onTouchEnd?: (e: MapLayerTouchEvent) => void;\n  onTouchMove?: (e: MapLayerTouchEvent) => void;\n  onTouchCancel?: (e: MapLayerTouchEvent) => void;\n\n  onMoveStart?: (e: ViewStateChangeEvent) => void;\n  onMove?: (e: ViewStateChangeEvent) => void;\n  onMoveEnd?: (e: ViewStateChangeEvent) => void;\n  onDragStart?: (e: ViewStateChangeEvent) => void;\n  onDrag?: (e: ViewStateChangeEvent) => void;\n  onDragEnd?: (e: ViewStateChangeEvent) => void;\n  onZoomStart?: (e: ViewStateChangeEvent) => void;\n  onZoom?: (e: ViewStateChangeEvent) => void;\n  onZoomEnd?: (e: ViewStateChangeEvent) => void;\n  onRotateStart?: (e: ViewStateChangeEvent) => void;\n  onRotate?: (e: ViewStateChangeEvent) => void;\n  onRotateEnd?: (e: ViewStateChangeEvent) => void;\n  onPitchStart?: (e: ViewStateChangeEvent) => void;\n  onPitch?: (e: ViewStateChangeEvent) => void;\n  onPitchEnd?: (e: ViewStateChangeEvent) => void;\n\n  onWheel?: (e: MapWheelEvent) => void;\n  onBoxZoomStart?: (e: MapBoxZoomEvent) => void;\n  onBoxZoomEnd?: (e: MapBoxZoomEvent) => void;\n  onBoxZoomCancel?: (e: MapBoxZoomEvent) => void;\n\n  onResize?: (e: MapboxEvent) => void;\n  onLoad?: (e: MapboxEvent) => void;\n  onRender?: (e: MapboxEvent) => void;\n  onIdle?: (e: MapboxEvent) => void;\n  onError?: (e: ErrorEvent) => void;\n  onRemove?: (e: MapboxEvent) => void;\n  onData?: (e: MapStyleDataEvent | MapSourceDataEvent) => void;\n  onStyleData?: (e: MapStyleDataEvent) => void;\n  onSourceData?: (e: MapSourceDataEvent) => void;\n};\n\nconst pointerEvents = {\n  mousedown: 'onMouseDown',\n  mouseup: 'onMouseUp',\n  mouseover: 'onMouseOver',\n  mousemove: 'onMouseMove',\n  click: 'onClick',\n  dblclick: 'onDblClick',\n  mouseenter: 'onMouseEnter',\n  mouseleave: 'onMouseLeave',\n  mouseout: 'onMouseOut',\n  contextmenu: 'onContextMenu',\n  touchstart: 'onTouchStart',\n  touchend: 'onTouchEnd',\n  touchmove: 'onTouchMove',\n  touchcancel: 'onTouchCancel'\n};\nconst cameraEvents = {\n  movestart: 'onMoveStart',\n  move: 'onMove',\n  moveend: 'onMoveEnd',\n  dragstart: 'onDragStart',\n  drag: 'onDrag',\n  dragend: 'onDragEnd',\n  zoomstart: 'onZoomStart',\n  zoom: 'onZoom',\n  zoomend: 'onZoomEnd',\n  rotatestart: 'onRotateStart',\n  rotate: 'onRotate',\n  rotateend: 'onRotateEnd',\n  pitchstart: 'onPitchStart',\n  pitch: 'onPitch',\n  pitchend: 'onPitchEnd'\n};\nconst otherEvents = {\n  wheel: 'onWheel',\n  boxzoomstart: 'onBoxZoomStart',\n  boxzoomend: 'onBoxZoomEnd',\n  boxzoomcancel: 'onBoxZoomCancel',\n  resize: 'onResize',\n  load: 'onLoad',\n  render: 'onRender',\n  idle: 'onIdle',\n  remove: 'onRemove',\n  data: 'onData',\n  styledata: 'onStyleData',\n  sourcedata: 'onSourceData',\n  error: 'onError'\n};\nconst settingNames: (keyof MapboxProps)[] = [\n  'minZoom',\n  'maxZoom',\n  'minPitch',\n  'maxPitch',\n  'maxBounds',\n  'projection',\n  'renderWorldCopies'\n];\nconst handlerNames: (keyof MapboxProps)[] = [\n  'scrollZoom',\n  'boxZoom',\n  'dragRotate',\n  'dragPan',\n  'keyboard',\n  'doubleClickZoom',\n  'touchZoomRotate',\n  'touchPitch'\n];\n\n/**\n * A wrapper for mapbox-gl's Map class\n */\nexport default class Mapbox {\n  private _MapClass: typeof MapboxMap;\n  // mapboxgl.Map instance. Not using type here because we are accessing\n  // private members and methods\n  private _map: any = null;\n  // User-supplied props\n  props: MapboxProps;\n\n  // Mapbox map is stateful.\n  // During method calls/user interactions, map.transform is mutated and\n  // deviate from user-supplied props.\n  // In order to control the map reactively, we shadow the transform\n  // with the one below, which reflects the view state resolved from\n  // both user-supplied props and the underlying state\n  private _renderTransform: Transform;\n\n  // Internal states\n  private _internalUpdate: boolean = false;\n  private _inRender: boolean = false;\n  private _hoveredFeatures: MapboxGeoJSONFeature[] = null;\n  private _deferredEvents: {\n    move: boolean;\n    zoom: boolean;\n    pitch: boolean;\n    rotate: boolean;\n  } = {\n    move: false,\n    zoom: false,\n    pitch: false,\n    rotate: false\n  };\n\n  static savedMaps: Mapbox[] = [];\n\n  constructor(MapClass: typeof MapboxMap, props: MapboxProps, container: HTMLDivElement) {\n    this._MapClass = MapClass;\n    this.props = props;\n    this._initialize(container);\n  }\n\n  get map(): MapboxMap {\n    return this._map as MapboxMap;\n  }\n\n  get transform(): Transform {\n    return this._renderTransform;\n  }\n\n  setProps(props: MapboxProps) {\n    const oldProps = this.props;\n    this.props = props;\n\n    const settingsChanged = this._updateSettings(props, oldProps);\n    if (settingsChanged) {\n      this._createShadowTransform(this._map);\n    }\n    const sizeChanged = this._updateSize(props);\n    const viewStateChanged = this._updateViewState(props, true);\n    this._updateStyle(props, oldProps);\n    this._updateStyleComponents(props, oldProps);\n    this._updateHandlers(props, oldProps);\n\n    // If 1) view state has changed to match props and\n    //    2) the props change is not triggered by map events,\n    // it's driven by an external state change. Redraw immediately\n    if (settingsChanged || sizeChanged || (viewStateChanged && !this._map.isMoving())) {\n      this.redraw();\n    }\n  }\n\n  static reuse(props: MapboxProps, container: HTMLDivElement) {\n    const that = Mapbox.savedMaps.pop();\n    if (!that) {\n      return null;\n    }\n\n    const map = that.map;\n    // When reusing the saved map, we need to reparent the map(canvas) and other child nodes\n    // intoto the new container from the props.\n    // Step 1: reparenting child nodes from old container to new container\n    const oldContainer = map.getContainer();\n    container.className = oldContainer.className;\n    while (oldContainer.childNodes.length > 0) {\n      container.appendChild(oldContainer.childNodes[0]);\n    }\n    // Step 2: replace the internal container with new container from the react component\n    // @ts-ignore\n    map._container = container;\n\n    // With maplibre-gl as mapLib, map uses ResizeObserver to observe when its container resizes.\n    // When reusing the saved map, we need to disconnect the observer and observe the new container.\n    // Step 3: telling the ResizeObserver to disconnect and observe the new container\n    // @ts-ignore\n    const resizeObserver = map._resizeObserver;\n    if (resizeObserver) {\n      resizeObserver.disconnect();\n      resizeObserver.observe(container);\n    }\n\n    // Step 4: apply new props\n    that.setProps({...props, styleDiffing: false});\n    map.resize();\n    const {initialViewState} = props;\n    if (initialViewState) {\n      if (initialViewState.bounds) {\n        map.fitBounds(initialViewState.bounds, {...initialViewState.fitBoundsOptions, duration: 0});\n      } else {\n        that._updateViewState(initialViewState, false);\n      }\n    }\n\n    // Simulate load event\n    if (map.isStyleLoaded()) {\n      map.fire('load');\n    } else {\n      map.once('styledata', () => map.fire('load'));\n    }\n\n    // Force reload\n    // @ts-ignore\n    map._update();\n    return that;\n  }\n\n  /* eslint-disable complexity,max-statements */\n  _initialize(container: HTMLDivElement) {\n    const {props} = this;\n    const mapOptions = {\n      ...props,\n      ...props.initialViewState,\n      accessToken: props.mapboxAccessToken || getAccessTokenFromEnv() || null,\n      container,\n      style: normalizeStyle(props.mapStyle)\n    };\n\n    const viewState = mapOptions.initialViewState || mapOptions.viewState || mapOptions;\n    Object.assign(mapOptions, {\n      center: [viewState.longitude || 0, viewState.latitude || 0],\n      zoom: viewState.zoom || 0,\n      pitch: viewState.pitch || 0,\n      bearing: viewState.bearing || 0\n    });\n\n    if (props.gl) {\n      // eslint-disable-next-line\n      const getContext = HTMLCanvasElement.prototype.getContext;\n      // Hijack canvas.getContext to return our own WebGLContext\n      // This will be called inside the mapboxgl.Map constructor\n      // @ts-expect-error\n      HTMLCanvasElement.prototype.getContext = () => {\n        // Unhijack immediately\n        HTMLCanvasElement.prototype.getContext = getContext;\n        return props.gl;\n      };\n    }\n\n    const map: any = new this._MapClass(mapOptions);\n    // Props that are not part of constructor options\n    if (viewState.padding) {\n      map.setPadding(viewState.padding);\n    }\n    if (props.cursor) {\n      map.getCanvas().style.cursor = props.cursor;\n    }\n    this._createShadowTransform(map);\n\n    // Hack\n    // Insert code into map's render cycle\n    const renderMap = map._render;\n    map._render = (arg: number) => {\n      this._inRender = true;\n      renderMap.call(map, arg);\n      this._inRender = false;\n    };\n    const runRenderTaskQueue = map._renderTaskQueue.run;\n    map._renderTaskQueue.run = (arg: number) => {\n      runRenderTaskQueue.call(map._renderTaskQueue, arg);\n      this._onBeforeRepaint();\n    };\n    map.on('render', () => this._onAfterRepaint());\n    // Insert code into map's event pipeline\n    const fireEvent = map.fire;\n    map.fire = this._fireEvent.bind(this, fireEvent);\n\n    // add listeners\n    map.on('resize', () => {\n      this._renderTransform.resize(map.transform.width, map.transform.height);\n    });\n    map.on('styledata', () => this._updateStyleComponents(this.props, {}));\n    map.on('sourcedata', () => this._updateStyleComponents(this.props, {}));\n    for (const eventName in pointerEvents) {\n      map.on(eventName, this._onPointerEvent);\n    }\n    for (const eventName in cameraEvents) {\n      map.on(eventName, this._onCameraEvent);\n    }\n    for (const eventName in otherEvents) {\n      map.on(eventName, this._onEvent);\n    }\n    this._map = map;\n  }\n  /* eslint-enable complexity,max-statements */\n\n  recycle() {\n    // Clean up unnecessary elements before storing for reuse.\n    const container = this.map.getContainer();\n    const children = container.querySelector('[mapboxgl-children]');\n    children?.remove();\n\n    Mapbox.savedMaps.push(this);\n  }\n\n  destroy() {\n    this._map.remove();\n  }\n\n  // Force redraw the map now. Typically resize() and jumpTo() is reflected in the next\n  // render cycle, which is managed by Mapbox's animation loop.\n  // This removes the synchronization issue caused by requestAnimationFrame.\n  redraw() {\n    const map = this._map;\n    // map._render will throw error if style does not exist\n    // https://github.com/mapbox/mapbox-gl-js/blob/fb9fc316da14e99ff4368f3e4faa3888fb43c513\n    //   /src/ui/map.js#L1834\n    if (!this._inRender && map.style) {\n      // cancel the scheduled update\n      if (map._frame) {\n        map._frame.cancel();\n        map._frame = null;\n      }\n      // the order is important - render() may schedule another update\n      map._render();\n    }\n  }\n\n  _createShadowTransform(map: any) {\n    const renderTransform = cloneTransform(map.transform);\n    map.painter.transform = renderTransform;\n\n    this._renderTransform = renderTransform;\n  }\n\n  /* Trigger map resize if size is controlled\n     @param {object} nextProps\n     @returns {bool} true if size has changed\n   */\n  _updateSize(nextProps: MapboxProps): boolean {\n    // Check if size is controlled\n    const {viewState} = nextProps;\n    if (viewState) {\n      const map = this._map;\n      if (viewState.width !== map.transform.width || viewState.height !== map.transform.height) {\n        map.resize();\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Adapted from map.jumpTo\n  /* Update camera to match props\n     @param {object} nextProps\n     @param {bool} triggerEvents - should fire camera events\n     @returns {bool} true if anything is changed\n   */\n  _updateViewState(nextProps: MapboxProps, triggerEvents: boolean): boolean {\n    if (this._internalUpdate) {\n      return false;\n    }\n    const map = this._map;\n\n    const tr = this._renderTransform;\n    // Take a snapshot of the transform before mutation\n    const {zoom, pitch, bearing} = tr;\n    const isMoving = map.isMoving();\n\n    if (isMoving) {\n      // All movement of the camera is done relative to the sea level\n      tr.cameraElevationReference = 'sea';\n    }\n    const changed = applyViewStateToTransform(tr, {\n      ...transformToViewState(map.transform),\n      ...nextProps\n    });\n    if (isMoving) {\n      // Reset camera reference\n      tr.cameraElevationReference = 'ground';\n    }\n\n    if (changed && triggerEvents) {\n      const deferredEvents = this._deferredEvents;\n      // Delay DOM control updates to the next render cycle\n      deferredEvents.move = true;\n      deferredEvents.zoom ||= zoom !== tr.zoom;\n      deferredEvents.rotate ||= bearing !== tr.bearing;\n      deferredEvents.pitch ||= pitch !== tr.pitch;\n    }\n\n    // Avoid manipulating the real transform when interaction/animation is ongoing\n    // as it would interfere with Mapbox's handlers\n    if (!isMoving) {\n      applyViewStateToTransform(map.transform, nextProps);\n    }\n\n    return changed;\n  }\n\n  /* Update camera constraints and projection settings to match props\n     @param {object} nextProps\n     @param {object} currProps\n     @returns {bool} true if anything is changed\n   */\n  _updateSettings(nextProps: MapboxProps, currProps: MapboxProps): boolean {\n    const map = this._map;\n    let changed = false;\n    for (const propName of settingNames) {\n      if (propName in nextProps && !deepEqual(nextProps[propName], currProps[propName])) {\n        changed = true;\n        map[`set${propName[0].toUpperCase()}${propName.slice(1)}`](nextProps[propName]);\n      }\n    }\n    return changed;\n  }\n\n  /* Update map style to match props\n     @param {object} nextProps\n     @param {object} currProps\n     @returns {bool} true if style is changed\n   */\n  _updateStyle(nextProps: MapboxProps, currProps: MapboxProps): boolean {\n    if (nextProps.cursor !== currProps.cursor) {\n      this._map.getCanvas().style.cursor = nextProps.cursor;\n    }\n    if (nextProps.mapStyle !== currProps.mapStyle) {\n      const options: any = {\n        diff: nextProps.styleDiffing\n      };\n      if ('localIdeographFontFamily' in nextProps) {\n        options.localIdeographFontFamily = nextProps.localIdeographFontFamily;\n      }\n      this._map.setStyle(normalizeStyle(nextProps.mapStyle), options);\n      return true;\n    }\n    return false;\n  }\n\n  /* Update fog, light and terrain to match props\n     @param {object} nextProps\n     @param {object} currProps\n     @returns {bool} true if anything is changed\n   */\n  _updateStyleComponents(nextProps: MapboxProps, currProps: MapboxProps): boolean {\n    const map = this._map;\n    let changed = false;\n    if (map.style.loaded()) {\n      if ('light' in nextProps && !deepEqual(nextProps.light, currProps.light)) {\n        changed = true;\n        map.setLight(nextProps.light);\n      }\n      if ('fog' in nextProps && !deepEqual(nextProps.fog, currProps.fog)) {\n        changed = true;\n        map.setFog(nextProps.fog);\n      }\n      if ('terrain' in nextProps && !deepEqual(nextProps.terrain, currProps.terrain)) {\n        if (!nextProps.terrain || map.getSource(nextProps.terrain.source)) {\n          changed = true;\n          map.setTerrain(nextProps.terrain);\n        }\n      }\n    }\n    return changed;\n  }\n\n  /* Update interaction handlers to match props\n     @param {object} nextProps\n     @param {object} currProps\n     @returns {bool} true if anything is changed\n   */\n  _updateHandlers(nextProps: MapboxProps, currProps: MapboxProps): boolean {\n    const map = this._map;\n    let changed = false;\n    for (const propName of handlerNames) {\n      const newValue = nextProps[propName];\n      if (!deepEqual(newValue, currProps[propName])) {\n        changed = true;\n        if (newValue) {\n          map[propName].enable(newValue);\n        } else {\n          map[propName].disable();\n        }\n      }\n    }\n    return changed;\n  }\n\n  _onEvent = (e: MapboxEvent) => {\n    // @ts-ignore\n    const cb = this.props[otherEvents[e.type]];\n    if (cb) {\n      cb(e);\n    }\n  };\n\n  private _queryRenderedFeatures(point: Point) {\n    const map = this._map;\n    const {interactiveLayerIds = []} = this.props;\n    try {\n      return map.queryRenderedFeatures(point, {\n        layers: interactiveLayerIds.filter(map.getLayer.bind(map))\n      });\n    } catch {\n      // May fail if style is not loaded\n      return [];\n    }\n  }\n\n  _updateHover(e: MapMouseEvent) {\n    const {props} = this;\n    const shouldTrackHoveredFeatures =\n      props.interactiveLayerIds && (props.onMouseMove || props.onMouseEnter || props.onMouseLeave);\n\n    if (shouldTrackHoveredFeatures) {\n      const eventType = e.type;\n      const wasHovering = this._hoveredFeatures?.length > 0;\n      const features = this._queryRenderedFeatures(e.point);\n      const isHovering = features.length > 0;\n\n      if (!isHovering && wasHovering) {\n        e.type = 'mouseleave';\n        this._onPointerEvent(e);\n      }\n      this._hoveredFeatures = features;\n      if (isHovering && !wasHovering) {\n        e.type = 'mouseenter';\n        this._onPointerEvent(e);\n      }\n      e.type = eventType;\n    } else {\n      this._hoveredFeatures = null;\n    }\n  }\n\n  _onPointerEvent = (e: MapLayerMouseEvent | MapLayerTouchEvent) => {\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      this._updateHover(e);\n    }\n\n    // @ts-ignore\n    const cb = this.props[pointerEvents[e.type]];\n    if (cb) {\n      if (this.props.interactiveLayerIds && e.type !== 'mouseover' && e.type !== 'mouseout') {\n        e.features = this._hoveredFeatures || this._queryRenderedFeatures(e.point);\n      }\n      cb(e);\n      delete e.features;\n    }\n  };\n\n  _onCameraEvent = (e: ViewStateChangeEvent) => {\n    if (!this._internalUpdate) {\n      // @ts-ignore\n      const cb = this.props[cameraEvents[e.type]];\n      if (cb) {\n        cb(e);\n      }\n    }\n    if (e.type in this._deferredEvents) {\n      this._deferredEvents[e.type] = false;\n    }\n  };\n\n  _fireEvent(baseFire: Function, event: string | MapboxEvent, properties?: object) {\n    const map = this._map;\n    const tr = map.transform;\n\n    const eventType = typeof event === 'string' ? event : event.type;\n    if (eventType === 'move') {\n      this._updateViewState(this.props, false);\n    }\n    if (eventType in cameraEvents) {\n      if (typeof event === 'object') {\n        (event as unknown as ViewStateChangeEvent).viewState = transformToViewState(tr);\n      }\n      if (this._map.isMoving()) {\n        // Replace map.transform with ours during the callbacks\n        map.transform = this._renderTransform;\n        baseFire.call(map, event, properties);\n        map.transform = tr;\n\n        return map;\n      }\n    }\n    baseFire.call(map, event, properties);\n\n    return map;\n  }\n\n  // All camera manipulations are complete, ready to repaint\n  _onBeforeRepaint() {\n    const map = this._map;\n\n    // If there are camera changes driven by props, invoke camera events so that DOM controls are synced\n    this._internalUpdate = true;\n    for (const eventType in this._deferredEvents) {\n      if (this._deferredEvents[eventType]) {\n        map.fire(eventType);\n      }\n    }\n    this._internalUpdate = false;\n\n    const tr = this._map.transform;\n    // Make sure camera matches the current props\n    this._map.transform = this._renderTransform;\n\n    this._onAfterRepaint = () => {\n      // Restores camera state before render/load events are fired\n      this._map.transform = tr;\n    };\n  }\n\n  _onAfterRepaint: () => void;\n}\n\n/**\n * Access token can be provided via one of:\n *   mapboxAccessToken prop\n *   access_token query parameter\n *   MapboxAccessToken environment variable\n *   REACT_APP_MAPBOX_ACCESS_TOKEN environment variable\n * @returns access token\n */\nfunction getAccessTokenFromEnv(): string {\n  let accessToken = null;\n\n  /* global location, process */\n  if (typeof location !== 'undefined') {\n    const match = /access_token=([^&\\/]*)/.exec(location.search);\n    accessToken = match && match[1];\n  }\n\n  // Note: This depends on bundler plugins (e.g. webpack) importing environment correctly\n  try {\n    accessToken = accessToken || process.env.MapboxAccessToken;\n  } catch {\n    // ignore\n  }\n\n  try {\n    accessToken = accessToken || process.env.REACT_APP_MAPBOX_ACCESS_TOKEN;\n  } catch {\n    // ignore\n  }\n\n  return accessToken;\n}\n", "import type {MapboxMap, LngLatLike, PointLike, ElevationQueryOptions} from '../types';\nimport type Mapbox from './mapbox';\n\n/** These methods may break the react binding if called directly */\nconst skipMethods = [\n  'setMaxBounds',\n  'setMinZoom',\n  'setMaxZoom',\n  'setMinPitch',\n  'setMaxPitch',\n  'setRenderWorldCopies',\n  'setProjection',\n  'setStyle',\n  'addSource',\n  'removeSource',\n  'addLayer',\n  'removeLayer',\n  'setLayerZoomRange',\n  'setFilter',\n  'setPaintProperty',\n  'setLayoutProperty',\n  'setLight',\n  'setTerrain',\n  'setFog',\n  'remove'\n] as const;\n\nexport type MapRef = {\n  getMap(): MapboxMap;\n} & Omit<MapboxMap, typeof skipMethods[number]>;\n\nexport default function createRef(mapInstance: Mapbox, mapLib: any): MapRef {\n  if (!mapInstance) {\n    return null;\n  }\n\n  const map: MapboxMap = mapInstance.map;\n  const result: any = {\n    getMap: () => map,\n\n    // Overwrite getters to use our shadow transform\n    getCenter: () => mapInstance.transform.center,\n    getZoom: () => mapInstance.transform.zoom,\n    getBearing: () => mapInstance.transform.bearing,\n    getPitch: () => mapInstance.transform.pitch,\n    getPadding: () => mapInstance.transform.padding,\n    getBounds: () => mapInstance.transform.getBounds(),\n    project: (lnglat: LngLatLike) => {\n      return mapInstance.transform.locationPoint(mapLib.LngLat.convert(lnglat));\n    },\n    unproject: (point: PointLike) => {\n      return mapInstance.transform.pointLocation(mapLib.Point.convert(point));\n    },\n    queryTerrainElevation: (lnglat: LngLatLike, options: ElevationQueryOptions) => {\n      // @ts-ignore transform not defined\n      const tr = map.transform;\n      // @ts-ignore transform not defined\n      map.transform = mapInstance.transform;\n      const result = map.queryTerrainElevation(lnglat, options);\n      // @ts-ignore transform not defined\n      map.transform = tr;\n      return result;\n    }\n  };\n\n  for (const key of getMethodNames(map)) {\n    // @ts-expect-error\n    if (!(key in result) && !skipMethods.includes(key)) {\n      result[key] = map[key].bind(map);\n    }\n  }\n\n  return result;\n}\n\nfunction getMethodNames(obj) {\n  const result = new Set<string>();\n\n  let proto = obj;\n  while (proto) {\n    for (const key of Object.getOwnPropertyNames(proto)) {\n      if (\n        key[0] !== '_' &&\n        typeof obj[key] === 'function' &&\n        key !== 'fire' &&\n        key !== 'setEventedParent'\n      ) {\n        result.add(key);\n      }\n    }\n    proto = Object.getPrototypeOf(proto);\n  }\n  return Array.from(result);\n}\n", "// From https://github.com/streamich/react-use/blob/master/src/useIsomorphicLayoutEffect.ts\n// useLayoutEffect but does not trigger warning in server-side rendering\nimport {useEffect, useLayoutEffect} from 'react';\n\nconst useIsomorphicLayoutEffect = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\nexport default useIsomorphicLayoutEffect;\n", "export type GlobalSettings = {\n  /** The map's default API URL for requesting tiles, styles, sprites, and glyphs. */\n  baseApiUrl?: string;\n  /** The maximum number of images (raster tiles, sprites, icons) to load in parallel.\n   * @default 16\n   */\n  maxParallelImageRequests?: number;\n  /** The map's RTL text plugin. Necessary for supporting the Arabic and Hebrew languages, which are written right-to-left.  */\n  RTLTextPlugin?: string;\n  /** Provides an interface for external module bundlers such as Webpack or Rollup to package mapbox-gl's WebWorker into a separate class and integrate it with the library.\nTakes precedence over `workerUrl`. */\n  workerClass?: any;\n  /** The number of web workers instantiated on a page with mapbox-gl maps.\n   * @default 2\n   */\n  workerCount?: number;\n  /** Provides an interface for loading mapbox-gl's WebWorker bundle from a self-hosted URL.\n   * This is useful if your site needs to operate in a strict CSP (Content Security Policy) environment\n   * wherein you are not allowed to load JavaScript code from a Blob URL, which is default behavior. */\n  workerUrl?: string;\n};\n\nconst globalSettings = [\n  'baseApiUrl',\n  'maxParallelImageRequests',\n  'workerClass',\n  'workerCount',\n  'workerUrl'\n] as const;\n\nexport default function setGlobals(mapLib: any, props: GlobalSettings) {\n  for (const key of globalSettings) {\n    if (key in props) {\n      mapLib[key] = props[key];\n    }\n  }\n\n  if (\n    props.RTLTextPlugin &&\n    mapLib.getRTLTextPluginStatus &&\n    mapLib.getRTLTextPluginStatus() === 'unavailable'\n  ) {\n    mapLib.setRTLTextPlugin(\n      props.RTLTextPlugin,\n      (error?: Error) => {\n        if (error) {\n          // eslint-disable-next-line\n          console.error(error);\n        }\n      },\n      false\n    );\n  }\n}\n", "/* global document */\nimport * as React from 'react';\nimport {createPortal} from 'react-dom';\nimport {useEffect, useMemo, useRef, useContext} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\n\nimport type {\n  MarkerDragEvent,\n  MapboxPopup,\n  PointLike,\n  Anchor,\n  Alignment,\n  MapboxEvent,\n  MapboxMarker\n} from '../types';\n\nimport {MapContext} from './map';\nimport {arePointsEqual} from '../utils/deep-equal';\n\nexport type MarkerProps = {\n  /** Longitude of the anchor location */\n  longitude: number;\n  /** Latitude of the anchor location */\n  latitude: number;\n  /** A string indicating the part of the Marker that should be positioned closest to the coordinate set via Marker.setLngLat.\n   * Options are `'center'`, `'top'`, `'bottom'`, `'left'`, `'right'`, `'top-left'`, `'top-right'`, `'bottom-left'`, and `'bottom-right'`.\n   * @default \"center\"\n   */\n  anchor?: Anchor;\n  /**\n   * The max number of pixels a user can shift the mouse pointer during a click on the marker for it to be considered a valid click\n   * (as opposed to a marker drag). The default (0) is to inherit map's clickTolerance.\n   */\n  clickTolerance?: number;\n  /** The color to use for the default marker if options.element is not provided.\n   * @default \"#3FB1CE\"\n   */\n  color?: string;\n  /** A boolean indicating whether or not a marker is able to be dragged to a new position on the map.\n   * @default false\n   */\n  draggable?: boolean;\n  /** The offset in pixels as a PointLike object to apply relative to the element's center. Negatives indicate left and up. */\n  offset?: PointLike;\n  /** `map` aligns the `Marker` to the plane of the map.\n   * `viewport` aligns the `Marker` to the plane of the viewport.\n   * `auto` automatically matches the value of `rotationAlignment`.\n   * @default \"auto\"\n   */\n  pitchAlignment?: Alignment;\n  /** The rotation angle of the marker in degrees, relative to its `rotationAlignment` setting. A positive value will rotate the marker clockwise.\n   * @default 0\n   */\n  rotation?: number;\n  /** `map` aligns the `Marker`'s rotation relative to the map, maintaining a bearing as the map rotates.\n   * `viewport` aligns the `Marker`'s rotation relative to the viewport, agnostic to map rotations.\n   * `auto` is equivalent to `viewport`.\n   * @default \"auto\"\n   */\n  rotationAlignment?: Alignment;\n  /** The scale to use for the default marker if options.element is not provided.\n   * The default scale (1) corresponds to a height of `41px` and a width of `27px`.\n   * @default 1\n   */\n  scale?: number;\n  /** A Popup instance that is bound to the marker */\n  popup?: MapboxPopup;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n  onClick?: (e: MapboxEvent<MouseEvent>) => void;\n  onDragStart?: (e: MarkerDragEvent) => void;\n  onDrag?: (e: MarkerDragEvent) => void;\n  onDragEnd?: (e: MarkerDragEvent) => void;\n  children?: React.ReactNode;\n};\n\nconst defaultProps: Partial<MarkerProps> = {\n  draggable: false,\n  popup: null,\n  rotation: 0,\n  rotationAlignment: 'auto',\n  pitchAlignment: 'auto'\n};\n\n/* eslint-disable complexity,max-statements */\nfunction Marker(props: MarkerProps) {\n  const {map, mapLib} = useContext(MapContext);\n  const thisRef = useRef({props});\n  thisRef.current.props = props;\n\n  const marker: MapboxMarker = useMemo(() => {\n    let hasChildren = false;\n    React.Children.forEach(props.children, el => {\n      if (el) {\n        hasChildren = true;\n      }\n    });\n    const options = {\n      ...props,\n      element: hasChildren ? document.createElement('div') : null\n    };\n\n    const mk = new mapLib.Marker(options).setLngLat([props.longitude, props.latitude]);\n\n    mk.getElement().addEventListener('click', (e: MouseEvent) => {\n      thisRef.current.props.onClick?.({\n        type: 'click',\n        target: mk,\n        originalEvent: e\n      });\n    });\n\n    mk.on('dragstart', e => {\n      const evt = e as MarkerDragEvent;\n      evt.lngLat = marker.getLngLat();\n      thisRef.current.props.onDragStart?.(evt);\n    });\n    mk.on('drag', e => {\n      const evt = e as MarkerDragEvent;\n      evt.lngLat = marker.getLngLat();\n      thisRef.current.props.onDrag?.(evt);\n    });\n    mk.on('dragend', e => {\n      const evt = e as MarkerDragEvent;\n      evt.lngLat = marker.getLngLat();\n      thisRef.current.props.onDragEnd?.(evt);\n    });\n\n    return mk;\n  }, []);\n\n  useEffect(() => {\n    marker.addTo(map.getMap());\n\n    return () => {\n      marker.remove();\n    };\n  }, []);\n\n  useEffect(() => {\n    applyReactStyle(marker.getElement(), props.style);\n  }, [props.style]);\n\n  if (marker.getLngLat().lng !== props.longitude || marker.getLngLat().lat !== props.latitude) {\n    marker.setLngLat([props.longitude, props.latitude]);\n  }\n  if (props.offset && !arePointsEqual(marker.getOffset(), props.offset)) {\n    marker.setOffset(props.offset);\n  }\n  if (marker.isDraggable() !== props.draggable) {\n    marker.setDraggable(props.draggable);\n  }\n  if (marker.getRotation() !== props.rotation) {\n    marker.setRotation(props.rotation);\n  }\n  if (marker.getRotationAlignment() !== props.rotationAlignment) {\n    marker.setRotationAlignment(props.rotationAlignment);\n  }\n  if (marker.getPitchAlignment() !== props.pitchAlignment) {\n    marker.setPitchAlignment(props.pitchAlignment);\n  }\n  if (marker.getPopup() !== props.popup) {\n    marker.setPopup(props.popup);\n  }\n\n  return createPortal(props.children, marker.getElement());\n}\n\nMarker.defaultProps = defaultProps;\n\n// @ts-ignore\nexport default React.memo(Marker);\n", "import * as React from 'react';\n// This is a simplified version of\n// https://github.com/facebook/react/blob/4131af3e4bf52f3a003537ec95a1655147c81270/src/renderers/dom/shared/CSSPropertyOperations.js#L62\nconst unitlessNumber = /box|flex|grid|column|lineHeight|fontWeight|opacity|order|tabSize|zIndex/;\n\nexport function applyReactStyle(element: HTMLElement, styles: React.CSSProperties) {\n  if (!element || !styles) {\n    return;\n  }\n  const style = element.style;\n\n  for (const key in styles) {\n    const value = styles[key];\n    if (Number.isFinite(value) && !unitlessNumber.test(key)) {\n      style[key] = `${value}px`;\n    } else {\n      style[key] = value;\n    }\n  }\n}\n", "/* global document */\nimport * as React from 'react';\nimport {createPortal} from 'react-dom';\nimport {useEffect, useMemo, useRef, useContext} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\n\nimport type {PopupEvent, Anchor, PointLike, MapboxPopup} from '../types';\n\nimport {MapContext} from './map';\nimport {deepEqual} from '../utils/deep-equal';\n\nexport type PopupProps = {\n  /** Longitude of the anchor location */\n  longitude: number;\n  /** Latitude of the anchor location */\n  latitude: number;\n  /**\n   * A string indicating the part of the popup that should be positioned closest to the coordinate.\n   * Options are `'center'`, `'top'`, `'bottom'`, `'left'`, `'right'`, `'top-left'`, `'top-right'`, `'bottom-left'`,\n   * and `'bottom-right'`. If unset, the anchor will be dynamically set to ensure the popup falls within the map\n   * container with a preference for `'bottom'`.\n   */\n  anchor?: Anchor;\n  /**\n   * If `true`, a close button will appear in the top right corner of the popup.\n   * @default true\n   */\n  closeButton?: boolean;\n  /**\n   * If `true`, the popup will close when the map is clicked.\n   * @default true\n   */\n  closeOnClick?: boolean;\n  /**\n   * If `true`, the popup will closed when the map moves.\n   * @default false\n   */\n  closeOnMove?: boolean;\n  /**\n   * If `true`, the popup will try to focus the first focusable element inside the popup.\n   * @default true\n   */\n  focusAfterOpen?: boolean;\n  /**\n   * A pixel offset applied to the popup's location specified as:\n   * - a single number specifying a distance from the popup's location\n   * - a PointLike specifying a constant offset\n   * - an object of Points specifing an offset for each anchor position.\n   */\n  offset?: number | PointLike | Partial<{[anchor in Anchor]: PointLike}>;\n  /** Space-separated CSS class names to add to popup container. */\n  className?: string;\n  /**\n   * A string that sets the CSS property of the popup's maximum width (for example, `'300px'`).\n   * To ensure the popup resizes to fit its content, set this property to `'none'`\n   * @default \"240px\"\n   */\n  maxWidth?: string;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n\n  onOpen?: (e: PopupEvent) => void;\n  onClose?: (e: PopupEvent) => void;\n  children?: React.ReactNode;\n};\n\n// Adapted from https://github.com/mapbox/mapbox-gl-js/blob/v1.13.0/src/ui/popup.js\nfunction getClassList(className: string) {\n  return new Set(className ? className.trim().split(/\\s+/) : []);\n}\n\n/* eslint-disable complexity,max-statements */\nfunction Popup(props: PopupProps) {\n  const {map, mapLib} = useContext(MapContext);\n  const container = useMemo(() => {\n    return document.createElement('div');\n  }, []);\n  const thisRef = useRef({props});\n  thisRef.current.props = props;\n\n  const popup: MapboxPopup = useMemo(() => {\n    const options = {...props};\n    const pp = new mapLib.Popup(options).setLngLat([props.longitude, props.latitude]);\n    pp.once('open', e => {\n      thisRef.current.props.onOpen?.(e as PopupEvent);\n    });\n    return pp;\n  }, []);\n\n  useEffect(() => {\n    const onClose = e => {\n      thisRef.current.props.onClose?.(e as PopupEvent);\n    };\n    popup.on('close', onClose);\n    popup.setDOMContent(container).addTo(map.getMap());\n\n    return () => {\n      // https://github.com/visgl/react-map-gl/issues/1825\n      // onClose should not be fired if the popup is removed by unmounting\n      // When using React strict mode, the component is mounted twice.\n      // Firing the onClose callback here would be a false signal to remove the component.\n      popup.off('close', onClose);\n      if (popup.isOpen()) {\n        popup.remove();\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    applyReactStyle(popup.getElement(), props.style);\n  }, [props.style]);\n\n  if (popup.isOpen()) {\n    if (popup.getLngLat().lng !== props.longitude || popup.getLngLat().lat !== props.latitude) {\n      popup.setLngLat([props.longitude, props.latitude]);\n    }\n    // @ts-ignore\n    if (props.offset && !deepEqual(popup.options.offset, props.offset)) {\n      popup.setOffset(props.offset);\n    }\n    // @ts-ignore\n    if (popup.options.anchor !== props.anchor || popup.options.maxWidth !== props.maxWidth) {\n      // @ts-ignore\n      popup.options.anchor = props.anchor;\n      popup.setMaxWidth(props.maxWidth);\n    }\n    // @ts-ignore\n    if (popup.options.className !== props.className) {\n      // @ts-ignore\n      const prevClassList = getClassList(popup.options.className);\n      const nextClassList = getClassList(props.className);\n\n      for (const c of prevClassList) {\n        if (!nextClassList.has(c)) {\n          popup.removeClassName(c);\n        }\n      }\n      for (const c of nextClassList) {\n        if (!prevClassList.has(c)) {\n          popup.addClassName(c);\n        }\n      }\n      // @ts-ignore\n      popup.options.className = props.className;\n    }\n  }\n\n  return createPortal(props.children, container);\n}\n\n// @ts-ignore\nexport default React.memo(Popup);\n", "import * as React from 'react';\nimport {useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, MapboxAttributionControl} from '../types';\n\nexport type AttributionControlProps = {\n  /**\n   * If true , force a compact attribution that shows the full attribution on mouse hover.\n   * If false , force the full attribution control. The default is a responsive attribution\n   * that collapses when the map is less than 640 pixels wide.  */\n  compact?: boolean;\n  /** String or strings to show in addition to any other attributions. */\n  customAttribution?: string | string[];\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nfunction AttributionControl(props: AttributionControlProps): null {\n  const ctrl = useControl<MapboxAttributionControl>(\n    ({mapLib}) => new mapLib.AttributionControl(props),\n    {\n      position: props.position\n    }\n  );\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nexport default React.memo(AttributionControl);\n", "import {useContext, useMemo, useEffect} from 'react';\nimport type {IControl, ControlPosition} from '../types';\nimport {MapContext} from './map';\nimport type {MapContextValue} from './map';\n\ntype ControlOptions = {\n  position?: ControlPosition;\n};\n\nfunction useControl<T extends IControl>(\n  onCreate: (context: MapContextValue) => T,\n  opts?: ControlOptions\n): T;\n\nfunction useControl<T extends IControl>(\n  onCreate: (context: MapContextValue) => T,\n  onRemove: (context: MapContextValue) => void,\n  opts?: ControlOptions\n): T;\n\nfunction useControl<T extends IControl>(\n  onCreate: (context: MapContextValue) => T,\n  onAdd: (context: MapContextValue) => void,\n  onRemove: (context: MapContextValue) => void,\n  opts?: ControlOptions\n): T;\n\nfunction useControl<T extends IControl>(\n  onCreate: (context: MapContextValue) => T,\n  arg1?: ((context: MapContextValue) => void) | ControlOptions,\n  arg2?: ((context: MapContextValue) => void) | ControlOptions,\n  arg3?: ControlOptions\n): T {\n  const context = useContext(MapContext);\n  const ctrl = useMemo(() => onCreate(context), []);\n\n  useEffect(() => {\n    const opts = (arg3 || arg2 || arg1) as ControlOptions;\n    const onAdd = typeof arg1 === 'function' && typeof arg2 === 'function' ? arg1 : null;\n    const onRemove = typeof arg2 === 'function' ? arg2 : typeof arg1 === 'function' ? arg1 : null;\n\n    const {map} = context;\n    if (!map.hasControl(ctrl)) {\n      map.addControl(ctrl, opts?.position);\n      if (onAdd) {\n        onAdd(context);\n      }\n    }\n\n    return () => {\n      if (onRemove) {\n        onRemove(context);\n      }\n      // Map might have been removed (parent effects are destroyed before child ones)\n      if (map.hasControl(ctrl)) {\n        map.removeControl(ctrl);\n      }\n    };\n  }, []);\n\n  return ctrl;\n}\n\nexport default useControl;\n", "/* global document */\nimport * as React from 'react';\nimport {useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, MapboxFullscreenControl} from '../types';\n\nexport type FullscreenControlProps = {\n  /** Id of the DOM element which should be made full screen. By default, the map container\n   * element will be made full screen. */\n  containerId?: string;\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nfunction FullscreenControl(props: FullscreenControlProps): null {\n  const ctrl = useControl<MapboxFullscreenControl>(\n    ({mapLib}) =>\n      new mapLib.FullscreenControl({\n        container: props.containerId && document.getElementById(props.containerId)\n      }),\n    {position: props.position}\n  );\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._controlContainer, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nexport default React.memo(FullscreenControl);\n", "import * as React from 'react';\nimport {forwardRef, useImperativeHandle, useRef, useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {\n  ControlPosition,\n  PositionOptions,\n  FitBoundsOptions,\n  MapboxGeolocateControl,\n  GeolocateEvent,\n  GeolocateResultEvent,\n  GeolocateErrorEvent\n} from '../types';\n\nexport type GeolocateControlRef = {\n  /** Triggers a geolocate event */\n  trigger: () => boolean;\n};\n\nexport type GeolocateControlProps = {\n  /**\n   * A Geolocation API PositionOptions object.\n   * @default {enableHighAccuracy:false,timeout:6000}\n   */\n  positionOptions?: PositionOptions;\n  /** A Map#fitBounds options object to use when the map is panned and zoomed to the user's location.\n   * @default {maxZoom:15}\n   */\n  fitBoundsOptions?: FitBoundsOptions;\n  /** If true the GeolocateControl becomes a toggle button and when active the map will receive\n   * updates to the user's location as it changes. Default false.\n   * @default false\n   */\n  trackUserLocation?: boolean;\n  /** Draw a transparent circle will be drawn around the user location indicating the accuracy\n   * (95% confidence level) of the user's location. Set to false to disable.\n   * This only has effect if `showUserLocation` is true.\n   * @default true\n   */\n  showAccuracyCircle?: boolean;\n  /**\n   * Show a dot on the map at the user's location. Set to false to disable.\n   * @default true\n   */\n  showUserLocation?: boolean;\n  /** If true an arrow will be drawn next to the user location dot indicating the device's heading.\n   * This only has affect when `trackUserLocation` is true. Default false.\n   * @default false\n   */\n  showUserHeading?: boolean;\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n\n  /** Called on each Geolocation API position update that returned as success. */\n  onGeolocate?: (e: GeolocateResultEvent) => void;\n  /** Called on each Geolocation API position update that returned as an error. */\n  onError?: (e: GeolocateErrorEvent) => void;\n  /** Called on each Geolocation API position update that returned as success but user position\n   * is out of map `maxBounds`. */\n  onOutOfMaxBounds?: (e: GeolocateResultEvent) => void;\n  /** Called when the GeolocateControl changes to the active lock state. */\n  onTrackUserLocationStart?: (e: GeolocateEvent) => void;\n  /** Called when the GeolocateControl changes to the background state. */\n  onTrackUserLocationEnd?: (e: GeolocateEvent) => void;\n};\n\nconst GeolocateControl = forwardRef<GeolocateControlRef, GeolocateControlProps>((props, ref) => {\n  const thisRef = useRef({props});\n\n  const ctrl = useControl<MapboxGeolocateControl>(\n    ({mapLib}) => {\n      const gc = new mapLib.GeolocateControl(props);\n\n      // Hack: fix GeolocateControl reuse\n      // When using React strict mode, the component is mounted twice.\n      // GeolocateControl's UI creation is asynchronous. Removing and adding it back causes the UI to be initialized twice.\n      const setupUI = gc._setupUI;\n      gc._setupUI = args => {\n        if (!gc._container.hasChildNodes()) {\n          setupUI(args);\n        }\n      };\n\n      gc.on('geolocate', e => {\n        thisRef.current.props.onGeolocate?.(e as GeolocateResultEvent);\n      });\n      gc.on('error', e => {\n        thisRef.current.props.onError?.(e as GeolocateErrorEvent);\n      });\n      gc.on('outofmaxbounds', e => {\n        thisRef.current.props.onOutOfMaxBounds?.(e as GeolocateResultEvent);\n      });\n      gc.on('trackuserlocationstart', e => {\n        thisRef.current.props.onTrackUserLocationStart?.(e as GeolocateEvent);\n      });\n      gc.on('trackuserlocationend', e => {\n        thisRef.current.props.onTrackUserLocationEnd?.(e as GeolocateEvent);\n      });\n\n      return gc;\n    },\n    {position: props.position}\n  );\n\n  thisRef.current.props = props;\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      trigger: () => ctrl.trigger()\n    }),\n    []\n  );\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n\n  return null;\n});\n\nGeolocateControl.displayName = 'GeolocateControl';\n\nexport default React.memo(GeolocateControl);\n", "import * as React from 'react';\nimport {useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, MapboxNavigationControl} from '../types';\n\nexport type NavigationControlProps = {\n  /** If true the compass button is included.\n   * @default true\n   */\n  showCompass?: boolean;\n  /** If true the zoom-in and zoom-out buttons are included.\n   * @default true\n   */\n  showZoom?: boolean;\n  /** If true the pitch is visualized by rotating X-axis of compass.\n   * @default false\n   */\n  visualizePitch?: boolean;\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nfunction NavigationControl(props: NavigationControlProps): null {\n  const ctrl = useControl<MapboxNavigationControl>(\n    ({mapLib}) => new mapLib.NavigationControl(props),\n    {\n      position: props.position\n    }\n  );\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nexport default React.memo(NavigationControl);\n", "import * as React from 'react';\nimport {useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, MapboxScaleControl} from '../types';\n\nexport type ScaleControlProps = {\n  /** Unit of the distance.\n   * @default \"metric\"\n   */\n  unit?: 'imperial' | 'metric' | 'nautical';\n  /** The maximum length of the scale control in pixels.\n   * @default 100\n   */\n  maxWidth?: number;\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nconst defaultProps: ScaleControlProps = {\n  unit: 'metric',\n  maxWidth: 100\n};\n\nfunction ScaleControl(props: ScaleControlProps): null {\n  const ctrl = useControl<MapboxScaleControl>(({mapLib}) => new mapLib.ScaleControl(props), {\n    position: props.position\n  });\n\n  // @ts-ignore\n  if (ctrl.options.unit !== props.unit || ctrl.options.maxWidth !== props.maxWidth) {\n    // @ts-ignore\n    ctrl.options.maxWidth = props.maxWidth;\n    // This method will trigger an update\n    ctrl.setUnit(props.unit);\n  }\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nScaleControl.defaultProps = defaultProps;\n\nexport default React.memo(ScaleControl);\n", "import * as React from 'react';\nimport {useContext, useEffect, useMemo, useState, useRef} from 'react';\nimport {cloneElement} from 'react';\nimport {MapContext} from './map';\nimport assert from '../utils/assert';\nimport {deepEqual} from '../utils/deep-equal';\n\nimport type {\n  MapboxMap,\n  AnySourceData,\n  GeoJSONSource,\n  ImageSource,\n  VideoSource,\n  AnySourceImpl\n} from '../types';\n\nexport type SourceProps = AnySourceData & {\n  id?: string;\n  children?: any;\n};\n\nlet sourceCounter = 0;\n\nfunction createSource(map: MapboxMap, id: string, props: SourceProps) {\n  // @ts-ignore\n  if (map.style && map.style._loaded) {\n    const options = {...props};\n    delete options.id;\n    delete options.children;\n    // @ts-ignore\n    map.addSource(id, options);\n    return map.getSource(id);\n  }\n  return null;\n}\n\n/* eslint-disable complexity */\nfunction updateSource(source: AnySourceImpl, props: SourceProps, prevProps: SourceProps) {\n  assert(props.id === prevProps.id, 'source id changed');\n  assert(props.type === prevProps.type, 'source type changed');\n\n  let changedKey = '';\n  let changedKeyCount = 0;\n\n  for (const key in props) {\n    if (key !== 'children' && key !== 'id' && !deepEqual(prevProps[key], props[key])) {\n      changedKey = key;\n      changedKeyCount++;\n    }\n  }\n\n  if (!changedKeyCount) {\n    return;\n  }\n\n  const type = props.type;\n\n  if (type === 'geojson') {\n    (source as GeoJSONSource).setData(props.data);\n  } else if (type === 'image') {\n    (source as ImageSource).updateImage({url: props.url, coordinates: props.coordinates});\n  } else if (\n    (type === 'canvas' || type === 'video') &&\n    changedKeyCount === 1 &&\n    changedKey === 'coordinates'\n  ) {\n    (source as VideoSource).setCoordinates(props.coordinates);\n  } else if (type === 'vector' && 'setUrl' in source) {\n    // Added in 1.12.0:\n    // vectorTileSource.setTiles\n    // vectorTileSource.setUrl\n    switch (changedKey) {\n      case 'url':\n        source.setUrl(props.url);\n        break;\n      case 'tiles':\n        source.setTiles(props.tiles);\n        break;\n      default:\n    }\n  } else {\n    // eslint-disable-next-line\n    console.warn(`Unable to update <Source> prop: ${changedKey}`);\n  }\n}\n/* eslint-enable complexity */\n\nfunction Source(props: SourceProps) {\n  const map: MapboxMap = useContext(MapContext).map.getMap();\n  const propsRef = useRef(props);\n  const [, setStyleLoaded] = useState(0);\n\n  const id = useMemo(() => props.id || `jsx-source-${sourceCounter++}`, []);\n\n  useEffect(() => {\n    if (map) {\n      const forceUpdate = () => setTimeout(() => setStyleLoaded(version => version + 1), 0);\n      map.on('styledata', forceUpdate);\n      forceUpdate();\n\n      return () => {\n        map.off('styledata', forceUpdate);\n        // @ts-ignore\n        if (map.style && map.style._loaded && map.getSource(id)) {\n          // Parent effects are destroyed before child ones, see\n          // https://github.com/facebook/react/issues/16728\n          // Source can only be removed after all child layers are removed\n          const allLayers = map.getStyle()?.layers;\n          if (allLayers) {\n            for (const layer of allLayers) {\n              // @ts-ignore (2339) source does not exist on all layer types\n              if (layer.source === id) {\n                map.removeLayer(layer.id);\n              }\n            }\n          }\n          map.removeSource(id);\n        }\n      };\n    }\n    return undefined;\n  }, [map]);\n\n  // @ts-ignore\n  let source = map && map.style && map.getSource(id);\n  if (source) {\n    updateSource(source, props, propsRef.current);\n  } else {\n    source = createSource(map, id, props);\n  }\n  propsRef.current = props;\n\n  return (\n    (source &&\n      React.Children.map(\n        props.children,\n        child =>\n          child &&\n          cloneElement(child, {\n            source: id\n          })\n      )) ||\n    null\n  );\n}\n\nexport default Source;\n", "export default function assert(condition: any, message: string) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n", "import {useContext, useEffect, useMemo, useState, useRef} from 'react';\nimport {MapContext} from './map';\nimport assert from '../utils/assert';\nimport {deepEqual} from '../utils/deep-equal';\n\nimport type {MapboxMap, AnyLayer} from '../types';\n\n// Omiting property from a union type, see\n// https://github.com/microsoft/TypeScript/issues/39556#issuecomment-656925230\ntype OptionalId<T> = T extends {id: string} ? Omit<T, 'id'> & {id?: string} : T;\n\nexport type LayerProps = OptionalId<AnyLayer> & {\n  /** If set, the layer will be inserted before the specified layer */\n  beforeId?: string;\n};\n\n/* eslint-disable complexity, max-statements */\nfunction updateLayer(map: MapboxMap, id: string, props: LayerProps, prevProps: LayerProps) {\n  assert(props.id === prevProps.id, 'layer id changed');\n  assert(props.type === prevProps.type, 'layer type changed');\n\n  if (props.type === 'custom' || prevProps.type === 'custom') {\n    return;\n  }\n\n  const {layout = {}, paint = {}, filter, minzoom, maxzoom, beforeId} = props;\n\n  if (beforeId !== prevProps.beforeId) {\n    map.moveLayer(id, beforeId);\n  }\n  if (layout !== prevProps.layout) {\n    const prevLayout = prevProps.layout || {};\n    for (const key in layout) {\n      if (!deepEqual(layout[key], prevLayout[key])) {\n        map.setLayoutProperty(id, key, layout[key]);\n      }\n    }\n    for (const key in prevLayout) {\n      if (!layout.hasOwnProperty(key)) {\n        map.setLayoutProperty(id, key, undefined);\n      }\n    }\n  }\n  if (paint !== prevProps.paint) {\n    const prevPaint = prevProps.paint || {};\n    for (const key in paint) {\n      if (!deepEqual(paint[key], prevPaint[key])) {\n        map.setPaintProperty(id, key, paint[key]);\n      }\n    }\n    for (const key in prevPaint) {\n      if (!paint.hasOwnProperty(key)) {\n        map.setPaintProperty(id, key, undefined);\n      }\n    }\n  }\n  if (!deepEqual(filter, prevProps.filter)) {\n    map.setFilter(id, filter);\n  }\n  if (minzoom !== prevProps.minzoom || maxzoom !== prevProps.maxzoom) {\n    map.setLayerZoomRange(id, minzoom, maxzoom);\n  }\n}\n\nfunction createLayer(map: MapboxMap, id: string, props: LayerProps) {\n  // @ts-ignore\n  if (map.style && map.style._loaded && (!('source' in props) || map.getSource(props.source))) {\n    const options: LayerProps = {...props, id};\n    delete options.beforeId;\n\n    // @ts-ignore\n    map.addLayer(options, props.beforeId);\n  }\n}\n\n/* eslint-enable complexity, max-statements */\n\nlet layerCounter = 0;\n\nfunction Layer(props: LayerProps) {\n  const map: MapboxMap = useContext(MapContext).map.getMap();\n  const propsRef = useRef(props);\n  const [, setStyleLoaded] = useState(0);\n\n  const id = useMemo(() => props.id || `jsx-layer-${layerCounter++}`, []);\n\n  useEffect(() => {\n    if (map) {\n      const forceUpdate = () => setStyleLoaded(version => version + 1);\n      map.on('styledata', forceUpdate);\n      forceUpdate();\n\n      return () => {\n        map.off('styledata', forceUpdate);\n        // @ts-ignore\n        if (map.style && map.style._loaded && map.getLayer(id)) {\n          map.removeLayer(id);\n        }\n      };\n    }\n    return undefined;\n  }, [map]);\n\n  // @ts-ignore\n  const layer = map && map.style && map.getLayer(id);\n  if (layer) {\n    try {\n      updateLayer(map, id, props, propsRef.current);\n    } catch (error) {\n      console.warn(error); // eslint-disable-line\n    }\n  } else {\n    createLayer(map, id, props);\n  }\n\n  // Store last rendered props\n  propsRef.current = props;\n\n  return null;\n}\n\nexport default Layer;\n"],
  "mappings": ";;;;;;;;;;;AAAA,IAAAA,SAAuB;AACvB,IAAAC,gBAQO;;;ACTP,YAAuB;AACvB,mBAAyD;AAWlD,IAAM,qBAA2B,oBAAuC,IAAI;AAE5E,IAAM,cAAsD,WAAQ;AACzE,QAAM,CAAC,MAAM,OAAO,QAAI,uBAAiC,CAAA,CAAE;AAE3D,QAAM,iBAAa,0BAAY,CAAC,KAAa,KAAa,cAAa;AACrE,YAAQ,cAAW;AACjB,UAAI,OAAO,WAAW;AACpB,cAAM,IAAI,MAAM,oCAAoC;;AAEtD,UAAI,SAAS,EAAE,GAAG;AAChB,cAAM,IAAI,MAAM,mCAAmC,IAAI;;AAEzD,aAAO,EAAC,GAAG,UAAU,CAAC,EAAE,GAAG,IAAG;IAChC,CAAC;EACH,GAAG,CAAA,CAAE;AAEL,QAAM,mBAAe,0BAAY,CAAC,KAAa,cAAa;AAC1D,YAAQ,cAAW;AACjB,UAAI,SAAS,EAAE,GAAG;AAChB,cAAM,WAAW,EAAC,GAAG,SAAQ;AAC7B,eAAO,SAAS,EAAE;AAClB,eAAO;;AAET,aAAO;IACT,CAAC;EACH,GAAG,CAAA,CAAE;AAEL,SACE,oBAAC,mBAAmB,UAAQ,EAC1B,OAAO;IACL;IACA;IACA;IACD,GAEA,MAAM,QAAQ;AAGrB;AAEM,SAAU,SAAM;;AACpB,QAAM,QAAO,SAAA,yBAAW,kBAAkB,OAAC,QAAA,OAAA,SAAA,SAAA,GAAE;AAC7C,QAAM,iBAAa,yBAAW,UAAU;AAExC,QAAM,sBAAkB,sBAAQ,MAAK;AACnC,WAAO,EAAC,GAAG,MAAM,SAAS,eAAU,QAAV,eAAU,SAAA,SAAV,WAAY,IAAG;EAC3C,GAAG,CAAC,MAAM,UAAU,CAAC;AAErB,SAAO;AACT;;;ACvDM,SAAU,eAAe,IAAa;AAC1C,QAAM,eAAe,GAAG,MAAK;AAE7B,eAAa,kBAAkB,GAAG;AAClC,SAAO;AACT;AAOM,SAAU,qBAAqB,IAAa;AAChD,SAAO;IACL,WAAW,GAAG,OAAO;IACrB,UAAU,GAAG,OAAO;IACpB,MAAM,GAAG;IACT,OAAO,GAAG;IACV,SAAS,GAAG;IACZ,SAAS,GAAG;;AAEhB;AASM,SAAU,0BAA0B,IAAe,OAAkB;AACzE,QAAM,IAAwB,MAAM,aAAa;AACjD,MAAI,UAAU;AAEd,MAAI,eAAe,KAAK,cAAc,GAAG;AACvC,UAAM,SAAS,GAAG;AAElB,OAAG,SAAS,IAAI,OAAO,YAAY,EAAE,WAAW,EAAE,QAAQ;AAC1D,cAAU,WAAW,WAAW,GAAG;;AAErC,MAAI,UAAU,GAAG;AACf,UAAM,OAAO,GAAG;AAChB,OAAG,OAAO,EAAE;AACZ,cAAU,WAAW,SAAS,GAAG;;AAEnC,MAAI,aAAa,GAAG;AAClB,UAAM,UAAU,GAAG;AACnB,OAAG,UAAU,EAAE;AACf,cAAU,WAAW,YAAY,GAAG;;AAEtC,MAAI,WAAW,GAAG;AAChB,UAAM,QAAQ,GAAG;AACjB,OAAG,QAAQ,EAAE;AACb,cAAU,WAAW,UAAU,GAAG;;AAEpC,MAAI,EAAE,WAAW,CAAC,GAAG,eAAe,EAAE,OAAO,GAAG;AAC9C,cAAU;AACV,OAAG,UAAU,EAAE;;AAEjB,SAAO;AACT;;;ACjEA,IAAM,WAAW,CAAC,QAAQ,UAAU,gBAAgB,WAAW,WAAW,UAAU,QAAQ;AAKtF,SAAU,eAAe,OAA2C;AACxE,MAAI,CAAC,OAAO;AACV,WAAO;;AAET,MAAI,OAAO,UAAU,UAAU;AAC7B,WAAO;;AAET,MAAI,UAAU,OAAO;AACnB,YAAQ,MAAM,KAAI;;AAEpB,MAAI,CAAC,MAAM,QAAQ;AACjB,WAAO;;AAET,QAAM,aAAa,CAAA;AAEnB,aAAW,SAAS,MAAM,QAAQ;AAChC,eAAW,MAAM,EAAE,IAAI;;AAGzB,QAAM,SAAS,MAAM,OAAO,IAAI,WAAQ;AAEtC,UAAM,WAAW,WAAW,MAAM,GAAG;AACrC,QAAI,kBAAkB;AAEtB,QAAI,iBAAiB,OAAO;AAC1B,wBAAkB,EAAC,GAAG,MAAK;AAE3B,aAAO,gBAAgB;;AAIzB,QAAI,UAAU;AACZ,wBAAkB,mBAAmB,EAAC,GAAG,MAAK;AAC9C,aAAO,gBAAgB;AAEvB,iBAAW,YAAY,UAAU;AAC/B,YAAI,YAAY,UAAU;AACxB,0BAAgB,QAAQ,IAAI,SAAS,QAAQ;;;;AAKnD,WAAO,mBAAmB;EAC5B,CAAC;AAGD,SAAO,EAAC,GAAG,OAAO,OAAM;AAC1B;;;AC9CM,SAAU,eAAe,GAAe,GAAa;AACzD,QAAM,KAAK,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,IAAI;AAC/C,QAAM,KAAK,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,IAAI;AAC/C,QAAM,KAAK,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,IAAI;AAC/C,QAAM,KAAK,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,IAAI;AAC/C,SAAO,OAAO,MAAM,OAAO;AAC7B;AASM,SAAU,UAAU,GAAQ,GAAM;AACtC,MAAI,MAAM,GAAG;AACX,WAAO;;AAET,MAAI,CAAC,KAAK,CAAC,GAAG;AACZ,WAAO;;AAET,MAAI,MAAM,QAAQ,CAAC,GAAG;AACpB,QAAI,CAAC,MAAM,QAAQ,CAAC,KAAK,EAAE,WAAW,EAAE,QAAQ;AAC9C,aAAO;;AAET,aAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,UAAI,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG;AAC1B,eAAO;;;AAGX,WAAO;aACE,MAAM,QAAQ,CAAC,GAAG;AAC3B,WAAO;;AAET,MAAI,OAAO,MAAM,YAAY,OAAO,MAAM,UAAU;AAClD,UAAM,QAAQ,OAAO,KAAK,CAAC;AAC3B,UAAM,QAAQ,OAAO,KAAK,CAAC;AAC3B,QAAI,MAAM,WAAW,MAAM,QAAQ;AACjC,aAAO;;AAET,eAAW,OAAO,OAAO;AACvB,UAAI,CAAC,EAAE,eAAe,GAAG,GAAG;AAC1B,eAAO;;AAET,UAAI,CAAC,UAAU,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG;AAC9B,eAAO;;;AAGX,WAAO;;AAET,SAAO;AACT;;;AC6QA,IAAM,gBAAgB;EACpB,WAAW;EACX,SAAS;EACT,WAAW;EACX,WAAW;EACX,OAAO;EACP,UAAU;EACV,YAAY;EACZ,YAAY;EACZ,UAAU;EACV,aAAa;EACb,YAAY;EACZ,UAAU;EACV,WAAW;EACX,aAAa;;AAEf,IAAM,eAAe;EACnB,WAAW;EACX,MAAM;EACN,SAAS;EACT,WAAW;EACX,MAAM;EACN,SAAS;EACT,WAAW;EACX,MAAM;EACN,SAAS;EACT,aAAa;EACb,QAAQ;EACR,WAAW;EACX,YAAY;EACZ,OAAO;EACP,UAAU;;AAEZ,IAAM,cAAc;EAClB,OAAO;EACP,cAAc;EACd,YAAY;EACZ,eAAe;EACf,QAAQ;EACR,MAAM;EACN,QAAQ;EACR,MAAM;EACN,QAAQ;EACR,MAAM;EACN,WAAW;EACX,YAAY;EACZ,OAAO;;AAET,IAAM,eAAsC;EAC1C;EACA;EACA;EACA;EACA;EACA;EACA;;AAEF,IAAM,eAAsC;EAC1C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAMF,IAAqB,SAArB,MAA2B;EAkCzB,YAAY,UAA4B,OAAoB,WAAyB;AA9B7E,SAAA,OAAY;AAaZ,SAAA,kBAA2B;AAC3B,SAAA,YAAqB;AACrB,SAAA,mBAA2C;AAC3C,SAAA,kBAKJ;MACF,MAAM;MACN,MAAM;MACN,OAAO;MACP,QAAQ;;AA8WV,SAAA,WAAW,CAAC,MAAkB;AAE5B,YAAM,KAAK,KAAK,MAAM,YAAY,EAAE,IAAI,CAAC;AACzC,UAAI,IAAI;AACN,WAAG,CAAC;;IAER;AAyCA,SAAA,kBAAkB,CAAC,MAA8C;AAC/D,UAAI,EAAE,SAAS,eAAe,EAAE,SAAS,YAAY;AACnD,aAAK,aAAa,CAAC;;AAIrB,YAAM,KAAK,KAAK,MAAM,cAAc,EAAE,IAAI,CAAC;AAC3C,UAAI,IAAI;AACN,YAAI,KAAK,MAAM,uBAAuB,EAAE,SAAS,eAAe,EAAE,SAAS,YAAY;AACrF,YAAE,WAAW,KAAK,oBAAoB,KAAK,uBAAuB,EAAE,KAAK;;AAE3E,WAAG,CAAC;AACJ,eAAO,EAAE;;IAEb;AAEA,SAAA,iBAAiB,CAAC,MAA2B;AAC3C,UAAI,CAAC,KAAK,iBAAiB;AAEzB,cAAM,KAAK,KAAK,MAAM,aAAa,EAAE,IAAI,CAAC;AAC1C,YAAI,IAAI;AACN,aAAG,CAAC;;;AAGR,UAAI,EAAE,QAAQ,KAAK,iBAAiB;AAClC,aAAK,gBAAgB,EAAE,IAAI,IAAI;;IAEnC;AAlbE,SAAK,YAAY;AACjB,SAAK,QAAQ;AACb,SAAK,YAAY,SAAS;EAC5B;EAEA,IAAI,MAAG;AACL,WAAO,KAAK;EACd;EAEA,IAAI,YAAS;AACX,WAAO,KAAK;EACd;EAEA,SAAS,OAAkB;AACzB,UAAM,WAAW,KAAK;AACtB,SAAK,QAAQ;AAEb,UAAM,kBAAkB,KAAK,gBAAgB,OAAO,QAAQ;AAC5D,QAAI,iBAAiB;AACnB,WAAK,uBAAuB,KAAK,IAAI;;AAEvC,UAAM,cAAc,KAAK,YAAY,KAAK;AAC1C,UAAM,mBAAmB,KAAK,iBAAiB,OAAO,IAAI;AAC1D,SAAK,aAAa,OAAO,QAAQ;AACjC,SAAK,uBAAuB,OAAO,QAAQ;AAC3C,SAAK,gBAAgB,OAAO,QAAQ;AAKpC,QAAI,mBAAmB,eAAgB,oBAAoB,CAAC,KAAK,KAAK,SAAQ,GAAK;AACjF,WAAK,OAAM;;EAEf;EAEA,OAAO,MAAM,OAAoB,WAAyB;AACxD,UAAM,OAAO,OAAO,UAAU,IAAG;AACjC,QAAI,CAAC,MAAM;AACT,aAAO;;AAGT,UAAM,MAAM,KAAK;AAIjB,UAAM,eAAe,IAAI,aAAY;AACrC,cAAU,YAAY,aAAa;AACnC,WAAO,aAAa,WAAW,SAAS,GAAG;AACzC,gBAAU,YAAY,aAAa,WAAW,CAAC,CAAC;;AAIlD,QAAI,aAAa;AAMjB,UAAM,iBAAiB,IAAI;AAC3B,QAAI,gBAAgB;AAClB,qBAAe,WAAU;AACzB,qBAAe,QAAQ,SAAS;;AAIlC,SAAK,SAAS,EAAC,GAAG,OAAO,cAAc,MAAK,CAAC;AAC7C,QAAI,OAAM;AACV,UAAM,EAAC,iBAAgB,IAAI;AAC3B,QAAI,kBAAkB;AACpB,UAAI,iBAAiB,QAAQ;AAC3B,YAAI,UAAU,iBAAiB,QAAQ,EAAC,GAAG,iBAAiB,kBAAkB,UAAU,EAAC,CAAC;aACrF;AACL,aAAK,iBAAiB,kBAAkB,KAAK;;;AAKjD,QAAI,IAAI,cAAa,GAAI;AACvB,UAAI,KAAK,MAAM;WACV;AACL,UAAI,KAAK,aAAa,MAAM,IAAI,KAAK,MAAM,CAAC;;AAK9C,QAAI,QAAO;AACX,WAAO;EACT;;EAGA,YAAY,WAAyB;AACnC,UAAM,EAAC,MAAK,IAAI;AAChB,UAAM,aAAa;MACjB,GAAG;MACH,GAAG,MAAM;MACT,aAAa,MAAM,qBAAqB,sBAAqB,KAAM;MACnE;MACA,OAAO,eAAe,MAAM,QAAQ;;AAGtC,UAAM,YAAY,WAAW,oBAAoB,WAAW,aAAa;AACzE,WAAO,OAAO,YAAY;MACxB,QAAQ,CAAC,UAAU,aAAa,GAAG,UAAU,YAAY,CAAC;MAC1D,MAAM,UAAU,QAAQ;MACxB,OAAO,UAAU,SAAS;MAC1B,SAAS,UAAU,WAAW;KAC/B;AAED,QAAI,MAAM,IAAI;AAEZ,YAAM,aAAa,kBAAkB,UAAU;AAI/C,wBAAkB,UAAU,aAAa,MAAK;AAE5C,0BAAkB,UAAU,aAAa;AACzC,eAAO,MAAM;MACf;;AAGF,UAAM,MAAW,IAAI,KAAK,UAAU,UAAU;AAE9C,QAAI,UAAU,SAAS;AACrB,UAAI,WAAW,UAAU,OAAO;;AAElC,QAAI,MAAM,QAAQ;AAChB,UAAI,UAAS,EAAG,MAAM,SAAS,MAAM;;AAEvC,SAAK,uBAAuB,GAAG;AAI/B,UAAM,YAAY,IAAI;AACtB,QAAI,UAAU,CAAC,QAAe;AAC5B,WAAK,YAAY;AACjB,gBAAU,KAAK,KAAK,GAAG;AACvB,WAAK,YAAY;IACnB;AACA,UAAM,qBAAqB,IAAI,iBAAiB;AAChD,QAAI,iBAAiB,MAAM,CAAC,QAAe;AACzC,yBAAmB,KAAK,IAAI,kBAAkB,GAAG;AACjD,WAAK,iBAAgB;IACvB;AACA,QAAI,GAAG,UAAU,MAAM,KAAK,gBAAe,CAAE;AAE7C,UAAM,YAAY,IAAI;AACtB,QAAI,OAAO,KAAK,WAAW,KAAK,MAAM,SAAS;AAG/C,QAAI,GAAG,UAAU,MAAK;AACpB,WAAK,iBAAiB,OAAO,IAAI,UAAU,OAAO,IAAI,UAAU,MAAM;IACxE,CAAC;AACD,QAAI,GAAG,aAAa,MAAM,KAAK,uBAAuB,KAAK,OAAO,CAAA,CAAE,CAAC;AACrE,QAAI,GAAG,cAAc,MAAM,KAAK,uBAAuB,KAAK,OAAO,CAAA,CAAE,CAAC;AACtE,eAAW,aAAa,eAAe;AACrC,UAAI,GAAG,WAAW,KAAK,eAAe;;AAExC,eAAW,aAAa,cAAc;AACpC,UAAI,GAAG,WAAW,KAAK,cAAc;;AAEvC,eAAW,aAAa,aAAa;AACnC,UAAI,GAAG,WAAW,KAAK,QAAQ;;AAEjC,SAAK,OAAO;EACd;;EAGA,UAAO;AAEL,UAAM,YAAY,KAAK,IAAI,aAAY;AACvC,UAAM,WAAW,UAAU,cAAc,qBAAqB;AAC9D,iBAAQ,QAAR,aAAQ,SAAA,SAAR,SAAU,OAAM;AAEhB,WAAO,UAAU,KAAK,IAAI;EAC5B;EAEA,UAAO;AACL,SAAK,KAAK,OAAM;EAClB;;;;EAKA,SAAM;AACJ,UAAM,MAAM,KAAK;AAIjB,QAAI,CAAC,KAAK,aAAa,IAAI,OAAO;AAEhC,UAAI,IAAI,QAAQ;AACd,YAAI,OAAO,OAAM;AACjB,YAAI,SAAS;;AAGf,UAAI,QAAO;;EAEf;EAEA,uBAAuB,KAAQ;AAC7B,UAAM,kBAAkB,eAAe,IAAI,SAAS;AACpD,QAAI,QAAQ,YAAY;AAExB,SAAK,mBAAmB;EAC1B;;;;;EAMA,YAAY,WAAsB;AAEhC,UAAM,EAAC,UAAS,IAAI;AACpB,QAAI,WAAW;AACb,YAAM,MAAM,KAAK;AACjB,UAAI,UAAU,UAAU,IAAI,UAAU,SAAS,UAAU,WAAW,IAAI,UAAU,QAAQ;AACxF,YAAI,OAAM;AACV,eAAO;;;AAGX,WAAO;EACT;;;;;;;EAQA,iBAAiB,WAAwB,eAAsB;AAC7D,QAAI,KAAK,iBAAiB;AACxB,aAAO;;AAET,UAAM,MAAM,KAAK;AAEjB,UAAM,KAAK,KAAK;AAEhB,UAAM,EAAC,MAAM,OAAO,QAAO,IAAI;AAC/B,UAAM,WAAW,IAAI,SAAQ;AAE7B,QAAI,UAAU;AAEZ,SAAG,2BAA2B;;AAEhC,UAAM,UAAU,0BAA0B,IAAI;MAC5C,GAAG,qBAAqB,IAAI,SAAS;MACrC,GAAG;KACJ;AACD,QAAI,UAAU;AAEZ,SAAG,2BAA2B;;AAGhC,QAAI,WAAW,eAAe;AAC5B,YAAM,iBAAiB,KAAK;AAE5B,qBAAe,OAAO;AACtB,qBAAe,SAAf,eAAe,OAAS,SAAS,GAAG;AACpC,qBAAe,WAAf,eAAe,SAAW,YAAY,GAAG;AACzC,qBAAe,UAAf,eAAe,QAAU,UAAU,GAAG;;AAKxC,QAAI,CAAC,UAAU;AACb,gCAA0B,IAAI,WAAW,SAAS;;AAGpD,WAAO;EACT;;;;;;EAOA,gBAAgB,WAAwB,WAAsB;AAC5D,UAAM,MAAM,KAAK;AACjB,QAAI,UAAU;AACd,eAAW,YAAY,cAAc;AACnC,UAAI,YAAY,aAAa,CAAC,UAAU,UAAU,QAAQ,GAAG,UAAU,QAAQ,CAAC,GAAG;AACjF,kBAAU;AACV,YAAI,MAAM,SAAS,CAAC,EAAE,YAAW,IAAK,SAAS,MAAM,CAAC,GAAG,EAAE,UAAU,QAAQ,CAAC;;;AAGlF,WAAO;EACT;;;;;;EAOA,aAAa,WAAwB,WAAsB;AACzD,QAAI,UAAU,WAAW,UAAU,QAAQ;AACzC,WAAK,KAAK,UAAS,EAAG,MAAM,SAAS,UAAU;;AAEjD,QAAI,UAAU,aAAa,UAAU,UAAU;AAC7C,YAAM,UAAe;QACnB,MAAM,UAAU;;AAElB,UAAI,8BAA8B,WAAW;AAC3C,gBAAQ,2BAA2B,UAAU;;AAE/C,WAAK,KAAK,SAAS,eAAe,UAAU,QAAQ,GAAG,OAAO;AAC9D,aAAO;;AAET,WAAO;EACT;;;;;;EAOA,uBAAuB,WAAwB,WAAsB;AACnE,UAAM,MAAM,KAAK;AACjB,QAAI,UAAU;AACd,QAAI,IAAI,MAAM,OAAM,GAAI;AACtB,UAAI,WAAW,aAAa,CAAC,UAAU,UAAU,OAAO,UAAU,KAAK,GAAG;AACxE,kBAAU;AACV,YAAI,SAAS,UAAU,KAAK;;AAE9B,UAAI,SAAS,aAAa,CAAC,UAAU,UAAU,KAAK,UAAU,GAAG,GAAG;AAClE,kBAAU;AACV,YAAI,OAAO,UAAU,GAAG;;AAE1B,UAAI,aAAa,aAAa,CAAC,UAAU,UAAU,SAAS,UAAU,OAAO,GAAG;AAC9E,YAAI,CAAC,UAAU,WAAW,IAAI,UAAU,UAAU,QAAQ,MAAM,GAAG;AACjE,oBAAU;AACV,cAAI,WAAW,UAAU,OAAO;;;;AAItC,WAAO;EACT;;;;;;EAOA,gBAAgB,WAAwB,WAAsB;AAC5D,UAAM,MAAM,KAAK;AACjB,QAAI,UAAU;AACd,eAAW,YAAY,cAAc;AACnC,YAAM,WAAW,UAAU,QAAQ;AACnC,UAAI,CAAC,UAAU,UAAU,UAAU,QAAQ,CAAC,GAAG;AAC7C,kBAAU;AACV,YAAI,UAAU;AACZ,cAAI,QAAQ,EAAE,OAAO,QAAQ;eACxB;AACL,cAAI,QAAQ,EAAE,QAAO;;;;AAI3B,WAAO;EACT;EAUQ,uBAAuB,OAAY;AACzC,UAAM,MAAM,KAAK;AACjB,UAAM,EAAC,sBAAsB,CAAA,EAAE,IAAI,KAAK;AACxC,QAAI;AACF,aAAO,IAAI,sBAAsB,OAAO;QACtC,QAAQ,oBAAoB,OAAO,IAAI,SAAS,KAAK,GAAG,CAAC;OAC1D;aACD,IAAA;AAEA,aAAO,CAAA;;EAEX;EAEA,aAAa,GAAgB;;AAC3B,UAAM,EAAC,MAAK,IAAI;AAChB,UAAM,6BACJ,MAAM,wBAAwB,MAAM,eAAe,MAAM,gBAAgB,MAAM;AAEjF,QAAI,4BAA4B;AAC9B,YAAM,YAAY,EAAE;AACpB,YAAM,gBAAc,KAAA,KAAK,sBAAgB,QAAA,OAAA,SAAA,SAAA,GAAE,UAAS;AACpD,YAAM,WAAW,KAAK,uBAAuB,EAAE,KAAK;AACpD,YAAM,aAAa,SAAS,SAAS;AAErC,UAAI,CAAC,cAAc,aAAa;AAC9B,UAAE,OAAO;AACT,aAAK,gBAAgB,CAAC;;AAExB,WAAK,mBAAmB;AACxB,UAAI,cAAc,CAAC,aAAa;AAC9B,UAAE,OAAO;AACT,aAAK,gBAAgB,CAAC;;AAExB,QAAE,OAAO;WACJ;AACL,WAAK,mBAAmB;;EAE5B;EA+BA,WAAW,UAAoB,OAA6B,YAAmB;AAC7E,UAAM,MAAM,KAAK;AACjB,UAAM,KAAK,IAAI;AAEf,UAAM,YAAY,OAAO,UAAU,WAAW,QAAQ,MAAM;AAC5D,QAAI,cAAc,QAAQ;AACxB,WAAK,iBAAiB,KAAK,OAAO,KAAK;;AAEzC,QAAI,aAAa,cAAc;AAC7B,UAAI,OAAO,UAAU,UAAU;AAC5B,cAA0C,YAAY,qBAAqB,EAAE;;AAEhF,UAAI,KAAK,KAAK,SAAQ,GAAI;AAExB,YAAI,YAAY,KAAK;AACrB,iBAAS,KAAK,KAAK,OAAO,UAAU;AACpC,YAAI,YAAY;AAEhB,eAAO;;;AAGX,aAAS,KAAK,KAAK,OAAO,UAAU;AAEpC,WAAO;EACT;;EAGA,mBAAgB;AACd,UAAM,MAAM,KAAK;AAGjB,SAAK,kBAAkB;AACvB,eAAW,aAAa,KAAK,iBAAiB;AAC5C,UAAI,KAAK,gBAAgB,SAAS,GAAG;AACnC,YAAI,KAAK,SAAS;;;AAGtB,SAAK,kBAAkB;AAEvB,UAAM,KAAK,KAAK,KAAK;AAErB,SAAK,KAAK,YAAY,KAAK;AAE3B,SAAK,kBAAkB,MAAK;AAE1B,WAAK,KAAK,YAAY;IACxB;EACF;;AAteO,OAAA,YAAsB,CAAA;AAmf/B,SAAS,wBAAqB;AAC5B,MAAI,cAAc;AAGlB,MAAI,OAAO,aAAa,aAAa;AACnC,UAAM,QAAQ,yBAAyB,KAAK,SAAS,MAAM;AAC3D,kBAAc,SAAS,MAAM,CAAC;;AAIhC,MAAI;AACF,kBAAc,eAAe,QAAQ,IAAI;WACzC,IAAA;;AAIF,MAAI;AACF,kBAAc,eAAe,QAAQ,IAAI;WACzC,IAAA;;AAIF,SAAO;AACT;;;ACt7BA,IAAM,cAAc;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAOY,SAAP,UAA2B,aAAqB,QAAW;AAChE,MAAI,CAAC,aAAa;AAChB,WAAO;;AAGT,QAAM,MAAiB,YAAY;AACnC,QAAM,SAAc;IAClB,QAAQ,MAAM;;IAGd,WAAW,MAAM,YAAY,UAAU;IACvC,SAAS,MAAM,YAAY,UAAU;IACrC,YAAY,MAAM,YAAY,UAAU;IACxC,UAAU,MAAM,YAAY,UAAU;IACtC,YAAY,MAAM,YAAY,UAAU;IACxC,WAAW,MAAM,YAAY,UAAU,UAAS;IAChD,SAAS,CAAC,WAAsB;AAC9B,aAAO,YAAY,UAAU,cAAc,OAAO,OAAO,QAAQ,MAAM,CAAC;IAC1E;IACA,WAAW,CAAC,UAAoB;AAC9B,aAAO,YAAY,UAAU,cAAc,OAAO,MAAM,QAAQ,KAAK,CAAC;IACxE;IACA,uBAAuB,CAAC,QAAoB,YAAkC;AAE5E,YAAM,KAAK,IAAI;AAEf,UAAI,YAAY,YAAY;AAC5B,YAAMC,UAAS,IAAI,sBAAsB,QAAQ,OAAO;AAExD,UAAI,YAAY;AAChB,aAAOA;IACT;;AAGF,aAAW,OAAO,eAAe,GAAG,GAAG;AAErC,QAAI,EAAE,OAAO,WAAW,CAAC,YAAY,SAAS,GAAG,GAAG;AAClD,aAAO,GAAG,IAAI,IAAI,GAAG,EAAE,KAAK,GAAG;;;AAInC,SAAO;AACT;AAEA,SAAS,eAAe,KAAG;AACzB,QAAM,SAAS,oBAAI,IAAG;AAEtB,MAAI,QAAQ;AACZ,SAAO,OAAO;AACZ,eAAW,OAAO,OAAO,oBAAoB,KAAK,GAAG;AACnD,UACE,IAAI,CAAC,MAAM,OACX,OAAO,IAAI,GAAG,MAAM,cACpB,QAAQ,UACR,QAAQ,oBACR;AACA,eAAO,IAAI,GAAG;;;AAGlB,YAAQ,OAAO,eAAe,KAAK;;AAErC,SAAO,MAAM,KAAK,MAAM;AAC1B;;;AC3FA,IAAAC,gBAAyC;AAEzC,IAAM,4BAA4B,OAAO,aAAa,cAAc,gCAAkB;AAEtF,IAAA,uCAAe;;;ACgBf,IAAM,iBAAiB;EACrB;EACA;EACA;EACA;EACA;;AAGY,SAAP,WAA4B,QAAa,OAAqB;AACnE,aAAW,OAAO,gBAAgB;AAChC,QAAI,OAAO,OAAO;AAChB,aAAO,GAAG,IAAI,MAAM,GAAG;;;AAI3B,MACE,MAAM,iBACN,OAAO,0BACP,OAAO,uBAAsB,MAAO,eACpC;AACA,WAAO,iBACL,MAAM,eACN,CAAC,UAAiB;AAChB,UAAI,OAAO;AAET,gBAAQ,MAAM,KAAK;;IAEvB,GACA,KAAK;;AAGX;;;AR7BO,IAAM,aAAmB,qBAA+B,IAAI;AAanE,IAAM,eAAyB;;EAE7B,SAAS;EACT,SAAS;EACT,UAAU;EACV,UAAU;;EAGV,YAAY;EACZ,SAAS;EACT,YAAY;EACZ,SAAS;EACT,UAAU;EACV,iBAAiB;EACjB,iBAAiB;EACjB,YAAY;;EAGZ,UAAU,EAAC,SAAS,GAAG,SAAS,CAAA,GAAI,QAAQ,CAAA,EAAE;EAC9C,cAAc;EACd,YAAY;EACZ,mBAAmB;;EAGnB,SAAS,OAAK,QAAQ,MAAM,EAAE,KAAK;;EAGnC,eACE;;AAGJ,IAAM,UAAM,0BAA6B,CAAC,OAAO,QAAO;AACtD,QAAM,yBAAqB,0BAAW,kBAAkB;AACxD,QAAM,CAAC,aAAa,cAAc,QAAI,wBAAiB,IAAI;AAC3D,QAAM,mBAAe,sBAAM;AAE3B,QAAM,EAAC,SAAS,aAAY,QAAI,sBAAwB,EAAC,QAAQ,MAAM,KAAK,KAAI,CAAC;AAEjF,+BAAU,MAAK;AACb,UAAM,SAAS,MAAM;AACrB,QAAI,YAAY;AAChB,QAAI;AAEJ,YAAQ,QAAQ,UAAU,OAAO,gBAAW,CAAC,EAC1C,KAAK,cAAW;AACf,UAAI,CAAC,WAAW;AACd;;AAGF,UAAI,CAAC,SAAS,KAAK;AAEjB,mBAAW,SAAS;;AAEtB,UAAI,CAAC,YAAY,CAAC,SAAS,KAAK;AAC9B,cAAM,IAAI,MAAM,gBAAgB;;AAKlC,iBAAW,UAAU,KAAK;AAC1B,UAAI,CAAC,SAAS,aAAa,SAAS,UAAU,KAAK,GAAG;AACpD,YAAI,MAAM,WAAW;AACnB,mBAAS,OAAO,MAAM,OAAO,aAAa,OAAO;;AAEnD,YAAI,CAAC,QAAQ;AACX,mBAAS,IAAI,OAAO,SAAS,KAAK,OAAO,aAAa,OAAO;;AAE/D,qBAAa,MAAM,UAAU,QAAQ,QAAQ;AAC7C,qBAAa,SAAS;AAEtB,uBAAe,MAAM;AACrB,+BAAkB,QAAlB,uBAAkB,SAAA,SAAlB,mBAAoB,WAAW,aAAa,KAAK,MAAM,EAAE;aACpD;AACL,cAAM,IAAI,MAAM,sCAAsC;;IAE1D,CAAC,EACA,MAAM,WAAQ;AACb,YAAM,QAAQ;QACZ,MAAM;QACN,QAAQ;QACR,eAAe;QACf;OACD;IACH,CAAC;AAEH,WAAO,MAAK;AACV,kBAAY;AACZ,UAAI,QAAQ;AACV,+BAAkB,QAAlB,uBAAkB,SAAA,SAAlB,mBAAoB,aAAa,MAAM,EAAE;AACzC,YAAI,MAAM,WAAW;AACnB,iBAAO,QAAO;eACT;AACL,iBAAO,QAAO;;;IAGpB;EACF,GAAG,CAAA,CAAE;AAEL,uCAA0B,MAAK;AAC7B,QAAI,aAAa;AACf,kBAAY,SAAS,KAAK;;EAE9B,CAAC;AAED,yCAAoB,KAAK,MAAM,aAAa,KAAK,CAAC,WAAW,CAAC;AAE9D,QAAM,YAAuB,uBAC3B,OAAO;IACL,UAAU;IACV,OAAO;IACP,QAAQ;IACR,GAAG,MAAM;MAEX,CAAC,MAAM,KAAK,CAAC;AAGf,QAAM,wBAAwB;IAC5B,QAAQ;;AAGV,SACE,qBAAA,OAAA,EAAK,IAAI,MAAM,IAAI,KAAK,cAAc,MAAY,GAC/C,eACC;IAAC,WAAW;IAAQ,EAAC,OAAO,aAAY;IACtC,qBAAA,OAAA,EAAA,qBAAuB,IAAG,OAAO,sBAAqB,GACnD,MAAM,QAAQ;EACX,CAET;AAGP,CAAC;AAED,IAAI,cAAc;AAClB,IAAI,eAAe;AAEnB,IAAA,cAAe;;;AS5Kf,IAAAC,SAAuB;AACvB,uBAA2B;AAC3B,IAAAC,gBAAqD;;;ACArD,IAAM,iBAAiB;AAEjB,SAAU,gBAAgB,SAAsB,QAA2B;AAC/E,MAAI,CAAC,WAAW,CAAC,QAAQ;AACvB;;AAEF,QAAM,QAAQ,QAAQ;AAEtB,aAAW,OAAO,QAAQ;AACxB,UAAM,QAAQ,OAAO,GAAG;AACxB,QAAI,OAAO,SAAS,KAAK,KAAK,CAAC,eAAe,KAAK,GAAG,GAAG;AACvD,YAAM,GAAG,IAAI,GAAG;WACX;AACL,YAAM,GAAG,IAAI;;;AAGnB;;;ADyDA,IAAMC,gBAAqC;EACzC,WAAW;EACX,OAAO;EACP,UAAU;EACV,mBAAmB;EACnB,gBAAgB;;AAIlB,SAAS,OAAO,OAAkB;AAChC,QAAM,EAAC,KAAK,OAAM,QAAI,0BAAW,UAAU;AAC3C,QAAM,cAAU,sBAAO,EAAC,MAAK,CAAC;AAC9B,UAAQ,QAAQ,QAAQ;AAExB,QAAM,aAAuB,uBAAQ,MAAK;AACxC,QAAI,cAAc;AAClB,IAAM,gBAAS,QAAQ,MAAM,UAAU,QAAK;AAC1C,UAAI,IAAI;AACN,sBAAc;;IAElB,CAAC;AACD,UAAM,UAAU;MACd,GAAG;MACH,SAAS,cAAc,SAAS,cAAc,KAAK,IAAI;;AAGzD,UAAM,KAAK,IAAI,OAAO,OAAO,OAAO,EAAE,UAAU,CAAC,MAAM,WAAW,MAAM,QAAQ,CAAC;AAEjF,OAAG,WAAU,EAAG,iBAAiB,SAAS,CAAC,MAAiB;;AAC1D,OAAA,MAAA,KAAA,QAAQ,QAAQ,OAAM,aAAO,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,IAAG;QAC9B,MAAM;QACN,QAAQ;QACR,eAAe;OAChB;IACH,CAAC;AAED,OAAG,GAAG,aAAa,OAAI;;AACrB,YAAM,MAAM;AACZ,UAAI,SAAS,OAAO,UAAS;AAC7B,OAAA,MAAA,KAAA,QAAQ,QAAQ,OAAM,iBAAW,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,IAAG,GAAG;IACzC,CAAC;AACD,OAAG,GAAG,QAAQ,OAAI;;AAChB,YAAM,MAAM;AACZ,UAAI,SAAS,OAAO,UAAS;AAC7B,OAAA,MAAA,KAAA,QAAQ,QAAQ,OAAM,YAAM,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,IAAG,GAAG;IACpC,CAAC;AACD,OAAG,GAAG,WAAW,OAAI;;AACnB,YAAM,MAAM;AACZ,UAAI,SAAS,OAAO,UAAS;AAC7B,OAAA,MAAA,KAAA,QAAQ,QAAQ,OAAM,eAAS,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,IAAG,GAAG;IACvC,CAAC;AAED,WAAO;EACT,GAAG,CAAA,CAAE;AAEL,+BAAU,MAAK;AACb,WAAO,MAAM,IAAI,OAAM,CAAE;AAEzB,WAAO,MAAK;AACV,aAAO,OAAM;IACf;EACF,GAAG,CAAA,CAAE;AAEL,+BAAU,MAAK;AACb,oBAAgB,OAAO,WAAU,GAAI,MAAM,KAAK;EAClD,GAAG,CAAC,MAAM,KAAK,CAAC;AAEhB,MAAI,OAAO,UAAS,EAAG,QAAQ,MAAM,aAAa,OAAO,UAAS,EAAG,QAAQ,MAAM,UAAU;AAC3F,WAAO,UAAU,CAAC,MAAM,WAAW,MAAM,QAAQ,CAAC;;AAEpD,MAAI,MAAM,UAAU,CAAC,eAAe,OAAO,UAAS,GAAI,MAAM,MAAM,GAAG;AACrE,WAAO,UAAU,MAAM,MAAM;;AAE/B,MAAI,OAAO,YAAW,MAAO,MAAM,WAAW;AAC5C,WAAO,aAAa,MAAM,SAAS;;AAErC,MAAI,OAAO,YAAW,MAAO,MAAM,UAAU;AAC3C,WAAO,YAAY,MAAM,QAAQ;;AAEnC,MAAI,OAAO,qBAAoB,MAAO,MAAM,mBAAmB;AAC7D,WAAO,qBAAqB,MAAM,iBAAiB;;AAErD,MAAI,OAAO,kBAAiB,MAAO,MAAM,gBAAgB;AACvD,WAAO,kBAAkB,MAAM,cAAc;;AAE/C,MAAI,OAAO,SAAQ,MAAO,MAAM,OAAO;AACrC,WAAO,SAAS,MAAM,KAAK;;AAG7B,aAAO,+BAAa,MAAM,UAAU,OAAO,WAAU,CAAE;AACzD;AAEA,OAAO,eAAeA;AAGtB,IAAA,iBAAqB,YAAK,MAAM;;;AE1KhC,IAAAC,SAAuB;AACvB,IAAAC,oBAA2B;AAC3B,IAAAC,gBAAqD;AAgErD,SAAS,aAAa,WAAiB;AACrC,SAAO,IAAI,IAAI,YAAY,UAAU,KAAI,EAAG,MAAM,KAAK,IAAI,CAAA,CAAE;AAC/D;AAGA,SAAS,MAAM,OAAiB;AAC9B,QAAM,EAAC,KAAK,OAAM,QAAI,0BAAW,UAAU;AAC3C,QAAM,gBAAY,uBAAQ,MAAK;AAC7B,WAAO,SAAS,cAAc,KAAK;EACrC,GAAG,CAAA,CAAE;AACL,QAAM,cAAU,sBAAO,EAAC,MAAK,CAAC;AAC9B,UAAQ,QAAQ,QAAQ;AAExB,QAAM,YAAqB,uBAAQ,MAAK;AACtC,UAAM,UAAU,EAAC,GAAG,MAAK;AACzB,UAAM,KAAK,IAAI,OAAO,MAAM,OAAO,EAAE,UAAU,CAAC,MAAM,WAAW,MAAM,QAAQ,CAAC;AAChF,OAAG,KAAK,QAAQ,OAAI;;AAClB,OAAA,MAAA,KAAA,QAAQ,QAAQ,OAAM,YAAM,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,IAAG,CAAe;IAChD,CAAC;AACD,WAAO;EACT,GAAG,CAAA,CAAE;AAEL,+BAAU,MAAK;AACb,UAAM,UAAU,OAAI;;AAClB,OAAA,MAAA,KAAA,QAAQ,QAAQ,OAAM,aAAO,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,IAAG,CAAe;IACjD;AACA,UAAM,GAAG,SAAS,OAAO;AACzB,UAAM,cAAc,SAAS,EAAE,MAAM,IAAI,OAAM,CAAE;AAEjD,WAAO,MAAK;AAKV,YAAM,IAAI,SAAS,OAAO;AAC1B,UAAI,MAAM,OAAM,GAAI;AAClB,cAAM,OAAM;;IAEhB;EACF,GAAG,CAAA,CAAE;AAEL,+BAAU,MAAK;AACb,oBAAgB,MAAM,WAAU,GAAI,MAAM,KAAK;EACjD,GAAG,CAAC,MAAM,KAAK,CAAC;AAEhB,MAAI,MAAM,OAAM,GAAI;AAClB,QAAI,MAAM,UAAS,EAAG,QAAQ,MAAM,aAAa,MAAM,UAAS,EAAG,QAAQ,MAAM,UAAU;AACzF,YAAM,UAAU,CAAC,MAAM,WAAW,MAAM,QAAQ,CAAC;;AAGnD,QAAI,MAAM,UAAU,CAAC,UAAU,MAAM,QAAQ,QAAQ,MAAM,MAAM,GAAG;AAClE,YAAM,UAAU,MAAM,MAAM;;AAG9B,QAAI,MAAM,QAAQ,WAAW,MAAM,UAAU,MAAM,QAAQ,aAAa,MAAM,UAAU;AAEtF,YAAM,QAAQ,SAAS,MAAM;AAC7B,YAAM,YAAY,MAAM,QAAQ;;AAGlC,QAAI,MAAM,QAAQ,cAAc,MAAM,WAAW;AAE/C,YAAM,gBAAgB,aAAa,MAAM,QAAQ,SAAS;AAC1D,YAAM,gBAAgB,aAAa,MAAM,SAAS;AAElD,iBAAW,KAAK,eAAe;AAC7B,YAAI,CAAC,cAAc,IAAI,CAAC,GAAG;AACzB,gBAAM,gBAAgB,CAAC;;;AAG3B,iBAAW,KAAK,eAAe;AAC7B,YAAI,CAAC,cAAc,IAAI,CAAC,GAAG;AACzB,gBAAM,aAAa,CAAC;;;AAIxB,YAAM,QAAQ,YAAY,MAAM;;;AAIpC,aAAO,gCAAa,MAAM,UAAU,SAAS;AAC/C;AAGA,IAAA,gBAAqB,YAAK,KAAK;;;ACvJ/B,IAAAC,SAAuB;AACvB,IAAAC,gBAAwB;;;ACDxB,IAAAC,gBAA6C;AA2B7C,SAAS,WACP,UACA,MACA,MACA,MAAqB;AAErB,QAAM,cAAU,0BAAW,UAAU;AACrC,QAAM,WAAO,uBAAQ,MAAM,SAAS,OAAO,GAAG,CAAA,CAAE;AAEhD,+BAAU,MAAK;AACb,UAAM,OAAQ,QAAQ,QAAQ;AAC9B,UAAM,QAAQ,OAAO,SAAS,cAAc,OAAO,SAAS,aAAa,OAAO;AAChF,UAAM,WAAW,OAAO,SAAS,aAAa,OAAO,OAAO,SAAS,aAAa,OAAO;AAEzF,UAAM,EAAC,IAAG,IAAI;AACd,QAAI,CAAC,IAAI,WAAW,IAAI,GAAG;AACzB,UAAI,WAAW,MAAM,SAAI,QAAJ,SAAI,SAAA,SAAJ,KAAM,QAAQ;AACnC,UAAI,OAAO;AACT,cAAM,OAAO;;;AAIjB,WAAO,MAAK;AACV,UAAI,UAAU;AACZ,iBAAS,OAAO;;AAGlB,UAAI,IAAI,WAAW,IAAI,GAAG;AACxB,YAAI,cAAc,IAAI;;IAE1B;EACF,GAAG,CAAA,CAAE;AAEL,SAAO;AACT;AAEA,IAAA,sBAAe;;;AD1Cf,SAAS,mBAAmB,OAA8B;AACxD,QAAM,OAAO,oBACX,CAAC,EAAC,OAAM,MAAM,IAAI,OAAO,mBAAmB,KAAK,GACjD;IACE,UAAU,MAAM;GACjB;AAGH,+BAAU,MAAK;AAEb,oBAAgB,KAAK,YAAY,MAAM,KAAK;EAC9C,GAAG,CAAC,MAAM,KAAK,CAAC;AAEhB,SAAO;AACT;AAEA,IAAA,8BAAqB,YAAK,kBAAkB;;;AEpC5C,IAAAC,SAAuB;AACvB,IAAAC,gBAAwB;AAgBxB,SAAS,kBAAkB,OAA6B;AACtD,QAAM,OAAO,oBACX,CAAC,EAAC,OAAM,MACN,IAAI,OAAO,kBAAkB;IAC3B,WAAW,MAAM,eAAe,SAAS,eAAe,MAAM,WAAW;GAC1E,GACH,EAAC,UAAU,MAAM,SAAQ,CAAC;AAG5B,+BAAU,MAAK;AAEb,oBAAgB,KAAK,mBAAmB,MAAM,KAAK;EACrD,GAAG,CAAC,MAAM,KAAK,CAAC;AAEhB,SAAO;AACT;AAEA,IAAA,6BAAqB,YAAK,iBAAiB;;;ACnC3C,IAAAC,SAAuB;AACvB,IAAAC,gBAAiE;AAoEjE,IAAM,uBAAmB,0BAAuD,CAAC,OAAO,QAAO;AAC7F,QAAM,cAAU,sBAAO,EAAC,MAAK,CAAC;AAE9B,QAAM,OAAO,oBACX,CAAC,EAAC,OAAM,MAAK;AACX,UAAM,KAAK,IAAI,OAAO,iBAAiB,KAAK;AAK5C,UAAM,UAAU,GAAG;AACnB,OAAG,WAAW,UAAO;AACnB,UAAI,CAAC,GAAG,WAAW,cAAa,GAAI;AAClC,gBAAQ,IAAI;;IAEhB;AAEA,OAAG,GAAG,aAAa,OAAI;;AACrB,OAAA,MAAA,KAAA,QAAQ,QAAQ,OAAM,iBAAW,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,IAAG,CAAyB;IAC/D,CAAC;AACD,OAAG,GAAG,SAAS,OAAI;;AACjB,OAAA,MAAA,KAAA,QAAQ,QAAQ,OAAM,aAAO,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,IAAG,CAAwB;IAC1D,CAAC;AACD,OAAG,GAAG,kBAAkB,OAAI;;AAC1B,OAAA,MAAA,KAAA,QAAQ,QAAQ,OAAM,sBAAgB,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,IAAG,CAAyB;IACpE,CAAC;AACD,OAAG,GAAG,0BAA0B,OAAI;;AAClC,OAAA,MAAA,KAAA,QAAQ,QAAQ,OAAM,8BAAwB,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,IAAG,CAAmB;IACtE,CAAC;AACD,OAAG,GAAG,wBAAwB,OAAI;;AAChC,OAAA,MAAA,KAAA,QAAQ,QAAQ,OAAM,4BAAsB,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,IAAG,CAAmB;IACpE,CAAC;AAED,WAAO;EACT,GACA,EAAC,UAAU,MAAM,SAAQ,CAAC;AAG5B,UAAQ,QAAQ,QAAQ;AAExB,yCACE,KACA,OAAO;IACL,SAAS,MAAM,KAAK,QAAO;MAE7B,CAAA,CAAE;AAGJ,+BAAU,MAAK;AAEb,oBAAgB,KAAK,YAAY,MAAM,KAAK;EAC9C,GAAG,CAAC,MAAM,KAAK,CAAC;AAEhB,SAAO;AACT,CAAC;AAED,iBAAiB,cAAc;AAE/B,IAAA,4BAAqB,YAAK,gBAAgB;;;AC/H1C,IAAAC,SAAuB;AACvB,IAAAC,iBAAwB;AAyBxB,SAAS,kBAAkB,OAA6B;AACtD,QAAM,OAAO,oBACX,CAAC,EAAC,OAAM,MAAM,IAAI,OAAO,kBAAkB,KAAK,GAChD;IACE,UAAU,MAAM;GACjB;AAGH,gCAAU,MAAK;AAEb,oBAAgB,KAAK,YAAY,MAAM,KAAK;EAC9C,GAAG,CAAC,MAAM,KAAK,CAAC;AAEhB,SAAO;AACT;AAEA,IAAA,6BAAqB,YAAK,iBAAiB;;;AC1C3C,IAAAC,SAAuB;AACvB,IAAAC,iBAAwB;AAqBxB,IAAMC,gBAAkC;EACtC,MAAM;EACN,UAAU;;AAGZ,SAAS,aAAa,OAAwB;AAC5C,QAAM,OAAO,oBAA+B,CAAC,EAAC,OAAM,MAAM,IAAI,OAAO,aAAa,KAAK,GAAG;IACxF,UAAU,MAAM;GACjB;AAGD,MAAI,KAAK,QAAQ,SAAS,MAAM,QAAQ,KAAK,QAAQ,aAAa,MAAM,UAAU;AAEhF,SAAK,QAAQ,WAAW,MAAM;AAE9B,SAAK,QAAQ,MAAM,IAAI;;AAGzB,gCAAU,MAAK;AAEb,oBAAgB,KAAK,YAAY,MAAM,KAAK;EAC9C,GAAG,CAAC,MAAM,KAAK,CAAC;AAEhB,SAAO;AACT;AAEA,aAAa,eAAeA;AAE5B,IAAA,wBAAqB,YAAK,YAAY;;;AClDtC,IAAAC,UAAuB;AACvB,IAAAC,iBAA+D;AAC/D,IAAAA,iBAA2B;;;ACFb,SAAP,OAAwB,WAAgB,SAAe;AAC5D,MAAI,CAAC,WAAW;AACd,UAAM,IAAI,MAAM,OAAO;;AAE3B;;;ADiBA,IAAI,gBAAgB;AAEpB,SAAS,aAAa,KAAgB,IAAY,OAAkB;AAElE,MAAI,IAAI,SAAS,IAAI,MAAM,SAAS;AAClC,UAAM,UAAU,EAAC,GAAG,MAAK;AACzB,WAAO,QAAQ;AACf,WAAO,QAAQ;AAEf,QAAI,UAAU,IAAI,OAAO;AACzB,WAAO,IAAI,UAAU,EAAE;;AAEzB,SAAO;AACT;AAGA,SAAS,aAAa,QAAuB,OAAoB,WAAsB;AACrF,SAAO,MAAM,OAAO,UAAU,IAAI,mBAAmB;AACrD,SAAO,MAAM,SAAS,UAAU,MAAM,qBAAqB;AAE3D,MAAI,aAAa;AACjB,MAAI,kBAAkB;AAEtB,aAAW,OAAO,OAAO;AACvB,QAAI,QAAQ,cAAc,QAAQ,QAAQ,CAAC,UAAU,UAAU,GAAG,GAAG,MAAM,GAAG,CAAC,GAAG;AAChF,mBAAa;AACb;;;AAIJ,MAAI,CAAC,iBAAiB;AACpB;;AAGF,QAAM,OAAO,MAAM;AAEnB,MAAI,SAAS,WAAW;AACrB,WAAyB,QAAQ,MAAM,IAAI;aACnC,SAAS,SAAS;AAC1B,WAAuB,YAAY,EAAC,KAAK,MAAM,KAAK,aAAa,MAAM,YAAW,CAAC;cAEnF,SAAS,YAAY,SAAS,YAC/B,oBAAoB,KACpB,eAAe,eACf;AACC,WAAuB,eAAe,MAAM,WAAW;aAC/C,SAAS,YAAY,YAAY,QAAQ;AAIlD,YAAQ,YAAY;MAClB,KAAK;AACH,eAAO,OAAO,MAAM,GAAG;AACvB;MACF,KAAK;AACH,eAAO,SAAS,MAAM,KAAK;AAC3B;MACF;;SAEG;AAEL,YAAQ,KAAK,mCAAmC,YAAY;;AAEhE;AAGA,SAAS,OAAO,OAAkB;AAChC,QAAM,UAAiB,2BAAW,UAAU,EAAE,IAAI,OAAM;AACxD,QAAM,eAAW,uBAAO,KAAK;AAC7B,QAAM,CAAC,EAAE,cAAc,QAAI,yBAAS,CAAC;AAErC,QAAM,SAAK,wBAAQ,MAAM,MAAM,MAAM,cAAc,mBAAmB,CAAA,CAAE;AAExE,gCAAU,MAAK;AACb,QAAI,KAAK;AACP,YAAM,cAAc,MAAM,WAAW,MAAM,eAAe,aAAW,UAAU,CAAC,GAAG,CAAC;AACpF,UAAI,GAAG,aAAa,WAAW;AAC/B,kBAAW;AAEX,aAAO,MAAK;;AACV,YAAI,IAAI,aAAa,WAAW;AAEhC,YAAI,IAAI,SAAS,IAAI,MAAM,WAAW,IAAI,UAAU,EAAE,GAAG;AAIvD,gBAAM,aAAY,KAAA,IAAI,SAAQ,OAAE,QAAA,OAAA,SAAA,SAAA,GAAE;AAClC,cAAI,WAAW;AACb,uBAAW,SAAS,WAAW;AAE7B,kBAAI,MAAM,WAAW,IAAI;AACvB,oBAAI,YAAY,MAAM,EAAE;;;;AAI9B,cAAI,aAAa,EAAE;;MAEvB;;AAEF,WAAO;EACT,GAAG,CAAC,GAAG,CAAC;AAGR,MAAI,SAAS,OAAO,IAAI,SAAS,IAAI,UAAU,EAAE;AACjD,MAAI,QAAQ;AACV,iBAAa,QAAQ,OAAO,SAAS,OAAO;SACvC;AACL,aAAS,aAAa,KAAK,IAAI,KAAK;;AAEtC,WAAS,UAAU;AAEnB,SACG,UACO,iBAAS,IACb,MAAM,UACN,WACE,aACA,6BAAa,OAAO;IAClB,QAAQ;GACT,CAAC,KAER;AAEJ;AAEA,IAAA,iBAAe;;;AElJf,IAAAC,iBAA+D;AAiB/D,SAAS,YAAY,KAAgB,IAAY,OAAmB,WAAqB;AACvF,SAAO,MAAM,OAAO,UAAU,IAAI,kBAAkB;AACpD,SAAO,MAAM,SAAS,UAAU,MAAM,oBAAoB;AAE1D,MAAI,MAAM,SAAS,YAAY,UAAU,SAAS,UAAU;AAC1D;;AAGF,QAAM,EAAC,SAAS,CAAA,GAAI,QAAQ,CAAA,GAAI,QAAQ,SAAS,SAAS,SAAQ,IAAI;AAEtE,MAAI,aAAa,UAAU,UAAU;AACnC,QAAI,UAAU,IAAI,QAAQ;;AAE5B,MAAI,WAAW,UAAU,QAAQ;AAC/B,UAAM,aAAa,UAAU,UAAU,CAAA;AACvC,eAAW,OAAO,QAAQ;AACxB,UAAI,CAAC,UAAU,OAAO,GAAG,GAAG,WAAW,GAAG,CAAC,GAAG;AAC5C,YAAI,kBAAkB,IAAI,KAAK,OAAO,GAAG,CAAC;;;AAG9C,eAAW,OAAO,YAAY;AAC5B,UAAI,CAAC,OAAO,eAAe,GAAG,GAAG;AAC/B,YAAI,kBAAkB,IAAI,KAAK,MAAS;;;;AAI9C,MAAI,UAAU,UAAU,OAAO;AAC7B,UAAM,YAAY,UAAU,SAAS,CAAA;AACrC,eAAW,OAAO,OAAO;AACvB,UAAI,CAAC,UAAU,MAAM,GAAG,GAAG,UAAU,GAAG,CAAC,GAAG;AAC1C,YAAI,iBAAiB,IAAI,KAAK,MAAM,GAAG,CAAC;;;AAG5C,eAAW,OAAO,WAAW;AAC3B,UAAI,CAAC,MAAM,eAAe,GAAG,GAAG;AAC9B,YAAI,iBAAiB,IAAI,KAAK,MAAS;;;;AAI7C,MAAI,CAAC,UAAU,QAAQ,UAAU,MAAM,GAAG;AACxC,QAAI,UAAU,IAAI,MAAM;;AAE1B,MAAI,YAAY,UAAU,WAAW,YAAY,UAAU,SAAS;AAClE,QAAI,kBAAkB,IAAI,SAAS,OAAO;;AAE9C;AAEA,SAAS,YAAY,KAAgB,IAAY,OAAiB;AAEhE,MAAI,IAAI,SAAS,IAAI,MAAM,YAAY,EAAE,YAAY,UAAU,IAAI,UAAU,MAAM,MAAM,IAAI;AAC3F,UAAM,UAAsB,EAAC,GAAG,OAAO,GAAE;AACzC,WAAO,QAAQ;AAGf,QAAI,SAAS,SAAS,MAAM,QAAQ;;AAExC;AAIA,IAAI,eAAe;AAEnB,SAAS,MAAM,OAAiB;AAC9B,QAAM,UAAiB,2BAAW,UAAU,EAAE,IAAI,OAAM;AACxD,QAAM,eAAW,uBAAO,KAAK;AAC7B,QAAM,CAAC,EAAE,cAAc,QAAI,yBAAS,CAAC;AAErC,QAAM,SAAK,wBAAQ,MAAM,MAAM,MAAM,aAAa,kBAAkB,CAAA,CAAE;AAEtE,gCAAU,MAAK;AACb,QAAI,KAAK;AACP,YAAM,cAAc,MAAM,eAAe,aAAW,UAAU,CAAC;AAC/D,UAAI,GAAG,aAAa,WAAW;AAC/B,kBAAW;AAEX,aAAO,MAAK;AACV,YAAI,IAAI,aAAa,WAAW;AAEhC,YAAI,IAAI,SAAS,IAAI,MAAM,WAAW,IAAI,SAAS,EAAE,GAAG;AACtD,cAAI,YAAY,EAAE;;MAEtB;;AAEF,WAAO;EACT,GAAG,CAAC,GAAG,CAAC;AAGR,QAAM,QAAQ,OAAO,IAAI,SAAS,IAAI,SAAS,EAAE;AACjD,MAAI,OAAO;AACT,QAAI;AACF,kBAAY,KAAK,IAAI,OAAO,SAAS,OAAO;aACrC,OAAP;AACA,cAAQ,KAAK,KAAK;;SAEf;AACL,gBAAY,KAAK,IAAI,KAAK;;AAI5B,WAAS,UAAU;AAEnB,SAAO;AACT;AAEA,IAAA,gBAAe;",
  "names": ["React", "import_react", "result", "import_react", "React", "import_react", "defaultProps", "React", "import_react_dom", "import_react", "React", "import_react", "import_react", "React", "import_react", "React", "import_react", "React", "import_react", "React", "import_react", "defaultProps", "React", "import_react", "import_react"]
}
