{
  "version": 3,
  "sources": ["../../polygon-clipping/dist/polygon-clipping.umd.js", "../../@turf/invariant/dist/js/index.js", "../../@turf/union/dist/js/index.js", "../../@turf/difference/dist/js/index.js", "../../@turf/intersect/dist/js/index.js", "../../@turf/rewind/node_modules/@turf/clone/main.es.js", "../../@turf/boolean-clockwise/node_modules/@turf/helpers/main.es.js", "../../@turf/boolean-clockwise/node_modules/@turf/invariant/main.es.js", "../../@turf/boolean-clockwise/main.es.js", "../../@turf/rewind/node_modules/@turf/helpers/main.es.js", "../../@turf/rewind/node_modules/@turf/meta/main.es.js", "../../@turf/rewind/node_modules/@turf/invariant/main.es.js", "../../@turf/rewind/main.es.js", "../../@turf/destination/dist/js/index.js", "../../@turf/bearing/dist/js/index.js", "../../@turf/distance/dist/js/index.js", "../../@turf/rhumb-distance/dist/js/index.js", "../../@turf/point-to-line-distance/dist/js/index.js", "../../viewport-mercator-project/module.js", "../../@nebula.gl/edit-modes/src/utils.ts", "../../@nebula.gl/edit-modes/src/lib/immutable-feature-collection.ts", "../../@nebula.gl/edit-modes/src/lib/geojson-edit-mode.ts", "../../@nebula.gl/edit-modes/src/lib/modify-mode.ts", "../../@turf/line-segment/dist/js/index.js", "../../@turf/line-intersect/dist/js/index.js", "../../@turf/nearest-point-on-line/dist/js/index.js", "../../@turf/circle/dist/js/index.js", "../../@turf/center/dist/js/index.js", "../../@nebula.gl/edit-modes/src/lib/resize-circle-mode.ts", "../../@turf/clone/dist/js/index.js", "../../@turf/rhumb-destination/dist/js/index.js", "../../@turf/transform-translate/dist/js/index.js", "../../@nebula.gl/edit-modes/src/lib/translate-mode.ts", "../../@turf/centroid/dist/js/index.js", "../../@turf/bbox-polygon/dist/js/index.js", "../../@turf/polygon-to-line/dist/js/index.js", "../../@turf/rhumb-bearing/dist/js/index.js", "../../@turf/transform-scale/dist/js/index.js", "../../@nebula.gl/edit-modes/src/lib/scale-mode.ts", "../../@turf/transform-rotate/dist/js/index.js", "../../@nebula.gl/edit-modes/src/lib/rotate-mode.ts", "../../@nebula.gl/edit-modes/src/lib/duplicate-mode.ts", "../../@nebula.gl/edit-modes/src/lib/extend-line-string-mode.ts", "../../@turf/boolean-point-in-polygon/dist/js/index.js", "../../turf-jsts/jsts.min.js", "../../@turf/buffer/dist/js/index.js", "../../@nebula.gl/edit-modes/src/lib/split-polygon-mode.ts", "../../@nebula.gl/edit-modes/src/lib/extrude-mode.ts", "../../@nebula.gl/edit-modes/src/lib/elevation-mode.ts", "../../@nebula.gl/edit-modes/src/lib/composite-mode.ts", "../../@nebula.gl/edit-modes/src/lib/transform-mode.ts", "../../@nebula.gl/edit-modes/src/lib/draw-point-mode.ts", "../../@nebula.gl/edit-modes/src/lib/draw-line-string-mode.ts", "../../@nebula.gl/edit-modes/src/lib/draw-polygon-mode.ts", "../../@nebula.gl/edit-modes/src/lib/two-click-polygon-mode.ts", "../../@nebula.gl/edit-modes/src/lib/draw-rectangle-mode.ts", "../../@turf/along/dist/js/index.js", "../../@nebula.gl/edit-modes/src/lib/draw-square-mode.ts", "../../@nebula.gl/edit-modes/src/lib/draw-rectangle-from-center-mode.ts", "../../@nebula.gl/edit-modes/src/lib/draw-square-from-center-mode.ts", "../../@nebula.gl/edit-modes/src/lib/draw-circle-by-diameter-mode.ts", "../../@nebula.gl/edit-modes/src/lib/draw-circle-from-center-mode.ts", "../../@turf/ellipse/dist/js/index.js", "../../@nebula.gl/edit-modes/src/lib/draw-ellipse-by-bounding-box-mode.ts", "../../@nebula.gl/edit-modes/src/lib/three-click-polygon-mode.ts", "../../@nebula.gl/edit-modes/src/lib/draw-ellipse-using-three-points-mode.ts", "../../@nebula.gl/edit-modes/src/lib/draw-rectangle-using-three-points-mode.ts", "../../@nebula.gl/edit-modes/src/lib/draw-90degree-polygon-mode.ts", "../../lodash.throttle/index.js", "../../@nebula.gl/edit-modes/src/lib/draw-polygon-by-dragging-mode.ts", "../../@nebula.gl/edit-modes/src/lib/view-mode.ts", "../../@turf/midpoint/dist/js/index.js", "../../@nebula.gl/edit-modes/src/lib/measure-distance-mode.ts", "../../@turf/area/dist/js/index.js", "../../@nebula.gl/edit-modes/src/lib/measure-area-mode.ts", "../../@nebula.gl/edit-modes/src/memoize.ts", "../../@nebula.gl/edit-modes/src/lib/measure-angle-mode.ts", "../../@nebula.gl/edit-modes/src/lib/snappable-mode.ts", "../../@nebula.gl/edit-modes/src/index.ts"],
  "sourcesContent": ["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.polygonClipping = factory());\n}(this, (function () { 'use strict';\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  /**\n   * splaytree v3.1.0\n   * Fast Splay tree for Node and browser\n   *\n   * @author Alexander Milevski <info@w8r.name>\n   * @license MIT\n   * @preserve\n   */\n  var Node =\n  /** @class */\n  function () {\n    function Node(key, data) {\n      this.next = null;\n      this.key = key;\n      this.data = data;\n      this.left = null;\n      this.right = null;\n    }\n\n    return Node;\n  }();\n  /* follows \"An implementation of top-down splaying\"\r\n   * by D. Sleator <sleator@cs.cmu.edu> March 1992\r\n   */\n\n\n  function DEFAULT_COMPARE(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n  /**\r\n   * Simple top down splay, not requiring i to be in the tree t.\r\n   */\n\n\n  function splay(i, t, comparator) {\n    var N = new Node(null, null);\n    var l = N;\n    var r = N;\n\n    while (true) {\n      var cmp = comparator(i, t.key); //if (i < t.key) {\n\n      if (cmp < 0) {\n        if (t.left === null) break; //if (i < t.left.key) {\n\n        if (comparator(i, t.left.key) < 0) {\n          var y = t.left;\n          /* rotate right */\n\n          t.left = y.right;\n          y.right = t;\n          t = y;\n          if (t.left === null) break;\n        }\n\n        r.left = t;\n        /* link right */\n\n        r = t;\n        t = t.left; //} else if (i > t.key) {\n      } else if (cmp > 0) {\n        if (t.right === null) break; //if (i > t.right.key) {\n\n        if (comparator(i, t.right.key) > 0) {\n          var y = t.right;\n          /* rotate left */\n\n          t.right = y.left;\n          y.left = t;\n          t = y;\n          if (t.right === null) break;\n        }\n\n        l.right = t;\n        /* link left */\n\n        l = t;\n        t = t.right;\n      } else break;\n    }\n    /* assemble */\n\n\n    l.right = t.left;\n    r.left = t.right;\n    t.left = N.right;\n    t.right = N.left;\n    return t;\n  }\n\n  function insert(i, data, t, comparator) {\n    var node = new Node(i, data);\n\n    if (t === null) {\n      node.left = node.right = null;\n      return node;\n    }\n\n    t = splay(i, t, comparator);\n    var cmp = comparator(i, t.key);\n\n    if (cmp < 0) {\n      node.left = t.left;\n      node.right = t;\n      t.left = null;\n    } else if (cmp >= 0) {\n      node.right = t.right;\n      node.left = t;\n      t.right = null;\n    }\n\n    return node;\n  }\n\n  function split(key, v, comparator) {\n    var left = null;\n    var right = null;\n\n    if (v) {\n      v = splay(key, v, comparator);\n      var cmp = comparator(v.key, key);\n\n      if (cmp === 0) {\n        left = v.left;\n        right = v.right;\n      } else if (cmp < 0) {\n        right = v.right;\n        v.right = null;\n        left = v;\n      } else {\n        left = v.left;\n        v.left = null;\n        right = v;\n      }\n    }\n\n    return {\n      left: left,\n      right: right\n    };\n  }\n\n  function merge(left, right, comparator) {\n    if (right === null) return left;\n    if (left === null) return right;\n    right = splay(left.key, right, comparator);\n    right.left = left;\n    return right;\n  }\n  /**\r\n   * Prints level of the tree\r\n   */\n\n\n  function printRow(root, prefix, isTail, out, printNode) {\n    if (root) {\n      out(\"\" + prefix + (isTail ? '└── ' : '├── ') + printNode(root) + \"\\n\");\n      var indent = prefix + (isTail ? '    ' : '│   ');\n      if (root.left) printRow(root.left, indent, false, out, printNode);\n      if (root.right) printRow(root.right, indent, true, out, printNode);\n    }\n  }\n\n  var Tree =\n  /** @class */\n  function () {\n    function Tree(comparator) {\n      if (comparator === void 0) {\n        comparator = DEFAULT_COMPARE;\n      }\n\n      this._root = null;\n      this._size = 0;\n      this._comparator = comparator;\n    }\n    /**\r\n     * Inserts a key, allows duplicates\r\n     */\n\n\n    Tree.prototype.insert = function (key, data) {\n      this._size++;\n      return this._root = insert(key, data, this._root, this._comparator);\n    };\n    /**\r\n     * Adds a key, if it is not present in the tree\r\n     */\n\n\n    Tree.prototype.add = function (key, data) {\n      var node = new Node(key, data);\n\n      if (this._root === null) {\n        node.left = node.right = null;\n        this._size++;\n        this._root = node;\n      }\n\n      var comparator = this._comparator;\n      var t = splay(key, this._root, comparator);\n      var cmp = comparator(key, t.key);\n      if (cmp === 0) this._root = t;else {\n        if (cmp < 0) {\n          node.left = t.left;\n          node.right = t;\n          t.left = null;\n        } else if (cmp > 0) {\n          node.right = t.right;\n          node.left = t;\n          t.right = null;\n        }\n\n        this._size++;\n        this._root = node;\n      }\n      return this._root;\n    };\n    /**\r\n     * @param  {Key} key\r\n     * @return {Node|null}\r\n     */\n\n\n    Tree.prototype.remove = function (key) {\n      this._root = this._remove(key, this._root, this._comparator);\n    };\n    /**\r\n     * Deletes i from the tree if it's there\r\n     */\n\n\n    Tree.prototype._remove = function (i, t, comparator) {\n      var x;\n      if (t === null) return null;\n      t = splay(i, t, comparator);\n      var cmp = comparator(i, t.key);\n\n      if (cmp === 0) {\n        /* found it */\n        if (t.left === null) {\n          x = t.right;\n        } else {\n          x = splay(i, t.left, comparator);\n          x.right = t.right;\n        }\n\n        this._size--;\n        return x;\n      }\n\n      return t;\n      /* It wasn't there */\n    };\n    /**\r\n     * Removes and returns the node with smallest key\r\n     */\n\n\n    Tree.prototype.pop = function () {\n      var node = this._root;\n\n      if (node) {\n        while (node.left) {\n          node = node.left;\n        }\n\n        this._root = splay(node.key, this._root, this._comparator);\n        this._root = this._remove(node.key, this._root, this._comparator);\n        return {\n          key: node.key,\n          data: node.data\n        };\n      }\n\n      return null;\n    };\n    /**\r\n     * Find without splaying\r\n     */\n\n\n    Tree.prototype.findStatic = function (key) {\n      var current = this._root;\n      var compare = this._comparator;\n\n      while (current) {\n        var cmp = compare(key, current.key);\n        if (cmp === 0) return current;else if (cmp < 0) current = current.left;else current = current.right;\n      }\n\n      return null;\n    };\n\n    Tree.prototype.find = function (key) {\n      if (this._root) {\n        this._root = splay(key, this._root, this._comparator);\n        if (this._comparator(key, this._root.key) !== 0) return null;\n      }\n\n      return this._root;\n    };\n\n    Tree.prototype.contains = function (key) {\n      var current = this._root;\n      var compare = this._comparator;\n\n      while (current) {\n        var cmp = compare(key, current.key);\n        if (cmp === 0) return true;else if (cmp < 0) current = current.left;else current = current.right;\n      }\n\n      return false;\n    };\n\n    Tree.prototype.forEach = function (visitor, ctx) {\n      var current = this._root;\n      var Q = [];\n      /* Initialize stack s */\n\n      var done = false;\n\n      while (!done) {\n        if (current !== null) {\n          Q.push(current);\n          current = current.left;\n        } else {\n          if (Q.length !== 0) {\n            current = Q.pop();\n            visitor.call(ctx, current);\n            current = current.right;\n          } else done = true;\n        }\n      }\n\n      return this;\n    };\n    /**\r\n     * Walk key range from `low` to `high`. Stops if `fn` returns a value.\r\n     */\n\n\n    Tree.prototype.range = function (low, high, fn, ctx) {\n      var Q = [];\n      var compare = this._comparator;\n      var node = this._root;\n      var cmp;\n\n      while (Q.length !== 0 || node) {\n        if (node) {\n          Q.push(node);\n          node = node.left;\n        } else {\n          node = Q.pop();\n          cmp = compare(node.key, high);\n\n          if (cmp > 0) {\n            break;\n          } else if (compare(node.key, low) >= 0) {\n            if (fn.call(ctx, node)) return this; // stop if smth is returned\n          }\n\n          node = node.right;\n        }\n      }\n\n      return this;\n    };\n    /**\r\n     * Returns array of keys\r\n     */\n\n\n    Tree.prototype.keys = function () {\n      var keys = [];\n      this.forEach(function (_a) {\n        var key = _a.key;\n        return keys.push(key);\n      });\n      return keys;\n    };\n    /**\r\n     * Returns array of all the data in the nodes\r\n     */\n\n\n    Tree.prototype.values = function () {\n      var values = [];\n      this.forEach(function (_a) {\n        var data = _a.data;\n        return values.push(data);\n      });\n      return values;\n    };\n\n    Tree.prototype.min = function () {\n      if (this._root) return this.minNode(this._root).key;\n      return null;\n    };\n\n    Tree.prototype.max = function () {\n      if (this._root) return this.maxNode(this._root).key;\n      return null;\n    };\n\n    Tree.prototype.minNode = function (t) {\n      if (t === void 0) {\n        t = this._root;\n      }\n\n      if (t) while (t.left) {\n        t = t.left;\n      }\n      return t;\n    };\n\n    Tree.prototype.maxNode = function (t) {\n      if (t === void 0) {\n        t = this._root;\n      }\n\n      if (t) while (t.right) {\n        t = t.right;\n      }\n      return t;\n    };\n    /**\r\n     * Returns node at given index\r\n     */\n\n\n    Tree.prototype.at = function (index) {\n      var current = this._root;\n      var done = false;\n      var i = 0;\n      var Q = [];\n\n      while (!done) {\n        if (current) {\n          Q.push(current);\n          current = current.left;\n        } else {\n          if (Q.length > 0) {\n            current = Q.pop();\n            if (i === index) return current;\n            i++;\n            current = current.right;\n          } else done = true;\n        }\n      }\n\n      return null;\n    };\n\n    Tree.prototype.next = function (d) {\n      var root = this._root;\n      var successor = null;\n\n      if (d.right) {\n        successor = d.right;\n\n        while (successor.left) {\n          successor = successor.left;\n        }\n\n        return successor;\n      }\n\n      var comparator = this._comparator;\n\n      while (root) {\n        var cmp = comparator(d.key, root.key);\n        if (cmp === 0) break;else if (cmp < 0) {\n          successor = root;\n          root = root.left;\n        } else root = root.right;\n      }\n\n      return successor;\n    };\n\n    Tree.prototype.prev = function (d) {\n      var root = this._root;\n      var predecessor = null;\n\n      if (d.left !== null) {\n        predecessor = d.left;\n\n        while (predecessor.right) {\n          predecessor = predecessor.right;\n        }\n\n        return predecessor;\n      }\n\n      var comparator = this._comparator;\n\n      while (root) {\n        var cmp = comparator(d.key, root.key);\n        if (cmp === 0) break;else if (cmp < 0) root = root.left;else {\n          predecessor = root;\n          root = root.right;\n        }\n      }\n\n      return predecessor;\n    };\n\n    Tree.prototype.clear = function () {\n      this._root = null;\n      this._size = 0;\n      return this;\n    };\n\n    Tree.prototype.toList = function () {\n      return toList(this._root);\n    };\n    /**\r\n     * Bulk-load items. Both array have to be same size\r\n     */\n\n\n    Tree.prototype.load = function (keys, values, presort) {\n      if (values === void 0) {\n        values = [];\n      }\n\n      if (presort === void 0) {\n        presort = false;\n      }\n\n      var size = keys.length;\n      var comparator = this._comparator; // sort if needed\n\n      if (presort) sort(keys, values, 0, size - 1, comparator);\n\n      if (this._root === null) {\n        // empty tree\n        this._root = loadRecursive(keys, values, 0, size);\n        this._size = size;\n      } else {\n        // that re-builds the whole tree from two in-order traversals\n        var mergedList = mergeLists(this.toList(), createList(keys, values), comparator);\n        size = this._size + size;\n        this._root = sortedListToBST({\n          head: mergedList\n        }, 0, size);\n      }\n\n      return this;\n    };\n\n    Tree.prototype.isEmpty = function () {\n      return this._root === null;\n    };\n\n    Object.defineProperty(Tree.prototype, \"size\", {\n      get: function get() {\n        return this._size;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Tree.prototype, \"root\", {\n      get: function get() {\n        return this._root;\n      },\n      enumerable: true,\n      configurable: true\n    });\n\n    Tree.prototype.toString = function (printNode) {\n      if (printNode === void 0) {\n        printNode = function printNode(n) {\n          return String(n.key);\n        };\n      }\n\n      var out = [];\n      printRow(this._root, '', true, function (v) {\n        return out.push(v);\n      }, printNode);\n      return out.join('');\n    };\n\n    Tree.prototype.update = function (key, newKey, newData) {\n      var comparator = this._comparator;\n\n      var _a = split(key, this._root, comparator),\n          left = _a.left,\n          right = _a.right;\n\n      if (comparator(key, newKey) < 0) {\n        right = insert(newKey, newData, right, comparator);\n      } else {\n        left = insert(newKey, newData, left, comparator);\n      }\n\n      this._root = merge(left, right, comparator);\n    };\n\n    Tree.prototype.split = function (key) {\n      return split(key, this._root, this._comparator);\n    };\n\n    return Tree;\n  }();\n\n  function loadRecursive(keys, values, start, end) {\n    var size = end - start;\n\n    if (size > 0) {\n      var middle = start + Math.floor(size / 2);\n      var key = keys[middle];\n      var data = values[middle];\n      var node = new Node(key, data);\n      node.left = loadRecursive(keys, values, start, middle);\n      node.right = loadRecursive(keys, values, middle + 1, end);\n      return node;\n    }\n\n    return null;\n  }\n\n  function createList(keys, values) {\n    var head = new Node(null, null);\n    var p = head;\n\n    for (var i = 0; i < keys.length; i++) {\n      p = p.next = new Node(keys[i], values[i]);\n    }\n\n    p.next = null;\n    return head.next;\n  }\n\n  function toList(root) {\n    var current = root;\n    var Q = [];\n    var done = false;\n    var head = new Node(null, null);\n    var p = head;\n\n    while (!done) {\n      if (current) {\n        Q.push(current);\n        current = current.left;\n      } else {\n        if (Q.length > 0) {\n          current = p = p.next = Q.pop();\n          current = current.right;\n        } else done = true;\n      }\n    }\n\n    p.next = null; // that'll work even if the tree was empty\n\n    return head.next;\n  }\n\n  function sortedListToBST(list, start, end) {\n    var size = end - start;\n\n    if (size > 0) {\n      var middle = start + Math.floor(size / 2);\n      var left = sortedListToBST(list, start, middle);\n      var root = list.head;\n      root.left = left;\n      list.head = list.head.next;\n      root.right = sortedListToBST(list, middle + 1, end);\n      return root;\n    }\n\n    return null;\n  }\n\n  function mergeLists(l1, l2, compare) {\n    var head = new Node(null, null); // dummy\n\n    var p = head;\n    var p1 = l1;\n    var p2 = l2;\n\n    while (p1 !== null && p2 !== null) {\n      if (compare(p1.key, p2.key) < 0) {\n        p.next = p1;\n        p1 = p1.next;\n      } else {\n        p.next = p2;\n        p2 = p2.next;\n      }\n\n      p = p.next;\n    }\n\n    if (p1 !== null) {\n      p.next = p1;\n    } else if (p2 !== null) {\n      p.next = p2;\n    }\n\n    return head.next;\n  }\n\n  function sort(keys, values, left, right, compare) {\n    if (left >= right) return;\n    var pivot = keys[left + right >> 1];\n    var i = left - 1;\n    var j = right + 1;\n\n    while (true) {\n      do {\n        i++;\n      } while (compare(keys[i], pivot) < 0);\n\n      do {\n        j--;\n      } while (compare(keys[j], pivot) > 0);\n\n      if (i >= j) break;\n      var tmp = keys[i];\n      keys[i] = keys[j];\n      keys[j] = tmp;\n      tmp = values[i];\n      values[i] = values[j];\n      values[j] = tmp;\n    }\n\n    sort(keys, values, left, j, compare);\n    sort(keys, values, j + 1, right, compare);\n  }\n\n  /**\n   * A bounding box has the format:\n   *\n   *  { ll: { x: xmin, y: ymin }, ur: { x: xmax, y: ymax } }\n   *\n   */\n  var isInBbox = function isInBbox(bbox, point) {\n    return bbox.ll.x <= point.x && point.x <= bbox.ur.x && bbox.ll.y <= point.y && point.y <= bbox.ur.y;\n  };\n  /* Returns either null, or a bbox (aka an ordered pair of points)\n   * If there is only one point of overlap, a bbox with identical points\n   * will be returned */\n\n  var getBboxOverlap = function getBboxOverlap(b1, b2) {\n    // check if the bboxes overlap at all\n    if (b2.ur.x < b1.ll.x || b1.ur.x < b2.ll.x || b2.ur.y < b1.ll.y || b1.ur.y < b2.ll.y) return null; // find the middle two X values\n\n    var lowerX = b1.ll.x < b2.ll.x ? b2.ll.x : b1.ll.x;\n    var upperX = b1.ur.x < b2.ur.x ? b1.ur.x : b2.ur.x; // find the middle two Y values\n\n    var lowerY = b1.ll.y < b2.ll.y ? b2.ll.y : b1.ll.y;\n    var upperY = b1.ur.y < b2.ur.y ? b1.ur.y : b2.ur.y; // put those middle values together to get the overlap\n\n    return {\n      ll: {\n        x: lowerX,\n        y: lowerY\n      },\n      ur: {\n        x: upperX,\n        y: upperY\n      }\n    };\n  };\n\n  /* Javascript doesn't do integer math. Everything is\n   * floating point with percision Number.EPSILON.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\n   */\n  var epsilon = Number.EPSILON; // IE Polyfill\n\n  if (epsilon === undefined) epsilon = Math.pow(2, -52);\n  var EPSILON_SQ = epsilon * epsilon;\n  /* FLP comparator */\n\n  var cmp = function cmp(a, b) {\n    // check if they're both 0\n    if (-epsilon < a && a < epsilon) {\n      if (-epsilon < b && b < epsilon) {\n        return 0;\n      }\n    } // check if they're flp equal\n\n\n    var ab = a - b;\n\n    if (ab * ab < EPSILON_SQ * a * b) {\n      return 0;\n    } // normal comparison\n\n\n    return a < b ? -1 : 1;\n  };\n\n  /**\n   * This class rounds incoming values sufficiently so that\n   * floating points problems are, for the most part, avoided.\n   *\n   * Incoming points are have their x & y values tested against\n   * all previously seen x & y values. If either is 'too close'\n   * to a previously seen value, it's value is 'snapped' to the\n   * previously seen value.\n   *\n   * All points should be rounded by this class before being\n   * stored in any data structures in the rest of this algorithm.\n   */\n\n  var PtRounder = /*#__PURE__*/function () {\n    function PtRounder() {\n      _classCallCheck(this, PtRounder);\n\n      this.reset();\n    }\n\n    _createClass(PtRounder, [{\n      key: \"reset\",\n      value: function reset() {\n        this.xRounder = new CoordRounder();\n        this.yRounder = new CoordRounder();\n      }\n    }, {\n      key: \"round\",\n      value: function round(x, y) {\n        return {\n          x: this.xRounder.round(x),\n          y: this.yRounder.round(y)\n        };\n      }\n    }]);\n\n    return PtRounder;\n  }();\n\n  var CoordRounder = /*#__PURE__*/function () {\n    function CoordRounder() {\n      _classCallCheck(this, CoordRounder);\n\n      this.tree = new Tree(); // preseed with 0 so we don't end up with values < Number.EPSILON\n\n      this.round(0);\n    } // Note: this can rounds input values backwards or forwards.\n    //       You might ask, why not restrict this to just rounding\n    //       forwards? Wouldn't that allow left endpoints to always\n    //       remain left endpoints during splitting (never change to\n    //       right). No - it wouldn't, because we snap intersections\n    //       to endpoints (to establish independence from the segment\n    //       angle for t-intersections).\n\n\n    _createClass(CoordRounder, [{\n      key: \"round\",\n      value: function round(coord) {\n        var node = this.tree.add(coord);\n        var prevNode = this.tree.prev(node);\n\n        if (prevNode !== null && cmp(node.key, prevNode.key) === 0) {\n          this.tree.remove(coord);\n          return prevNode.key;\n        }\n\n        var nextNode = this.tree.next(node);\n\n        if (nextNode !== null && cmp(node.key, nextNode.key) === 0) {\n          this.tree.remove(coord);\n          return nextNode.key;\n        }\n\n        return coord;\n      }\n    }]);\n\n    return CoordRounder;\n  }(); // singleton available by import\n\n\n  var rounder = new PtRounder();\n\n  /* Cross Product of two vectors with first point at origin */\n\n  var crossProduct = function crossProduct(a, b) {\n    return a.x * b.y - a.y * b.x;\n  };\n  /* Dot Product of two vectors with first point at origin */\n\n  var dotProduct = function dotProduct(a, b) {\n    return a.x * b.x + a.y * b.y;\n  };\n  /* Comparator for two vectors with same starting point */\n\n  var compareVectorAngles = function compareVectorAngles(basePt, endPt1, endPt2) {\n    var v1 = {\n      x: endPt1.x - basePt.x,\n      y: endPt1.y - basePt.y\n    };\n    var v2 = {\n      x: endPt2.x - basePt.x,\n      y: endPt2.y - basePt.y\n    };\n    var kross = crossProduct(v1, v2);\n    return cmp(kross, 0);\n  };\n  var length = function length(v) {\n    return Math.sqrt(dotProduct(v, v));\n  };\n  /* Get the sine of the angle from pShared -> pAngle to pShaed -> pBase */\n\n  var sineOfAngle = function sineOfAngle(pShared, pBase, pAngle) {\n    var vBase = {\n      x: pBase.x - pShared.x,\n      y: pBase.y - pShared.y\n    };\n    var vAngle = {\n      x: pAngle.x - pShared.x,\n      y: pAngle.y - pShared.y\n    };\n    return crossProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n  };\n  /* Get the cosine of the angle from pShared -> pAngle to pShaed -> pBase */\n\n  var cosineOfAngle = function cosineOfAngle(pShared, pBase, pAngle) {\n    var vBase = {\n      x: pBase.x - pShared.x,\n      y: pBase.y - pShared.y\n    };\n    var vAngle = {\n      x: pAngle.x - pShared.x,\n      y: pAngle.y - pShared.y\n    };\n    return dotProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n  };\n  /* Get the x coordinate where the given line (defined by a point and vector)\n   * crosses the horizontal line with the given y coordiante.\n   * In the case of parrallel lines (including overlapping ones) returns null. */\n\n  var horizontalIntersection = function horizontalIntersection(pt, v, y) {\n    if (v.y === 0) return null;\n    return {\n      x: pt.x + v.x / v.y * (y - pt.y),\n      y: y\n    };\n  };\n  /* Get the y coordinate where the given line (defined by a point and vector)\n   * crosses the vertical line with the given x coordiante.\n   * In the case of parrallel lines (including overlapping ones) returns null. */\n\n  var verticalIntersection = function verticalIntersection(pt, v, x) {\n    if (v.x === 0) return null;\n    return {\n      x: x,\n      y: pt.y + v.y / v.x * (x - pt.x)\n    };\n  };\n  /* Get the intersection of two lines, each defined by a base point and a vector.\n   * In the case of parrallel lines (including overlapping ones) returns null. */\n\n  var intersection = function intersection(pt1, v1, pt2, v2) {\n    // take some shortcuts for vertical and horizontal lines\n    // this also ensures we don't calculate an intersection and then discover\n    // it's actually outside the bounding box of the line\n    if (v1.x === 0) return verticalIntersection(pt2, v2, pt1.x);\n    if (v2.x === 0) return verticalIntersection(pt1, v1, pt2.x);\n    if (v1.y === 0) return horizontalIntersection(pt2, v2, pt1.y);\n    if (v2.y === 0) return horizontalIntersection(pt1, v1, pt2.y); // General case for non-overlapping segments.\n    // This algorithm is based on Schneider and Eberly.\n    // http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf - pg 244\n\n    var kross = crossProduct(v1, v2);\n    if (kross == 0) return null;\n    var ve = {\n      x: pt2.x - pt1.x,\n      y: pt2.y - pt1.y\n    };\n    var d1 = crossProduct(ve, v1) / kross;\n    var d2 = crossProduct(ve, v2) / kross; // take the average of the two calculations to minimize rounding error\n\n    var x1 = pt1.x + d2 * v1.x,\n        x2 = pt2.x + d1 * v2.x;\n    var y1 = pt1.y + d2 * v1.y,\n        y2 = pt2.y + d1 * v2.y;\n    var x = (x1 + x2) / 2;\n    var y = (y1 + y2) / 2;\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  var SweepEvent = /*#__PURE__*/function () {\n    _createClass(SweepEvent, null, [{\n      key: \"compare\",\n      // for ordering sweep events in the sweep event queue\n      value: function compare(a, b) {\n        // favor event with a point that the sweep line hits first\n        var ptCmp = SweepEvent.comparePoints(a.point, b.point);\n        if (ptCmp !== 0) return ptCmp; // the points are the same, so link them if needed\n\n        if (a.point !== b.point) a.link(b); // favor right events over left\n\n        if (a.isLeft !== b.isLeft) return a.isLeft ? 1 : -1; // we have two matching left or right endpoints\n        // ordering of this case is the same as for their segments\n\n        return Segment.compare(a.segment, b.segment);\n      } // for ordering points in sweep line order\n\n    }, {\n      key: \"comparePoints\",\n      value: function comparePoints(aPt, bPt) {\n        if (aPt.x < bPt.x) return -1;\n        if (aPt.x > bPt.x) return 1;\n        if (aPt.y < bPt.y) return -1;\n        if (aPt.y > bPt.y) return 1;\n        return 0;\n      } // Warning: 'point' input will be modified and re-used (for performance)\n\n    }]);\n\n    function SweepEvent(point, isLeft) {\n      _classCallCheck(this, SweepEvent);\n\n      if (point.events === undefined) point.events = [this];else point.events.push(this);\n      this.point = point;\n      this.isLeft = isLeft; // this.segment, this.otherSE set by factory\n    }\n\n    _createClass(SweepEvent, [{\n      key: \"link\",\n      value: function link(other) {\n        if (other.point === this.point) {\n          throw new Error('Tried to link already linked events');\n        }\n\n        var otherEvents = other.point.events;\n\n        for (var i = 0, iMax = otherEvents.length; i < iMax; i++) {\n          var evt = otherEvents[i];\n          this.point.events.push(evt);\n          evt.point = this.point;\n        }\n\n        this.checkForConsuming();\n      }\n      /* Do a pass over our linked events and check to see if any pair\n       * of segments match, and should be consumed. */\n\n    }, {\n      key: \"checkForConsuming\",\n      value: function checkForConsuming() {\n        // FIXME: The loops in this method run O(n^2) => no good.\n        //        Maintain little ordered sweep event trees?\n        //        Can we maintaining an ordering that avoids the need\n        //        for the re-sorting with getLeftmostComparator in geom-out?\n        // Compare each pair of events to see if other events also match\n        var numEvents = this.point.events.length;\n\n        for (var i = 0; i < numEvents; i++) {\n          var evt1 = this.point.events[i];\n          if (evt1.segment.consumedBy !== undefined) continue;\n\n          for (var j = i + 1; j < numEvents; j++) {\n            var evt2 = this.point.events[j];\n            if (evt2.consumedBy !== undefined) continue;\n            if (evt1.otherSE.point.events !== evt2.otherSE.point.events) continue;\n            evt1.segment.consume(evt2.segment);\n          }\n        }\n      }\n    }, {\n      key: \"getAvailableLinkedEvents\",\n      value: function getAvailableLinkedEvents() {\n        // point.events is always of length 2 or greater\n        var events = [];\n\n        for (var i = 0, iMax = this.point.events.length; i < iMax; i++) {\n          var evt = this.point.events[i];\n\n          if (evt !== this && !evt.segment.ringOut && evt.segment.isInResult()) {\n            events.push(evt);\n          }\n        }\n\n        return events;\n      }\n      /**\n       * Returns a comparator function for sorting linked events that will\n       * favor the event that will give us the smallest left-side angle.\n       * All ring construction starts as low as possible heading to the right,\n       * so by always turning left as sharp as possible we'll get polygons\n       * without uncessary loops & holes.\n       *\n       * The comparator function has a compute cache such that it avoids\n       * re-computing already-computed values.\n       */\n\n    }, {\n      key: \"getLeftmostComparator\",\n      value: function getLeftmostComparator(baseEvent) {\n        var _this = this;\n\n        var cache = new Map();\n\n        var fillCache = function fillCache(linkedEvent) {\n          var nextEvent = linkedEvent.otherSE;\n          cache.set(linkedEvent, {\n            sine: sineOfAngle(_this.point, baseEvent.point, nextEvent.point),\n            cosine: cosineOfAngle(_this.point, baseEvent.point, nextEvent.point)\n          });\n        };\n\n        return function (a, b) {\n          if (!cache.has(a)) fillCache(a);\n          if (!cache.has(b)) fillCache(b);\n\n          var _cache$get = cache.get(a),\n              asine = _cache$get.sine,\n              acosine = _cache$get.cosine;\n\n          var _cache$get2 = cache.get(b),\n              bsine = _cache$get2.sine,\n              bcosine = _cache$get2.cosine; // both on or above x-axis\n\n\n          if (asine >= 0 && bsine >= 0) {\n            if (acosine < bcosine) return 1;\n            if (acosine > bcosine) return -1;\n            return 0;\n          } // both below x-axis\n\n\n          if (asine < 0 && bsine < 0) {\n            if (acosine < bcosine) return -1;\n            if (acosine > bcosine) return 1;\n            return 0;\n          } // one above x-axis, one below\n\n\n          if (bsine < asine) return -1;\n          if (bsine > asine) return 1;\n          return 0;\n        };\n      }\n    }]);\n\n    return SweepEvent;\n  }();\n\n  // segments and sweep events when all else is identical\n\n  var segmentId = 0;\n\n  var Segment = /*#__PURE__*/function () {\n    _createClass(Segment, null, [{\n      key: \"compare\",\n\n      /* This compare() function is for ordering segments in the sweep\n       * line tree, and does so according to the following criteria:\n       *\n       * Consider the vertical line that lies an infinestimal step to the\n       * right of the right-more of the two left endpoints of the input\n       * segments. Imagine slowly moving a point up from negative infinity\n       * in the increasing y direction. Which of the two segments will that\n       * point intersect first? That segment comes 'before' the other one.\n       *\n       * If neither segment would be intersected by such a line, (if one\n       * or more of the segments are vertical) then the line to be considered\n       * is directly on the right-more of the two left inputs.\n       */\n      value: function compare(a, b) {\n        var alx = a.leftSE.point.x;\n        var blx = b.leftSE.point.x;\n        var arx = a.rightSE.point.x;\n        var brx = b.rightSE.point.x; // check if they're even in the same vertical plane\n\n        if (brx < alx) return 1;\n        if (arx < blx) return -1;\n        var aly = a.leftSE.point.y;\n        var bly = b.leftSE.point.y;\n        var ary = a.rightSE.point.y;\n        var bry = b.rightSE.point.y; // is left endpoint of segment B the right-more?\n\n        if (alx < blx) {\n          // are the two segments in the same horizontal plane?\n          if (bly < aly && bly < ary) return 1;\n          if (bly > aly && bly > ary) return -1; // is the B left endpoint colinear to segment A?\n\n          var aCmpBLeft = a.comparePoint(b.leftSE.point);\n          if (aCmpBLeft < 0) return 1;\n          if (aCmpBLeft > 0) return -1; // is the A right endpoint colinear to segment B ?\n\n          var bCmpARight = b.comparePoint(a.rightSE.point);\n          if (bCmpARight !== 0) return bCmpARight; // colinear segments, consider the one with left-more\n          // left endpoint to be first (arbitrary?)\n\n          return -1;\n        } // is left endpoint of segment A the right-more?\n\n\n        if (alx > blx) {\n          if (aly < bly && aly < bry) return -1;\n          if (aly > bly && aly > bry) return 1; // is the A left endpoint colinear to segment B?\n\n          var bCmpALeft = b.comparePoint(a.leftSE.point);\n          if (bCmpALeft !== 0) return bCmpALeft; // is the B right endpoint colinear to segment A?\n\n          var aCmpBRight = a.comparePoint(b.rightSE.point);\n          if (aCmpBRight < 0) return 1;\n          if (aCmpBRight > 0) return -1; // colinear segments, consider the one with left-more\n          // left endpoint to be first (arbitrary?)\n\n          return 1;\n        } // if we get here, the two left endpoints are in the same\n        // vertical plane, ie alx === blx\n        // consider the lower left-endpoint to come first\n\n\n        if (aly < bly) return -1;\n        if (aly > bly) return 1; // left endpoints are identical\n        // check for colinearity by using the left-more right endpoint\n        // is the A right endpoint more left-more?\n\n        if (arx < brx) {\n          var _bCmpARight = b.comparePoint(a.rightSE.point);\n\n          if (_bCmpARight !== 0) return _bCmpARight;\n        } // is the B right endpoint more left-more?\n\n\n        if (arx > brx) {\n          var _aCmpBRight = a.comparePoint(b.rightSE.point);\n\n          if (_aCmpBRight < 0) return 1;\n          if (_aCmpBRight > 0) return -1;\n        }\n\n        if (arx !== brx) {\n          // are these two [almost] vertical segments with opposite orientation?\n          // if so, the one with the lower right endpoint comes first\n          var ay = ary - aly;\n          var ax = arx - alx;\n          var by = bry - bly;\n          var bx = brx - blx;\n          if (ay > ax && by < bx) return 1;\n          if (ay < ax && by > bx) return -1;\n        } // we have colinear segments with matching orientation\n        // consider the one with more left-more right endpoint to be first\n\n\n        if (arx > brx) return 1;\n        if (arx < brx) return -1; // if we get here, two two right endpoints are in the same\n        // vertical plane, ie arx === brx\n        // consider the lower right-endpoint to come first\n\n        if (ary < bry) return -1;\n        if (ary > bry) return 1; // right endpoints identical as well, so the segments are idential\n        // fall back on creation order as consistent tie-breaker\n\n        if (a.id < b.id) return -1;\n        if (a.id > b.id) return 1; // identical segment, ie a === b\n\n        return 0;\n      }\n      /* Warning: a reference to ringWindings input will be stored,\n       *  and possibly will be later modified */\n\n    }]);\n\n    function Segment(leftSE, rightSE, rings, windings) {\n      _classCallCheck(this, Segment);\n\n      this.id = ++segmentId;\n      this.leftSE = leftSE;\n      leftSE.segment = this;\n      leftSE.otherSE = rightSE;\n      this.rightSE = rightSE;\n      rightSE.segment = this;\n      rightSE.otherSE = leftSE;\n      this.rings = rings;\n      this.windings = windings; // left unset for performance, set later in algorithm\n      // this.ringOut, this.consumedBy, this.prev\n    }\n\n    _createClass(Segment, [{\n      key: \"replaceRightSE\",\n\n      /* When a segment is split, the rightSE is replaced with a new sweep event */\n      value: function replaceRightSE(newRightSE) {\n        this.rightSE = newRightSE;\n        this.rightSE.segment = this;\n        this.rightSE.otherSE = this.leftSE;\n        this.leftSE.otherSE = this.rightSE;\n      }\n    }, {\n      key: \"bbox\",\n      value: function bbox() {\n        var y1 = this.leftSE.point.y;\n        var y2 = this.rightSE.point.y;\n        return {\n          ll: {\n            x: this.leftSE.point.x,\n            y: y1 < y2 ? y1 : y2\n          },\n          ur: {\n            x: this.rightSE.point.x,\n            y: y1 > y2 ? y1 : y2\n          }\n        };\n      }\n      /* A vector from the left point to the right */\n\n    }, {\n      key: \"vector\",\n      value: function vector() {\n        return {\n          x: this.rightSE.point.x - this.leftSE.point.x,\n          y: this.rightSE.point.y - this.leftSE.point.y\n        };\n      }\n    }, {\n      key: \"isAnEndpoint\",\n      value: function isAnEndpoint(pt) {\n        return pt.x === this.leftSE.point.x && pt.y === this.leftSE.point.y || pt.x === this.rightSE.point.x && pt.y === this.rightSE.point.y;\n      }\n      /* Compare this segment with a point.\n       *\n       * A point P is considered to be colinear to a segment if there\n       * exists a distance D such that if we travel along the segment\n       * from one * endpoint towards the other a distance D, we find\n       * ourselves at point P.\n       *\n       * Return value indicates:\n       *\n       *   1: point lies above the segment (to the left of vertical)\n       *   0: point is colinear to segment\n       *  -1: point lies below the segment (to the right of vertical)\n       */\n\n    }, {\n      key: \"comparePoint\",\n      value: function comparePoint(point) {\n        if (this.isAnEndpoint(point)) return 0;\n        var lPt = this.leftSE.point;\n        var rPt = this.rightSE.point;\n        var v = this.vector(); // Exactly vertical segments.\n\n        if (lPt.x === rPt.x) {\n          if (point.x === lPt.x) return 0;\n          return point.x < lPt.x ? 1 : -1;\n        } // Nearly vertical segments with an intersection.\n        // Check to see where a point on the line with matching Y coordinate is.\n\n\n        var yDist = (point.y - lPt.y) / v.y;\n        var xFromYDist = lPt.x + yDist * v.x;\n        if (point.x === xFromYDist) return 0; // General case.\n        // Check to see where a point on the line with matching X coordinate is.\n\n        var xDist = (point.x - lPt.x) / v.x;\n        var yFromXDist = lPt.y + xDist * v.y;\n        if (point.y === yFromXDist) return 0;\n        return point.y < yFromXDist ? -1 : 1;\n      }\n      /**\n       * Given another segment, returns the first non-trivial intersection\n       * between the two segments (in terms of sweep line ordering), if it exists.\n       *\n       * A 'non-trivial' intersection is one that will cause one or both of the\n       * segments to be split(). As such, 'trivial' vs. 'non-trivial' intersection:\n       *\n       *   * endpoint of segA with endpoint of segB --> trivial\n       *   * endpoint of segA with point along segB --> non-trivial\n       *   * endpoint of segB with point along segA --> non-trivial\n       *   * point along segA with point along segB --> non-trivial\n       *\n       * If no non-trivial intersection exists, return null\n       * Else, return null.\n       */\n\n    }, {\n      key: \"getIntersection\",\n      value: function getIntersection(other) {\n        // If bboxes don't overlap, there can't be any intersections\n        var tBbox = this.bbox();\n        var oBbox = other.bbox();\n        var bboxOverlap = getBboxOverlap(tBbox, oBbox);\n        if (bboxOverlap === null) return null; // We first check to see if the endpoints can be considered intersections.\n        // This will 'snap' intersections to endpoints if possible, and will\n        // handle cases of colinearity.\n\n        var tlp = this.leftSE.point;\n        var trp = this.rightSE.point;\n        var olp = other.leftSE.point;\n        var orp = other.rightSE.point; // does each endpoint touch the other segment?\n        // note that we restrict the 'touching' definition to only allow segments\n        // to touch endpoints that lie forward from where we are in the sweep line pass\n\n        var touchesOtherLSE = isInBbox(tBbox, olp) && this.comparePoint(olp) === 0;\n        var touchesThisLSE = isInBbox(oBbox, tlp) && other.comparePoint(tlp) === 0;\n        var touchesOtherRSE = isInBbox(tBbox, orp) && this.comparePoint(orp) === 0;\n        var touchesThisRSE = isInBbox(oBbox, trp) && other.comparePoint(trp) === 0; // do left endpoints match?\n\n        if (touchesThisLSE && touchesOtherLSE) {\n          // these two cases are for colinear segments with matching left\n          // endpoints, and one segment being longer than the other\n          if (touchesThisRSE && !touchesOtherRSE) return trp;\n          if (!touchesThisRSE && touchesOtherRSE) return orp; // either the two segments match exactly (two trival intersections)\n          // or just on their left endpoint (one trivial intersection\n\n          return null;\n        } // does this left endpoint matches (other doesn't)\n\n\n        if (touchesThisLSE) {\n          // check for segments that just intersect on opposing endpoints\n          if (touchesOtherRSE) {\n            if (tlp.x === orp.x && tlp.y === orp.y) return null;\n          } // t-intersection on left endpoint\n\n\n          return tlp;\n        } // does other left endpoint matches (this doesn't)\n\n\n        if (touchesOtherLSE) {\n          // check for segments that just intersect on opposing endpoints\n          if (touchesThisRSE) {\n            if (trp.x === olp.x && trp.y === olp.y) return null;\n          } // t-intersection on left endpoint\n\n\n          return olp;\n        } // trivial intersection on right endpoints\n\n\n        if (touchesThisRSE && touchesOtherRSE) return null; // t-intersections on just one right endpoint\n\n        if (touchesThisRSE) return trp;\n        if (touchesOtherRSE) return orp; // None of our endpoints intersect. Look for a general intersection between\n        // infinite lines laid over the segments\n\n        var pt = intersection(tlp, this.vector(), olp, other.vector()); // are the segments parrallel? Note that if they were colinear with overlap,\n        // they would have an endpoint intersection and that case was already handled above\n\n        if (pt === null) return null; // is the intersection found between the lines not on the segments?\n\n        if (!isInBbox(bboxOverlap, pt)) return null; // round the the computed point if needed\n\n        return rounder.round(pt.x, pt.y);\n      }\n      /**\n       * Split the given segment into multiple segments on the given points.\n       *  * Each existing segment will retain its leftSE and a new rightSE will be\n       *    generated for it.\n       *  * A new segment will be generated which will adopt the original segment's\n       *    rightSE, and a new leftSE will be generated for it.\n       *  * If there are more than two points given to split on, new segments\n       *    in the middle will be generated with new leftSE and rightSE's.\n       *  * An array of the newly generated SweepEvents will be returned.\n       *\n       * Warning: input array of points is modified\n       */\n\n    }, {\n      key: \"split\",\n      value: function split(point) {\n        var newEvents = [];\n        var alreadyLinked = point.events !== undefined;\n        var newLeftSE = new SweepEvent(point, true);\n        var newRightSE = new SweepEvent(point, false);\n        var oldRightSE = this.rightSE;\n        this.replaceRightSE(newRightSE);\n        newEvents.push(newRightSE);\n        newEvents.push(newLeftSE);\n        var newSeg = new Segment(newLeftSE, oldRightSE, this.rings.slice(), this.windings.slice()); // when splitting a nearly vertical downward-facing segment,\n        // sometimes one of the resulting new segments is vertical, in which\n        // case its left and right events may need to be swapped\n\n        if (SweepEvent.comparePoints(newSeg.leftSE.point, newSeg.rightSE.point) > 0) {\n          newSeg.swapEvents();\n        }\n\n        if (SweepEvent.comparePoints(this.leftSE.point, this.rightSE.point) > 0) {\n          this.swapEvents();\n        } // in the point we just used to create new sweep events with was already\n        // linked to other events, we need to check if either of the affected\n        // segments should be consumed\n\n\n        if (alreadyLinked) {\n          newLeftSE.checkForConsuming();\n          newRightSE.checkForConsuming();\n        }\n\n        return newEvents;\n      }\n      /* Swap which event is left and right */\n\n    }, {\n      key: \"swapEvents\",\n      value: function swapEvents() {\n        var tmpEvt = this.rightSE;\n        this.rightSE = this.leftSE;\n        this.leftSE = tmpEvt;\n        this.leftSE.isLeft = true;\n        this.rightSE.isLeft = false;\n\n        for (var i = 0, iMax = this.windings.length; i < iMax; i++) {\n          this.windings[i] *= -1;\n        }\n      }\n      /* Consume another segment. We take their rings under our wing\n       * and mark them as consumed. Use for perfectly overlapping segments */\n\n    }, {\n      key: \"consume\",\n      value: function consume(other) {\n        var consumer = this;\n        var consumee = other;\n\n        while (consumer.consumedBy) {\n          consumer = consumer.consumedBy;\n        }\n\n        while (consumee.consumedBy) {\n          consumee = consumee.consumedBy;\n        }\n\n        var cmp = Segment.compare(consumer, consumee);\n        if (cmp === 0) return; // already consumed\n        // the winner of the consumption is the earlier segment\n        // according to sweep line ordering\n\n        if (cmp > 0) {\n          var tmp = consumer;\n          consumer = consumee;\n          consumee = tmp;\n        } // make sure a segment doesn't consume it's prev\n\n\n        if (consumer.prev === consumee) {\n          var _tmp = consumer;\n          consumer = consumee;\n          consumee = _tmp;\n        }\n\n        for (var i = 0, iMax = consumee.rings.length; i < iMax; i++) {\n          var ring = consumee.rings[i];\n          var winding = consumee.windings[i];\n          var index = consumer.rings.indexOf(ring);\n\n          if (index === -1) {\n            consumer.rings.push(ring);\n            consumer.windings.push(winding);\n          } else consumer.windings[index] += winding;\n        }\n\n        consumee.rings = null;\n        consumee.windings = null;\n        consumee.consumedBy = consumer; // mark sweep events consumed as to maintain ordering in sweep event queue\n\n        consumee.leftSE.consumedBy = consumer.leftSE;\n        consumee.rightSE.consumedBy = consumer.rightSE;\n      }\n      /* The first segment previous segment chain that is in the result */\n\n    }, {\n      key: \"prevInResult\",\n      value: function prevInResult() {\n        if (this._prevInResult !== undefined) return this._prevInResult;\n        if (!this.prev) this._prevInResult = null;else if (this.prev.isInResult()) this._prevInResult = this.prev;else this._prevInResult = this.prev.prevInResult();\n        return this._prevInResult;\n      }\n    }, {\n      key: \"beforeState\",\n      value: function beforeState() {\n        if (this._beforeState !== undefined) return this._beforeState;\n        if (!this.prev) this._beforeState = {\n          rings: [],\n          windings: [],\n          multiPolys: []\n        };else {\n          var seg = this.prev.consumedBy || this.prev;\n          this._beforeState = seg.afterState();\n        }\n        return this._beforeState;\n      }\n    }, {\n      key: \"afterState\",\n      value: function afterState() {\n        if (this._afterState !== undefined) return this._afterState;\n        var beforeState = this.beforeState();\n        this._afterState = {\n          rings: beforeState.rings.slice(0),\n          windings: beforeState.windings.slice(0),\n          multiPolys: []\n        };\n        var ringsAfter = this._afterState.rings;\n        var windingsAfter = this._afterState.windings;\n        var mpsAfter = this._afterState.multiPolys; // calculate ringsAfter, windingsAfter\n\n        for (var i = 0, iMax = this.rings.length; i < iMax; i++) {\n          var ring = this.rings[i];\n          var winding = this.windings[i];\n          var index = ringsAfter.indexOf(ring);\n\n          if (index === -1) {\n            ringsAfter.push(ring);\n            windingsAfter.push(winding);\n          } else windingsAfter[index] += winding;\n        } // calcualte polysAfter\n\n\n        var polysAfter = [];\n        var polysExclude = [];\n\n        for (var _i = 0, _iMax = ringsAfter.length; _i < _iMax; _i++) {\n          if (windingsAfter[_i] === 0) continue; // non-zero rule\n\n          var _ring = ringsAfter[_i];\n          var poly = _ring.poly;\n          if (polysExclude.indexOf(poly) !== -1) continue;\n          if (_ring.isExterior) polysAfter.push(poly);else {\n            if (polysExclude.indexOf(poly) === -1) polysExclude.push(poly);\n\n            var _index = polysAfter.indexOf(_ring.poly);\n\n            if (_index !== -1) polysAfter.splice(_index, 1);\n          }\n        } // calculate multiPolysAfter\n\n\n        for (var _i2 = 0, _iMax2 = polysAfter.length; _i2 < _iMax2; _i2++) {\n          var mp = polysAfter[_i2].multiPoly;\n          if (mpsAfter.indexOf(mp) === -1) mpsAfter.push(mp);\n        }\n\n        return this._afterState;\n      }\n      /* Is this segment part of the final result? */\n\n    }, {\n      key: \"isInResult\",\n      value: function isInResult() {\n        // if we've been consumed, we're not in the result\n        if (this.consumedBy) return false;\n        if (this._isInResult !== undefined) return this._isInResult;\n        var mpsBefore = this.beforeState().multiPolys;\n        var mpsAfter = this.afterState().multiPolys;\n\n        switch (operation.type) {\n          case 'union':\n            {\n              // UNION - included iff:\n              //  * On one side of us there is 0 poly interiors AND\n              //  * On the other side there is 1 or more.\n              var noBefores = mpsBefore.length === 0;\n              var noAfters = mpsAfter.length === 0;\n              this._isInResult = noBefores !== noAfters;\n              break;\n            }\n\n          case 'intersection':\n            {\n              // INTERSECTION - included iff:\n              //  * on one side of us all multipolys are rep. with poly interiors AND\n              //  * on the other side of us, not all multipolys are repsented\n              //    with poly interiors\n              var least;\n              var most;\n\n              if (mpsBefore.length < mpsAfter.length) {\n                least = mpsBefore.length;\n                most = mpsAfter.length;\n              } else {\n                least = mpsAfter.length;\n                most = mpsBefore.length;\n              }\n\n              this._isInResult = most === operation.numMultiPolys && least < most;\n              break;\n            }\n\n          case 'xor':\n            {\n              // XOR - included iff:\n              //  * the difference between the number of multipolys represented\n              //    with poly interiors on our two sides is an odd number\n              var diff = Math.abs(mpsBefore.length - mpsAfter.length);\n              this._isInResult = diff % 2 === 1;\n              break;\n            }\n\n          case 'difference':\n            {\n              // DIFFERENCE included iff:\n              //  * on exactly one side, we have just the subject\n              var isJustSubject = function isJustSubject(mps) {\n                return mps.length === 1 && mps[0].isSubject;\n              };\n\n              this._isInResult = isJustSubject(mpsBefore) !== isJustSubject(mpsAfter);\n              break;\n            }\n\n          default:\n            throw new Error(\"Unrecognized operation type found \".concat(operation.type));\n        }\n\n        return this._isInResult;\n      }\n    }], [{\n      key: \"fromRing\",\n      value: function fromRing(pt1, pt2, ring) {\n        var leftPt, rightPt, winding; // ordering the two points according to sweep line ordering\n\n        var cmpPts = SweepEvent.comparePoints(pt1, pt2);\n\n        if (cmpPts < 0) {\n          leftPt = pt1;\n          rightPt = pt2;\n          winding = 1;\n        } else if (cmpPts > 0) {\n          leftPt = pt2;\n          rightPt = pt1;\n          winding = -1;\n        } else throw new Error(\"Tried to create degenerate segment at [\".concat(pt1.x, \", \").concat(pt1.y, \"]\"));\n\n        var leftSE = new SweepEvent(leftPt, true);\n        var rightSE = new SweepEvent(rightPt, false);\n        return new Segment(leftSE, rightSE, [ring], [winding]);\n      }\n    }]);\n\n    return Segment;\n  }();\n\n  var RingIn = /*#__PURE__*/function () {\n    function RingIn(geomRing, poly, isExterior) {\n      _classCallCheck(this, RingIn);\n\n      if (!Array.isArray(geomRing) || geomRing.length === 0) {\n        throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n      }\n\n      this.poly = poly;\n      this.isExterior = isExterior;\n      this.segments = [];\n\n      if (typeof geomRing[0][0] !== 'number' || typeof geomRing[0][1] !== 'number') {\n        throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n      }\n\n      var firstPoint = rounder.round(geomRing[0][0], geomRing[0][1]);\n      this.bbox = {\n        ll: {\n          x: firstPoint.x,\n          y: firstPoint.y\n        },\n        ur: {\n          x: firstPoint.x,\n          y: firstPoint.y\n        }\n      };\n      var prevPoint = firstPoint;\n\n      for (var i = 1, iMax = geomRing.length; i < iMax; i++) {\n        if (typeof geomRing[i][0] !== 'number' || typeof geomRing[i][1] !== 'number') {\n          throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n        }\n\n        var point = rounder.round(geomRing[i][0], geomRing[i][1]); // skip repeated points\n\n        if (point.x === prevPoint.x && point.y === prevPoint.y) continue;\n        this.segments.push(Segment.fromRing(prevPoint, point, this));\n        if (point.x < this.bbox.ll.x) this.bbox.ll.x = point.x;\n        if (point.y < this.bbox.ll.y) this.bbox.ll.y = point.y;\n        if (point.x > this.bbox.ur.x) this.bbox.ur.x = point.x;\n        if (point.y > this.bbox.ur.y) this.bbox.ur.y = point.y;\n        prevPoint = point;\n      } // add segment from last to first if last is not the same as first\n\n\n      if (firstPoint.x !== prevPoint.x || firstPoint.y !== prevPoint.y) {\n        this.segments.push(Segment.fromRing(prevPoint, firstPoint, this));\n      }\n    }\n\n    _createClass(RingIn, [{\n      key: \"getSweepEvents\",\n      value: function getSweepEvents() {\n        var sweepEvents = [];\n\n        for (var i = 0, iMax = this.segments.length; i < iMax; i++) {\n          var segment = this.segments[i];\n          sweepEvents.push(segment.leftSE);\n          sweepEvents.push(segment.rightSE);\n        }\n\n        return sweepEvents;\n      }\n    }]);\n\n    return RingIn;\n  }();\n  var PolyIn = /*#__PURE__*/function () {\n    function PolyIn(geomPoly, multiPoly) {\n      _classCallCheck(this, PolyIn);\n\n      if (!Array.isArray(geomPoly)) {\n        throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n      }\n\n      this.exteriorRing = new RingIn(geomPoly[0], this, true); // copy by value\n\n      this.bbox = {\n        ll: {\n          x: this.exteriorRing.bbox.ll.x,\n          y: this.exteriorRing.bbox.ll.y\n        },\n        ur: {\n          x: this.exteriorRing.bbox.ur.x,\n          y: this.exteriorRing.bbox.ur.y\n        }\n      };\n      this.interiorRings = [];\n\n      for (var i = 1, iMax = geomPoly.length; i < iMax; i++) {\n        var ring = new RingIn(geomPoly[i], this, false);\n        if (ring.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = ring.bbox.ll.x;\n        if (ring.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = ring.bbox.ll.y;\n        if (ring.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = ring.bbox.ur.x;\n        if (ring.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = ring.bbox.ur.y;\n        this.interiorRings.push(ring);\n      }\n\n      this.multiPoly = multiPoly;\n    }\n\n    _createClass(PolyIn, [{\n      key: \"getSweepEvents\",\n      value: function getSweepEvents() {\n        var sweepEvents = this.exteriorRing.getSweepEvents();\n\n        for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n          var ringSweepEvents = this.interiorRings[i].getSweepEvents();\n\n          for (var j = 0, jMax = ringSweepEvents.length; j < jMax; j++) {\n            sweepEvents.push(ringSweepEvents[j]);\n          }\n        }\n\n        return sweepEvents;\n      }\n    }]);\n\n    return PolyIn;\n  }();\n  var MultiPolyIn = /*#__PURE__*/function () {\n    function MultiPolyIn(geom, isSubject) {\n      _classCallCheck(this, MultiPolyIn);\n\n      if (!Array.isArray(geom)) {\n        throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n      }\n\n      try {\n        // if the input looks like a polygon, convert it to a multipolygon\n        if (typeof geom[0][0][0] === 'number') geom = [geom];\n      } catch (ex) {// The input is either malformed or has empty arrays.\n        // In either case, it will be handled later on.\n      }\n\n      this.polys = [];\n      this.bbox = {\n        ll: {\n          x: Number.POSITIVE_INFINITY,\n          y: Number.POSITIVE_INFINITY\n        },\n        ur: {\n          x: Number.NEGATIVE_INFINITY,\n          y: Number.NEGATIVE_INFINITY\n        }\n      };\n\n      for (var i = 0, iMax = geom.length; i < iMax; i++) {\n        var poly = new PolyIn(geom[i], this);\n        if (poly.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = poly.bbox.ll.x;\n        if (poly.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = poly.bbox.ll.y;\n        if (poly.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = poly.bbox.ur.x;\n        if (poly.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = poly.bbox.ur.y;\n        this.polys.push(poly);\n      }\n\n      this.isSubject = isSubject;\n    }\n\n    _createClass(MultiPolyIn, [{\n      key: \"getSweepEvents\",\n      value: function getSweepEvents() {\n        var sweepEvents = [];\n\n        for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n          var polySweepEvents = this.polys[i].getSweepEvents();\n\n          for (var j = 0, jMax = polySweepEvents.length; j < jMax; j++) {\n            sweepEvents.push(polySweepEvents[j]);\n          }\n        }\n\n        return sweepEvents;\n      }\n    }]);\n\n    return MultiPolyIn;\n  }();\n\n  var RingOut = /*#__PURE__*/function () {\n    _createClass(RingOut, null, [{\n      key: \"factory\",\n\n      /* Given the segments from the sweep line pass, compute & return a series\n       * of closed rings from all the segments marked to be part of the result */\n      value: function factory(allSegments) {\n        var ringsOut = [];\n\n        for (var i = 0, iMax = allSegments.length; i < iMax; i++) {\n          var segment = allSegments[i];\n          if (!segment.isInResult() || segment.ringOut) continue;\n          var prevEvent = null;\n          var event = segment.leftSE;\n          var nextEvent = segment.rightSE;\n          var events = [event];\n          var startingPoint = event.point;\n          var intersectionLEs = [];\n          /* Walk the chain of linked events to form a closed ring */\n\n          while (true) {\n            prevEvent = event;\n            event = nextEvent;\n            events.push(event);\n            /* Is the ring complete? */\n\n            if (event.point === startingPoint) break;\n\n            while (true) {\n              var availableLEs = event.getAvailableLinkedEvents();\n              /* Did we hit a dead end? This shouldn't happen. Indicates some earlier\n               * part of the algorithm malfunctioned... please file a bug report. */\n\n              if (availableLEs.length === 0) {\n                var firstPt = events[0].point;\n                var lastPt = events[events.length - 1].point;\n                throw new Error(\"Unable to complete output ring starting at [\".concat(firstPt.x, \",\") + \" \".concat(firstPt.y, \"]. Last matching segment found ends at\") + \" [\".concat(lastPt.x, \", \").concat(lastPt.y, \"].\"));\n              }\n              /* Only one way to go, so cotinue on the path */\n\n\n              if (availableLEs.length === 1) {\n                nextEvent = availableLEs[0].otherSE;\n                break;\n              }\n              /* We must have an intersection. Check for a completed loop */\n\n\n              var indexLE = null;\n\n              for (var j = 0, jMax = intersectionLEs.length; j < jMax; j++) {\n                if (intersectionLEs[j].point === event.point) {\n                  indexLE = j;\n                  break;\n                }\n              }\n              /* Found a completed loop. Cut that off and make a ring */\n\n\n              if (indexLE !== null) {\n                var intersectionLE = intersectionLEs.splice(indexLE)[0];\n                var ringEvents = events.splice(intersectionLE.index);\n                ringEvents.unshift(ringEvents[0].otherSE);\n                ringsOut.push(new RingOut(ringEvents.reverse()));\n                continue;\n              }\n              /* register the intersection */\n\n\n              intersectionLEs.push({\n                index: events.length,\n                point: event.point\n              });\n              /* Choose the left-most option to continue the walk */\n\n              var comparator = event.getLeftmostComparator(prevEvent);\n              nextEvent = availableLEs.sort(comparator)[0].otherSE;\n              break;\n            }\n          }\n\n          ringsOut.push(new RingOut(events));\n        }\n\n        return ringsOut;\n      }\n    }]);\n\n    function RingOut(events) {\n      _classCallCheck(this, RingOut);\n\n      this.events = events;\n\n      for (var i = 0, iMax = events.length; i < iMax; i++) {\n        events[i].segment.ringOut = this;\n      }\n\n      this.poly = null;\n    }\n\n    _createClass(RingOut, [{\n      key: \"getGeom\",\n      value: function getGeom() {\n        // Remove superfluous points (ie extra points along a straight line),\n        var prevPt = this.events[0].point;\n        var points = [prevPt];\n\n        for (var i = 1, iMax = this.events.length - 1; i < iMax; i++) {\n          var _pt = this.events[i].point;\n          var _nextPt = this.events[i + 1].point;\n          if (compareVectorAngles(_pt, prevPt, _nextPt) === 0) continue;\n          points.push(_pt);\n          prevPt = _pt;\n        } // ring was all (within rounding error of angle calc) colinear points\n\n\n        if (points.length === 1) return null; // check if the starting point is necessary\n\n        var pt = points[0];\n        var nextPt = points[1];\n        if (compareVectorAngles(pt, prevPt, nextPt) === 0) points.shift();\n        points.push(points[0]);\n        var step = this.isExteriorRing() ? 1 : -1;\n        var iStart = this.isExteriorRing() ? 0 : points.length - 1;\n        var iEnd = this.isExteriorRing() ? points.length : -1;\n        var orderedPoints = [];\n\n        for (var _i = iStart; _i != iEnd; _i += step) {\n          orderedPoints.push([points[_i].x, points[_i].y]);\n        }\n\n        return orderedPoints;\n      }\n    }, {\n      key: \"isExteriorRing\",\n      value: function isExteriorRing() {\n        if (this._isExteriorRing === undefined) {\n          var enclosing = this.enclosingRing();\n          this._isExteriorRing = enclosing ? !enclosing.isExteriorRing() : true;\n        }\n\n        return this._isExteriorRing;\n      }\n    }, {\n      key: \"enclosingRing\",\n      value: function enclosingRing() {\n        if (this._enclosingRing === undefined) {\n          this._enclosingRing = this._calcEnclosingRing();\n        }\n\n        return this._enclosingRing;\n      }\n      /* Returns the ring that encloses this one, if any */\n\n    }, {\n      key: \"_calcEnclosingRing\",\n      value: function _calcEnclosingRing() {\n        // start with the ealier sweep line event so that the prevSeg\n        // chain doesn't lead us inside of a loop of ours\n        var leftMostEvt = this.events[0];\n\n        for (var i = 1, iMax = this.events.length; i < iMax; i++) {\n          var evt = this.events[i];\n          if (SweepEvent.compare(leftMostEvt, evt) > 0) leftMostEvt = evt;\n        }\n\n        var prevSeg = leftMostEvt.segment.prevInResult();\n        var prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n\n        while (true) {\n          // no segment found, thus no ring can enclose us\n          if (!prevSeg) return null; // no segments below prev segment found, thus the ring of the prev\n          // segment must loop back around and enclose us\n\n          if (!prevPrevSeg) return prevSeg.ringOut; // if the two segments are of different rings, the ring of the prev\n          // segment must either loop around us or the ring of the prev prev\n          // seg, which would make us and the ring of the prev peers\n\n          if (prevPrevSeg.ringOut !== prevSeg.ringOut) {\n            if (prevPrevSeg.ringOut.enclosingRing() !== prevSeg.ringOut) {\n              return prevSeg.ringOut;\n            } else return prevSeg.ringOut.enclosingRing();\n          } // two segments are from the same ring, so this was a penisula\n          // of that ring. iterate downward, keep searching\n\n\n          prevSeg = prevPrevSeg.prevInResult();\n          prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n        }\n      }\n    }]);\n\n    return RingOut;\n  }();\n  var PolyOut = /*#__PURE__*/function () {\n    function PolyOut(exteriorRing) {\n      _classCallCheck(this, PolyOut);\n\n      this.exteriorRing = exteriorRing;\n      exteriorRing.poly = this;\n      this.interiorRings = [];\n    }\n\n    _createClass(PolyOut, [{\n      key: \"addInterior\",\n      value: function addInterior(ring) {\n        this.interiorRings.push(ring);\n        ring.poly = this;\n      }\n    }, {\n      key: \"getGeom\",\n      value: function getGeom() {\n        var geom = [this.exteriorRing.getGeom()]; // exterior ring was all (within rounding error of angle calc) colinear points\n\n        if (geom[0] === null) return null;\n\n        for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n          var ringGeom = this.interiorRings[i].getGeom(); // interior ring was all (within rounding error of angle calc) colinear points\n\n          if (ringGeom === null) continue;\n          geom.push(ringGeom);\n        }\n\n        return geom;\n      }\n    }]);\n\n    return PolyOut;\n  }();\n  var MultiPolyOut = /*#__PURE__*/function () {\n    function MultiPolyOut(rings) {\n      _classCallCheck(this, MultiPolyOut);\n\n      this.rings = rings;\n      this.polys = this._composePolys(rings);\n    }\n\n    _createClass(MultiPolyOut, [{\n      key: \"getGeom\",\n      value: function getGeom() {\n        var geom = [];\n\n        for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n          var polyGeom = this.polys[i].getGeom(); // exterior ring was all (within rounding error of angle calc) colinear points\n\n          if (polyGeom === null) continue;\n          geom.push(polyGeom);\n        }\n\n        return geom;\n      }\n    }, {\n      key: \"_composePolys\",\n      value: function _composePolys(rings) {\n        var polys = [];\n\n        for (var i = 0, iMax = rings.length; i < iMax; i++) {\n          var ring = rings[i];\n          if (ring.poly) continue;\n          if (ring.isExteriorRing()) polys.push(new PolyOut(ring));else {\n            var enclosingRing = ring.enclosingRing();\n            if (!enclosingRing.poly) polys.push(new PolyOut(enclosingRing));\n            enclosingRing.poly.addInterior(ring);\n          }\n        }\n\n        return polys;\n      }\n    }]);\n\n    return MultiPolyOut;\n  }();\n\n  /**\n   * NOTE:  We must be careful not to change any segments while\n   *        they are in the SplayTree. AFAIK, there's no way to tell\n   *        the tree to rebalance itself - thus before splitting\n   *        a segment that's in the tree, we remove it from the tree,\n   *        do the split, then re-insert it. (Even though splitting a\n   *        segment *shouldn't* change its correct position in the\n   *        sweep line tree, the reality is because of rounding errors,\n   *        it sometimes does.)\n   */\n\n  var SweepLine = /*#__PURE__*/function () {\n    function SweepLine(queue) {\n      var comparator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Segment.compare;\n\n      _classCallCheck(this, SweepLine);\n\n      this.queue = queue;\n      this.tree = new Tree(comparator);\n      this.segments = [];\n    }\n\n    _createClass(SweepLine, [{\n      key: \"process\",\n      value: function process(event) {\n        var segment = event.segment;\n        var newEvents = []; // if we've already been consumed by another segment,\n        // clean up our body parts and get out\n\n        if (event.consumedBy) {\n          if (event.isLeft) this.queue.remove(event.otherSE);else this.tree.remove(segment);\n          return newEvents;\n        }\n\n        var node = event.isLeft ? this.tree.insert(segment) : this.tree.find(segment);\n        if (!node) throw new Error(\"Unable to find segment #\".concat(segment.id, \" \") + \"[\".concat(segment.leftSE.point.x, \", \").concat(segment.leftSE.point.y, \"] -> \") + \"[\".concat(segment.rightSE.point.x, \", \").concat(segment.rightSE.point.y, \"] \") + 'in SweepLine tree. Please submit a bug report.');\n        var prevNode = node;\n        var nextNode = node;\n        var prevSeg = undefined;\n        var nextSeg = undefined; // skip consumed segments still in tree\n\n        while (prevSeg === undefined) {\n          prevNode = this.tree.prev(prevNode);\n          if (prevNode === null) prevSeg = null;else if (prevNode.key.consumedBy === undefined) prevSeg = prevNode.key;\n        } // skip consumed segments still in tree\n\n\n        while (nextSeg === undefined) {\n          nextNode = this.tree.next(nextNode);\n          if (nextNode === null) nextSeg = null;else if (nextNode.key.consumedBy === undefined) nextSeg = nextNode.key;\n        }\n\n        if (event.isLeft) {\n          // Check for intersections against the previous segment in the sweep line\n          var prevMySplitter = null;\n\n          if (prevSeg) {\n            var prevInter = prevSeg.getIntersection(segment);\n\n            if (prevInter !== null) {\n              if (!segment.isAnEndpoint(prevInter)) prevMySplitter = prevInter;\n\n              if (!prevSeg.isAnEndpoint(prevInter)) {\n                var newEventsFromSplit = this._splitSafely(prevSeg, prevInter);\n\n                for (var i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n                  newEvents.push(newEventsFromSplit[i]);\n                }\n              }\n            }\n          } // Check for intersections against the next segment in the sweep line\n\n\n          var nextMySplitter = null;\n\n          if (nextSeg) {\n            var nextInter = nextSeg.getIntersection(segment);\n\n            if (nextInter !== null) {\n              if (!segment.isAnEndpoint(nextInter)) nextMySplitter = nextInter;\n\n              if (!nextSeg.isAnEndpoint(nextInter)) {\n                var _newEventsFromSplit = this._splitSafely(nextSeg, nextInter);\n\n                for (var _i = 0, _iMax = _newEventsFromSplit.length; _i < _iMax; _i++) {\n                  newEvents.push(_newEventsFromSplit[_i]);\n                }\n              }\n            }\n          } // For simplicity, even if we find more than one intersection we only\n          // spilt on the 'earliest' (sweep-line style) of the intersections.\n          // The other intersection will be handled in a future process().\n\n\n          if (prevMySplitter !== null || nextMySplitter !== null) {\n            var mySplitter = null;\n            if (prevMySplitter === null) mySplitter = nextMySplitter;else if (nextMySplitter === null) mySplitter = prevMySplitter;else {\n              var cmpSplitters = SweepEvent.comparePoints(prevMySplitter, nextMySplitter);\n              mySplitter = cmpSplitters <= 0 ? prevMySplitter : nextMySplitter;\n            } // Rounding errors can cause changes in ordering,\n            // so remove afected segments and right sweep events before splitting\n\n            this.queue.remove(segment.rightSE);\n            newEvents.push(segment.rightSE);\n\n            var _newEventsFromSplit2 = segment.split(mySplitter);\n\n            for (var _i2 = 0, _iMax2 = _newEventsFromSplit2.length; _i2 < _iMax2; _i2++) {\n              newEvents.push(_newEventsFromSplit2[_i2]);\n            }\n          }\n\n          if (newEvents.length > 0) {\n            // We found some intersections, so re-do the current event to\n            // make sure sweep line ordering is totally consistent for later\n            // use with the segment 'prev' pointers\n            this.tree.remove(segment);\n            newEvents.push(event);\n          } else {\n            // done with left event\n            this.segments.push(segment);\n            segment.prev = prevSeg;\n          }\n        } else {\n          // event.isRight\n          // since we're about to be removed from the sweep line, check for\n          // intersections between our previous and next segments\n          if (prevSeg && nextSeg) {\n            var inter = prevSeg.getIntersection(nextSeg);\n\n            if (inter !== null) {\n              if (!prevSeg.isAnEndpoint(inter)) {\n                var _newEventsFromSplit3 = this._splitSafely(prevSeg, inter);\n\n                for (var _i3 = 0, _iMax3 = _newEventsFromSplit3.length; _i3 < _iMax3; _i3++) {\n                  newEvents.push(_newEventsFromSplit3[_i3]);\n                }\n              }\n\n              if (!nextSeg.isAnEndpoint(inter)) {\n                var _newEventsFromSplit4 = this._splitSafely(nextSeg, inter);\n\n                for (var _i4 = 0, _iMax4 = _newEventsFromSplit4.length; _i4 < _iMax4; _i4++) {\n                  newEvents.push(_newEventsFromSplit4[_i4]);\n                }\n              }\n            }\n          }\n\n          this.tree.remove(segment);\n        }\n\n        return newEvents;\n      }\n      /* Safely split a segment that is currently in the datastructures\n       * IE - a segment other than the one that is currently being processed. */\n\n    }, {\n      key: \"_splitSafely\",\n      value: function _splitSafely(seg, pt) {\n        // Rounding errors can cause changes in ordering,\n        // so remove afected segments and right sweep events before splitting\n        // removeNode() doesn't work, so have re-find the seg\n        // https://github.com/w8r/splay-tree/pull/5\n        this.tree.remove(seg);\n        var rightSE = seg.rightSE;\n        this.queue.remove(rightSE);\n        var newEvents = seg.split(pt);\n        newEvents.push(rightSE); // splitting can trigger consumption\n\n        if (seg.consumedBy === undefined) this.tree.insert(seg);\n        return newEvents;\n      }\n    }]);\n\n    return SweepLine;\n  }();\n\n  var POLYGON_CLIPPING_MAX_QUEUE_SIZE = typeof process !== 'undefined' && process.env.POLYGON_CLIPPING_MAX_QUEUE_SIZE || 1000000;\n  var POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS = typeof process !== 'undefined' && process.env.POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS || 1000000;\n  var Operation = /*#__PURE__*/function () {\n    function Operation() {\n      _classCallCheck(this, Operation);\n    }\n\n    _createClass(Operation, [{\n      key: \"run\",\n      value: function run(type, geom, moreGeoms) {\n        operation.type = type;\n        rounder.reset();\n        /* Convert inputs to MultiPoly objects */\n\n        var multipolys = [new MultiPolyIn(geom, true)];\n\n        for (var i = 0, iMax = moreGeoms.length; i < iMax; i++) {\n          multipolys.push(new MultiPolyIn(moreGeoms[i], false));\n        }\n\n        operation.numMultiPolys = multipolys.length;\n        /* BBox optimization for difference operation\n         * If the bbox of a multipolygon that's part of the clipping doesn't\n         * intersect the bbox of the subject at all, we can just drop that\n         * multiploygon. */\n\n        if (operation.type === 'difference') {\n          // in place removal\n          var subject = multipolys[0];\n          var _i = 1;\n\n          while (_i < multipolys.length) {\n            if (getBboxOverlap(multipolys[_i].bbox, subject.bbox) !== null) _i++;else multipolys.splice(_i, 1);\n          }\n        }\n        /* BBox optimization for intersection operation\n         * If we can find any pair of multipolygons whose bbox does not overlap,\n         * then the result will be empty. */\n\n\n        if (operation.type === 'intersection') {\n          // TODO: this is O(n^2) in number of polygons. By sorting the bboxes,\n          //       it could be optimized to O(n * ln(n))\n          for (var _i2 = 0, _iMax = multipolys.length; _i2 < _iMax; _i2++) {\n            var mpA = multipolys[_i2];\n\n            for (var j = _i2 + 1, jMax = multipolys.length; j < jMax; j++) {\n              if (getBboxOverlap(mpA.bbox, multipolys[j].bbox) === null) return [];\n            }\n          }\n        }\n        /* Put segment endpoints in a priority queue */\n\n\n        var queue = new Tree(SweepEvent.compare);\n\n        for (var _i3 = 0, _iMax2 = multipolys.length; _i3 < _iMax2; _i3++) {\n          var sweepEvents = multipolys[_i3].getSweepEvents();\n\n          for (var _j = 0, _jMax = sweepEvents.length; _j < _jMax; _j++) {\n            queue.insert(sweepEvents[_j]);\n\n            if (queue.size > POLYGON_CLIPPING_MAX_QUEUE_SIZE) {\n              // prevents an infinite loop, an otherwise common manifestation of bugs\n              throw new Error('Infinite loop when putting segment endpoints in a priority queue ' + '(queue size too big). Please file a bug report.');\n            }\n          }\n        }\n        /* Pass the sweep line over those endpoints */\n\n\n        var sweepLine = new SweepLine(queue);\n        var prevQueueSize = queue.size;\n        var node = queue.pop();\n\n        while (node) {\n          var evt = node.key;\n\n          if (queue.size === prevQueueSize) {\n            // prevents an infinite loop, an otherwise common manifestation of bugs\n            var seg = evt.segment;\n            throw new Error(\"Unable to pop() \".concat(evt.isLeft ? 'left' : 'right', \" SweepEvent \") + \"[\".concat(evt.point.x, \", \").concat(evt.point.y, \"] from segment #\").concat(seg.id, \" \") + \"[\".concat(seg.leftSE.point.x, \", \").concat(seg.leftSE.point.y, \"] -> \") + \"[\".concat(seg.rightSE.point.x, \", \").concat(seg.rightSE.point.y, \"] from queue. \") + 'Please file a bug report.');\n          }\n\n          if (queue.size > POLYGON_CLIPPING_MAX_QUEUE_SIZE) {\n            // prevents an infinite loop, an otherwise common manifestation of bugs\n            throw new Error('Infinite loop when passing sweep line over endpoints ' + '(queue size too big). Please file a bug report.');\n          }\n\n          if (sweepLine.segments.length > POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS) {\n            // prevents an infinite loop, an otherwise common manifestation of bugs\n            throw new Error('Infinite loop when passing sweep line over endpoints ' + '(too many sweep line segments). Please file a bug report.');\n          }\n\n          var newEvents = sweepLine.process(evt);\n\n          for (var _i4 = 0, _iMax3 = newEvents.length; _i4 < _iMax3; _i4++) {\n            var _evt = newEvents[_i4];\n            if (_evt.consumedBy === undefined) queue.insert(_evt);\n          }\n\n          prevQueueSize = queue.size;\n          node = queue.pop();\n        } // free some memory we don't need anymore\n\n\n        rounder.reset();\n        /* Collect and compile segments we're keeping into a multipolygon */\n\n        var ringsOut = RingOut.factory(sweepLine.segments);\n        var result = new MultiPolyOut(ringsOut);\n        return result.getGeom();\n      }\n    }]);\n\n    return Operation;\n  }(); // singleton available by import\n\n  var operation = new Operation();\n\n  var union = function union(geom) {\n    for (var _len = arguments.length, moreGeoms = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      moreGeoms[_key - 1] = arguments[_key];\n    }\n\n    return operation.run('union', geom, moreGeoms);\n  };\n\n  var intersection$1 = function intersection(geom) {\n    for (var _len2 = arguments.length, moreGeoms = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      moreGeoms[_key2 - 1] = arguments[_key2];\n    }\n\n    return operation.run('intersection', geom, moreGeoms);\n  };\n\n  var xor = function xor(geom) {\n    for (var _len3 = arguments.length, moreGeoms = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      moreGeoms[_key3 - 1] = arguments[_key3];\n    }\n\n    return operation.run('xor', geom, moreGeoms);\n  };\n\n  var difference = function difference(subjectGeom) {\n    for (var _len4 = arguments.length, clippingGeoms = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      clippingGeoms[_key4 - 1] = arguments[_key4];\n    }\n\n    return operation.run('difference', subjectGeom, clippingGeoms);\n  };\n\n  var index = {\n    union: union,\n    intersection: intersection$1,\n    xor: xor,\n    difference: difference\n  };\n\n  return index;\n\n})));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(coord) {\n    if (!coord) {\n        throw new Error(\"coord is required\");\n    }\n    if (!Array.isArray(coord)) {\n        if (coord.type === \"Feature\" &&\n            coord.geometry !== null &&\n            coord.geometry.type === \"Point\") {\n            return coord.geometry.coordinates;\n        }\n        if (coord.type === \"Point\") {\n            return coord.coordinates;\n        }\n    }\n    if (Array.isArray(coord) &&\n        coord.length >= 2 &&\n        !Array.isArray(coord[0]) &&\n        !Array.isArray(coord[1])) {\n        return coord;\n    }\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\nexports.getCoord = getCoord;\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(coords) {\n    if (Array.isArray(coords)) {\n        return coords;\n    }\n    // Feature\n    if (coords.type === \"Feature\") {\n        if (coords.geometry !== null) {\n            return coords.geometry.coordinates;\n        }\n    }\n    else {\n        // Geometry\n        if (coords.coordinates) {\n            return coords.coordinates;\n        }\n    }\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\n}\nexports.getCoords = getCoords;\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 &&\n        helpers_1.isNumber(coordinates[0]) &&\n        helpers_1.isNumber(coordinates[1])) {\n        return true;\n    }\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error(\"coordinates must only contain numbers\");\n}\nexports.containsNumber = containsNumber;\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) {\n        throw new Error(\"type and name required\");\n    }\n    if (!value || value.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            value.type);\n    }\n}\nexports.geojsonType = geojsonType;\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!feature) {\n        throw new Error(\"No feature passed\");\n    }\n    if (!name) {\n        throw new Error(\".featureOf() requires a name\");\n    }\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            feature.geometry.type);\n    }\n}\nexports.featureOf = featureOf;\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection, type, name) {\n    if (!featureCollection) {\n        throw new Error(\"No featureCollection passed\");\n    }\n    if (!name) {\n        throw new Error(\".collectionOf() requires a name\");\n    }\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\n    }\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\n        var feature = _a[_i];\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error(\"Invalid input to \" +\n                name +\n                \": must be a \" +\n                type +\n                \", given \" +\n                feature.geometry.type);\n        }\n    }\n}\nexports.collectionOf = collectionOf;\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (geojson.type === \"Feature\") {\n        return geojson.geometry;\n    }\n    return geojson;\n}\nexports.getGeom = getGeom;\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message (unused)\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(geojson, _name) {\n    if (geojson.type === \"FeatureCollection\") {\n        return \"FeatureCollection\";\n    }\n    if (geojson.type === \"GeometryCollection\") {\n        return \"GeometryCollection\";\n    }\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n        return geojson.geometry.type;\n    }\n    return geojson.type;\n}\nexports.getType = getType;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar polygon_clipping_1 = __importDefault(require(\"polygon-clipping\"));\nvar invariant_1 = require(\"@turf/invariant\");\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Takes two {@link (Multi)Polygon(s)} and returns a combined polygon. If the input polygons are not contiguous, this function returns a {@link MultiPolygon} feature.\n *\n * @name union\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\n * @param {Object} [options={}] Optional Parameters\n * @param {Object} [options.properties={}] Translate Properties to output Feature\n * @returns {Feature<(Polygon|MultiPolygon)>} a combined {@link Polygon} or {@link MultiPolygon} feature, or null if the inputs are empty\n * @example\n * var poly1 = turf.polygon([[\n *     [-82.574787, 35.594087],\n *     [-82.574787, 35.615581],\n *     [-82.545261, 35.615581],\n *     [-82.545261, 35.594087],\n *     [-82.574787, 35.594087]\n * ]], {\"fill\": \"#0f0\"});\n * var poly2 = turf.polygon([[\n *     [-82.560024, 35.585153],\n *     [-82.560024, 35.602602],\n *     [-82.52964, 35.602602],\n *     [-82.52964, 35.585153],\n *     [-82.560024, 35.585153]\n * ]], {\"fill\": \"#00f\"});\n *\n * var union = turf.union(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, union];\n */\nfunction union(poly1, poly2, options) {\n    if (options === void 0) { options = {}; }\n    var geom1 = invariant_1.getGeom(poly1);\n    var geom2 = invariant_1.getGeom(poly2);\n    var unioned = polygon_clipping_1.default.union(geom1.coordinates, geom2.coordinates);\n    if (unioned.length === 0)\n        return null;\n    if (unioned.length === 1)\n        return helpers_1.polygon(unioned[0], options.properties);\n    else\n        return helpers_1.multiPolygon(unioned, options.properties);\n}\nexports.default = union;\n", "'use strict';\n\nvar polygonClipping = require('polygon-clipping');\nvar helpers = require('@turf/helpers');\nvar invariant = require('@turf/invariant');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar polygonClipping__default = /*#__PURE__*/_interopDefaultLegacy(polygonClipping);\n\n/**\n * Finds the difference between two {@link Polygon|polygons} by clipping the second polygon from the first.\n *\n * @name difference\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\n * @returns {Feature<Polygon|MultiPolygon>|null} a Polygon or MultiPolygon feature showing the area of `polygon1` excluding the area of `polygon2` (if empty returns `null`)\n * @example\n * var polygon1 = turf.polygon([[\n *   [128, -26],\n *   [141, -26],\n *   [141, -21],\n *   [128, -21],\n *   [128, -26]\n * ]], {\n *   \"fill\": \"#F00\",\n *   \"fill-opacity\": 0.1\n * });\n * var polygon2 = turf.polygon([[\n *   [126, -28],\n *   [140, -28],\n *   [140, -20],\n *   [126, -20],\n *   [126, -28]\n * ]], {\n *   \"fill\": \"#00F\",\n *   \"fill-opacity\": 0.1\n * });\n *\n * var difference = turf.difference(polygon1, polygon2);\n *\n * //addToMap\n * var addToMap = [polygon1, polygon2, difference];\n */\nfunction difference(polygon1, polygon2) {\n  var geom1 = invariant.getGeom(polygon1);\n  var geom2 = invariant.getGeom(polygon2);\n  var properties = polygon1.properties || {};\n\n  var differenced = polygonClipping__default['default'].difference(\n    geom1.coordinates,\n    geom2.coordinates\n  );\n  if (differenced.length === 0) return null;\n  if (differenced.length === 1) return helpers.polygon(differenced[0], properties);\n  return helpers.multiPolygon(differenced, properties);\n}\n\nmodule.exports = difference;\nmodule.exports.default = difference;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = require(\"@turf/helpers\");\nvar invariant_1 = require(\"@turf/invariant\");\nvar polygon_clipping_1 = __importDefault(require(\"polygon-clipping\"));\n/**\n * Takes two {@link Polygon|polygon} or {@link MultiPolygon|multi-polygon} geometries and\n * finds their polygonal intersection. If they don't intersect, returns null.\n *\n * @name intersect\n * @param {Feature<Polygon | MultiPolygon>} poly1 the first polygon or multipolygon\n * @param {Feature<Polygon | MultiPolygon>} poly2 the second polygon or multipolygon\n * @param {Object} [options={}] Optional Parameters\n * @param {Object} [options.properties={}] Translate GeoJSON Properties to Feature\n * @returns {Feature|null} returns a feature representing the area they share (either a {@link Polygon} or\n * {@link MultiPolygon}). If they do not share any area, returns `null`.\n * @example\n * var poly1 = turf.polygon([[\n *   [-122.801742, 45.48565],\n *   [-122.801742, 45.60491],\n *   [-122.584762, 45.60491],\n *   [-122.584762, 45.48565],\n *   [-122.801742, 45.48565]\n * ]]);\n *\n * var poly2 = turf.polygon([[\n *   [-122.520217, 45.535693],\n *   [-122.64038, 45.553967],\n *   [-122.720031, 45.526554],\n *   [-122.669906, 45.507309],\n *   [-122.723464, 45.446643],\n *   [-122.532577, 45.408574],\n *   [-122.487258, 45.477466],\n *   [-122.520217, 45.535693]\n * ]]);\n *\n * var intersection = turf.intersect(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, intersection];\n */\nfunction intersect(poly1, poly2, options) {\n    if (options === void 0) { options = {}; }\n    var geom1 = invariant_1.getGeom(poly1);\n    var geom2 = invariant_1.getGeom(poly2);\n    var intersection = polygon_clipping_1.default.intersection(geom1.coordinates, geom2.coordinates);\n    if (intersection.length === 0)\n        return null;\n    if (intersection.length === 1)\n        return helpers_1.polygon(intersection[0], options.properties);\n    return helpers_1.multiPolygon(intersection, options.properties);\n}\nexports.default = intersect;\n", "/**\n * Returns a cloned copy of the passed GeoJSON Object, including possible 'Foreign Members'.\n * ~3-5x faster than the common JSON.parse + JSON.stringify combo method.\n *\n * @name clone\n * @param {GeoJSON} geojson GeoJSON Object\n * @returns {GeoJSON} cloned GeoJSON Object\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]], {color: 'red'});\n *\n * var lineCloned = turf.clone(line);\n */\nfunction clone(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n\n    switch (geojson.type) {\n    case 'Feature':\n        return cloneFeature(geojson);\n    case 'FeatureCollection':\n        return cloneFeatureCollection(geojson);\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n    case 'GeometryCollection':\n        return cloneGeometry(geojson);\n    default:\n        throw new Error('unknown GeoJSON type');\n    }\n}\n\n/**\n * Clone Feature\n *\n * @private\n * @param {Feature<any>} geojson GeoJSON Feature\n * @returns {Feature<any>} cloned Feature\n */\nfunction cloneFeature(geojson) {\n    var cloned = {type: 'Feature'};\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n        case 'type':\n        case 'properties':\n        case 'geometry':\n            return;\n        default:\n            cloned[key] = geojson[key];\n        }\n    });\n    // Add properties & geometry last\n    cloned.properties = cloneProperties(geojson.properties);\n    cloned.geometry = cloneGeometry(geojson.geometry);\n    return cloned;\n}\n\n/**\n * Clone Properties\n *\n * @private\n * @param {Object} properties GeoJSON Properties\n * @returns {Object} cloned Properties\n */\nfunction cloneProperties(properties) {\n    var cloned = {};\n    if (!properties) return cloned;\n    Object.keys(properties).forEach(function (key) {\n        var value = properties[key];\n        if (typeof value === 'object') {\n            if (value === null) {\n                // handle null\n                cloned[key] = null;\n            } else if (value.length) {\n                // handle Array\n                cloned[key] = value.map(function (item) {\n                    return item;\n                });\n            } else {\n                // handle generic Object\n                cloned[key] = cloneProperties(value);\n            }\n        } else cloned[key] = value;\n    });\n    return cloned;\n}\n\n/**\n * Clone Feature Collection\n *\n * @private\n * @param {FeatureCollection<any>} geojson GeoJSON Feature Collection\n * @returns {FeatureCollection<any>} cloned Feature Collection\n */\nfunction cloneFeatureCollection(geojson) {\n    var cloned = {type: 'FeatureCollection'};\n\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n        case 'type':\n        case 'features':\n            return;\n        default:\n            cloned[key] = geojson[key];\n        }\n    });\n    // Add features\n    cloned.features = geojson.features.map(function (feature) {\n        return cloneFeature(feature);\n    });\n    return cloned;\n}\n\n/**\n * Clone Geometry\n *\n * @private\n * @param {Geometry<any>} geometry GeoJSON Geometry\n * @returns {Geometry<any>} cloned Geometry\n */\nfunction cloneGeometry(geometry) {\n    var geom = {type: geometry.type};\n    if (geometry.bbox) geom.bbox = geometry.bbox;\n\n    if (geometry.type === 'GeometryCollection') {\n        geom.geometries = geometry.geometries.map(function (geom) {\n            return cloneGeometry(geom);\n        });\n        return geom;\n    }\n    geom.coordinates = deepSlice(geometry.coordinates);\n    return geom;\n}\n\n/**\n * Deep Slice coordinates\n *\n * @private\n * @param {Coordinates} coords Coordinates\n * @returns {Coordinates} all coordinates sliced\n */\nfunction deepSlice(coords) {\n    if (typeof coords[0] !== 'object') { return coords.slice(); }\n    return coords.map(function (coord) {\n        return deepSlice(coord);\n    });\n}\n\nexport default clone;\n", "/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n", "import { isNumber } from '@turf/helpers';\n\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(coord) {\n    if (!coord) throw new Error('coord is required');\n    if (coord.type === 'Feature' && coord.geometry !== null && coord.geometry.type === 'Point') return coord.geometry.coordinates;\n    if (coord.type === 'Point') return coord.coordinates;\n    if (Array.isArray(coord) && coord.length >= 2 && coord[0].length === undefined && coord[1].length === undefined) return coord;\n\n    throw new Error('coord must be GeoJSON Point or an Array of numbers');\n}\n\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(coords) {\n    if (!coords) throw new Error('coords is required');\n\n    // Feature\n    if (coords.type === 'Feature' && coords.geometry !== null) return coords.geometry.coordinates;\n\n    // Geometry\n    if (coords.coordinates) return coords.coordinates;\n\n    // Array of numbers\n    if (Array.isArray(coords)) return coords;\n\n    throw new Error('coords must be GeoJSON Feature, Geometry Object or an Array');\n}\n\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n        return true;\n    }\n\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error('coordinates must only contain numbers');\n}\n\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) throw new Error('type and name required');\n\n    if (!value || value.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + value.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!feature) throw new Error('No feature passed');\n    if (!name) throw new Error('.featureOf() requires a name');\n    if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n        throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection, type, name) {\n    if (!featureCollection) throw new Error('No featureCollection passed');\n    if (!name) throw new Error('.collectionOf() requires a name');\n    if (!featureCollection || featureCollection.type !== 'FeatureCollection') {\n        throw new Error('Invalid input to ' + name + ', FeatureCollection required');\n    }\n    for (var i = 0; i < featureCollection.features.length; i++) {\n        var feature = featureCollection.features[i];\n        if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n            throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n        }\n    }\n}\n\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n    if (geojson.geometry !== undefined) return geojson.geometry;\n    if (geojson.coordinates || geojson.geometries) return geojson;\n    throw new Error('geojson must be a valid Feature or Geometry Object');\n}\n\n/**\n * Get Geometry Type from Feature or Geometry Object\n *\n * @throws {Error} **DEPRECATED** in v5.0.0 in favor of getType\n */\nfunction getGeomType() {\n    throw new Error('invariant.getGeomType has been deprecated in v5.0 in favor of invariant.getType');\n}\n\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(geojson, name) {\n    if (!geojson) throw new Error((name || 'geojson') + ' is required');\n    // GeoJSON Feature & GeometryCollection\n    if (geojson.geometry && geojson.geometry.type) return geojson.geometry.type;\n    // GeoJSON Geometry & FeatureCollection\n    if (geojson.type) return geojson.type;\n    throw new Error((name || 'geojson') + ' is invalid');\n}\n\nexport { getCoord, getCoords, containsNumber, geojsonType, featureOf, collectionOf, getGeom, getGeomType, getType };\n", "import { getCoords } from '@turf/invariant';\n\n/**\n * Takes a ring and return true or false whether or not the ring is clockwise or counter-clockwise.\n *\n * @name booleanClockwise\n * @param {Feature<LineString>} line to be evaluated\n * @returns {boolean} true/false\n * @example\n * var clockwiseRing = turf.lineString([[0,0],[1,1],[1,0],[0,0]]);\n * var counterClockwiseRing = turf.lineString([[0,0],[1,0],[1,1],[0,0]]);\n *\n * turf.booleanClockwise(clockwiseRing)\n * //=true\n * turf.booleanClockwise(counterClockwiseRing)\n * //=false\n */\nfunction booleanClockwise(line) {\n    // validation\n    if (!line) throw new Error('line is required');\n    var type = (line.geometry) ? line.geometry.type : line.type;\n    if (!Array.isArray(line) && type !== 'LineString') throw new Error('geometry must be a LineString');\n\n    var ring = getCoords(line);\n    var sum = 0;\n    var i = 1;\n    var prev, cur;\n    while (i < ring.length) {\n        prev = cur || ring[0];\n        cur = ring[i];\n        sum += ((cur[0] - prev[0]) * (cur[1] + prev[1]));\n        i++;\n    }\n    return sum > 0;\n}\n\nexport default booleanClockwise;\n", "/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n", "import { feature, isObject, lineString, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n    // Handles null Geometry -- Skips this GeoJSON\n    if (geojson === null) return;\n    var j, k, l, geometry, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        coordIndex = 0,\n        isGeometryCollection,\n        type = geojson.type,\n        isFeatureCollection = type === 'FeatureCollection',\n        isFeature = type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[featureIndex].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n            var multiFeatureIndex = 0;\n            var geometryIndex = 0;\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n\n            // Handles null Geometry -- Skips this geometry\n            if (geometry === null) continue;\n            coords = geometry.coordinates;\n            var geomType = geometry.type;\n\n            wrapShrink = (excludeWrapCoord && (geomType === 'Polygon' || geomType === 'MultiPolygon')) ? 1 : 0;\n\n            switch (geomType) {\n            case null:\n                break;\n            case 'Point':\n                if (callback(coords, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                coordIndex++;\n                multiFeatureIndex++;\n                break;\n            case 'LineString':\n            case 'MultiPoint':\n                for (j = 0; j < coords.length; j++) {\n                    if (callback(coords[j], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                    coordIndex++;\n                    if (geomType === 'MultiPoint') multiFeatureIndex++;\n                }\n                if (geomType === 'LineString') multiFeatureIndex++;\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                for (j = 0; j < coords.length; j++) {\n                    for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                        if (callback(coords[j][k], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                        coordIndex++;\n                    }\n                    if (geomType === 'MultiLineString') multiFeatureIndex++;\n                    if (geomType === 'Polygon') geometryIndex++;\n                }\n                if (geomType === 'Polygon') multiFeatureIndex++;\n                break;\n            case 'MultiPolygon':\n                for (j = 0; j < coords.length; j++) {\n                    if (geomType === 'MultiPolygon') geometryIndex = 0;\n                    for (k = 0; k < coords[j].length; k++) {\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                            if (callback(coords[j][k][l], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                            coordIndex++;\n                        }\n                        geometryIndex++;\n                    }\n                    multiFeatureIndex++;\n                }\n                break;\n            case 'GeometryCollection':\n                for (j = 0; j < geometry.geometries.length; j++)\n                    if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false) return false;\n                break;\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n    var previousValue = initialValue;\n    coordEach(geojson, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (coordIndex === 0 && initialValue === undefined) previousValue = currentCoord;\n        else previousValue = callback(previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n    }, excludeWrapCoord);\n    return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n    var i;\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i].properties, i) === false) break;\n        }\n        break;\n    case 'Feature':\n        callback(geojson.properties, 0);\n        break;\n    }\n}\n\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    propEach(geojson, function (currentProperties, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentProperties;\n        else previousValue = callback(previousValue, currentProperties, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n    if (geojson.type === 'Feature') {\n        callback(geojson, 0);\n    } else if (geojson.type === 'FeatureCollection') {\n        for (var i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i], i) === false) break;\n        }\n    }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    featureEach(geojson, function (currentFeature, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n    var coords = [];\n    coordEach(geojson, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n    var i, j, g, geometry, stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        featureProperties,\n        featureBBox,\n        featureId,\n        featureIndex = 0,\n        isFeatureCollection = geojson.type === 'FeatureCollection',\n        isFeature = geojson.type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[i].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        featureProperties = (isFeatureCollection ? geojson.features[i].properties :\n            (isFeature ? geojson.properties : {}));\n        featureBBox = (isFeatureCollection ? geojson.features[i].bbox :\n            (isFeature ? geojson.bbox : undefined));\n        featureId = (isFeatureCollection ? geojson.features[i].id :\n            (isFeature ? geojson.id : undefined));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n\n            // Handle null Geometry\n            if (geometry === null) {\n                if (callback(null, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                continue;\n            }\n            switch (geometry.type) {\n            case 'Point':\n            case 'LineString':\n            case 'MultiPoint':\n            case 'Polygon':\n            case 'MultiLineString':\n            case 'MultiPolygon': {\n                if (callback(geometry, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                break;\n            }\n            case 'GeometryCollection': {\n                for (j = 0; j < geometry.geometries.length; j++) {\n                    if (callback(geometry.geometries[j], featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                }\n                break;\n            }\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n        // Only increase `featureIndex` per each feature\n        featureIndex++;\n    }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(geojson, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentGeometry;\n        else previousValue = callback(previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n    geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n        // Callback for single geometry\n        var type = (geometry === null) ? null : geometry.type;\n        switch (type) {\n        case null:\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n            if (callback(feature(geometry, properties, {bbox: bbox, id: id}), featureIndex, 0) === false) return false;\n            return;\n        }\n\n        var geomType;\n\n        // Callback for multi-geometry\n        switch (type) {\n        case 'MultiPoint':\n            geomType = 'Point';\n            break;\n        case 'MultiLineString':\n            geomType = 'LineString';\n            break;\n        case 'MultiPolygon':\n            geomType = 'Polygon';\n            break;\n        }\n\n        for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n            var coordinate = geometry.coordinates[multiFeatureIndex];\n            var geom = {\n                type: geomType,\n                coordinates: coordinate\n            };\n            if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false) return false;\n        }\n    });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    flattenEach(geojson, function (currentFeature, featureIndex, multiFeatureIndex) {\n        if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex, multiFeatureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        var segmentIndex = 0;\n\n        // Exclude null Geometries\n        if (!feature$$1.geometry) return;\n        // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n        var type = feature$$1.geometry.type;\n        if (type === 'Point' || type === 'MultiPoint') return;\n\n        // Generate 2-vertex line segments\n        var previousCoords;\n        if (coordEach(feature$$1, function (currentCoord, coordIndex, featureIndexCoord, mutliPartIndexCoord, geometryIndex) {\n            // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n            if (previousCoords === undefined) {\n                previousCoords = currentCoord;\n                return;\n            }\n            var currentSegment = lineString([previousCoords, currentCoord], feature$$1.properties);\n            if (callback(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) === false) return false;\n            segmentIndex++;\n            previousCoords = currentCoord;\n        }) === false) return false;\n    });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentInex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    var started = false;\n    segmentEach(geojson, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n        if (started === false && initialValue === undefined) previousValue = currentSegment;\n        else previousValue = callback(previousValue, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n        started = true;\n    });\n    return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        if (feature$$1.geometry === null) return;\n        var type = feature$$1.geometry.type;\n        var coords = feature$$1.geometry.coordinates;\n        switch (type) {\n        case 'LineString':\n            if (callback(feature$$1, featureIndex, multiFeatureIndex, 0, 0) === false) return false;\n            break;\n        case 'Polygon':\n            for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n                if (callback(lineString(coords[geometryIndex], feature$$1.properties), featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n            }\n            break;\n        }\n    });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    lineEach(geojson, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentLine;\n        else previousValue = callback(previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var segmentIndex = options.segmentIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find SegmentIndex\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n        if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n        return lineString([coords[segmentIndex], coords[segmentIndex + 1]], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n        return lineString([coords[geometryIndex][segmentIndex], coords[geometryIndex][segmentIndex + 1]], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][segmentIndex], coords[multiFeatureIndex][segmentIndex + 1]], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][geometryIndex][segmentIndex], coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var coordIndex = options.coordIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find Coord Index\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n        return point(coords, properties, options);\n    case 'MultiPoint':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        return point(coords[multiFeatureIndex], properties, options);\n    case 'LineString':\n        if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n        return point(coords[coordIndex], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[geometryIndex].length + coordIndex;\n        return point(coords[geometryIndex][coordIndex], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex].length + coordIndex;\n        return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n        return point(coords[multiFeatureIndex][geometryIndex][coordIndex], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\nexport { coordEach, coordReduce, propEach, propReduce, featureEach, featureReduce, coordAll, geomEach, geomReduce, flattenEach, flattenReduce, segmentEach, segmentReduce, lineEach, lineReduce, findSegment, findPoint };\n", "import { isNumber } from '@turf/helpers';\n\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(coord) {\n    if (!coord) throw new Error('coord is required');\n    if (coord.type === 'Feature' && coord.geometry !== null && coord.geometry.type === 'Point') return coord.geometry.coordinates;\n    if (coord.type === 'Point') return coord.coordinates;\n    if (Array.isArray(coord) && coord.length >= 2 && coord[0].length === undefined && coord[1].length === undefined) return coord;\n\n    throw new Error('coord must be GeoJSON Point or an Array of numbers');\n}\n\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(coords) {\n    if (!coords) throw new Error('coords is required');\n\n    // Feature\n    if (coords.type === 'Feature' && coords.geometry !== null) return coords.geometry.coordinates;\n\n    // Geometry\n    if (coords.coordinates) return coords.coordinates;\n\n    // Array of numbers\n    if (Array.isArray(coords)) return coords;\n\n    throw new Error('coords must be GeoJSON Feature, Geometry Object or an Array');\n}\n\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n        return true;\n    }\n\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error('coordinates must only contain numbers');\n}\n\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) throw new Error('type and name required');\n\n    if (!value || value.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + value.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!feature) throw new Error('No feature passed');\n    if (!name) throw new Error('.featureOf() requires a name');\n    if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n        throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection, type, name) {\n    if (!featureCollection) throw new Error('No featureCollection passed');\n    if (!name) throw new Error('.collectionOf() requires a name');\n    if (!featureCollection || featureCollection.type !== 'FeatureCollection') {\n        throw new Error('Invalid input to ' + name + ', FeatureCollection required');\n    }\n    for (var i = 0; i < featureCollection.features.length; i++) {\n        var feature = featureCollection.features[i];\n        if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n            throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n        }\n    }\n}\n\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n    if (geojson.geometry !== undefined) return geojson.geometry;\n    if (geojson.coordinates || geojson.geometries) return geojson;\n    throw new Error('geojson must be a valid Feature or Geometry Object');\n}\n\n/**\n * Get Geometry Type from Feature or Geometry Object\n *\n * @throws {Error} **DEPRECATED** in v5.0.0 in favor of getType\n */\nfunction getGeomType() {\n    throw new Error('invariant.getGeomType has been deprecated in v5.0 in favor of invariant.getType');\n}\n\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(geojson, name) {\n    if (!geojson) throw new Error((name || 'geojson') + ' is required');\n    // GeoJSON Feature & GeometryCollection\n    if (geojson.geometry && geojson.geometry.type) return geojson.geometry.type;\n    // GeoJSON Geometry & FeatureCollection\n    if (geojson.type) return geojson.type;\n    throw new Error((name || 'geojson') + ' is invalid');\n}\n\nexport { getCoord, getCoords, containsNumber, geojsonType, featureOf, collectionOf, getGeom, getGeomType, getType };\n", "import clone from '@turf/clone';\nimport booleanClockwise from '@turf/boolean-clockwise';\nimport { featureEach, geomEach } from '@turf/meta';\nimport { getCoords } from '@turf/invariant';\nimport { featureCollection, isObject } from '@turf/helpers';\n\n/**\n * Rewind {@link LineString|(Multi)LineString} or {@link Polygon|(Multi)Polygon} outer ring counterclockwise and inner rings clockwise (Uses {@link http://en.wikipedia.org/wiki/Shoelace_formula|Shoelace Formula}).\n *\n * @name rewind\n * @param {GeoJSON} geojson input GeoJSON Polygon\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.reverse=false] enable reverse winding\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} rewind Polygon\n * @example\n * var polygon = turf.polygon([[[121, -29], [138, -29], [138, -18], [121, -18], [121, -29]]]);\n *\n * var rewind = turf.rewind(polygon);\n *\n * //addToMap\n * var addToMap = [rewind];\n */\nfunction rewind(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var reverse = options.reverse || false;\n    var mutate = options.mutate || false;\n\n    // validation\n    if (!geojson) throw new Error('<geojson> is required');\n    if (typeof reverse !== 'boolean') throw new Error('<reverse> must be a boolean');\n    if (typeof mutate !== 'boolean') throw new Error('<mutate> must be a boolean');\n\n    // prevent input mutation\n    if (mutate === false) geojson = clone(geojson);\n\n    // Support Feature Collection or Geometry Collection\n    var results = [];\n    switch (geojson.type) {\n    case 'GeometryCollection':\n        geomEach(geojson, function (geometry) {\n            rewindFeature(geometry, reverse);\n        });\n        return geojson;\n    case 'FeatureCollection':\n        featureEach(geojson, function (feature) {\n            featureEach(rewindFeature(feature, reverse), function (result) {\n                results.push(result);\n            });\n        });\n        return featureCollection(results);\n    }\n    // Support Feature or Geometry Objects\n    return rewindFeature(geojson, reverse);\n}\n\n/**\n * Rewind\n *\n * @private\n * @param {Geometry|Feature<any>} geojson Geometry or Feature\n * @param {Boolean} [reverse=false] enable reverse winding\n * @returns {Geometry|Feature<any>} rewind Geometry or Feature\n */\nfunction rewindFeature(geojson, reverse) {\n    var type = (geojson.type === 'Feature') ? geojson.geometry.type : geojson.type;\n\n    // Support all GeoJSON Geometry Objects\n    switch (type) {\n    case 'GeometryCollection':\n        geomEach(geojson, function (geometry) {\n            rewindFeature(geometry, reverse);\n        });\n        return geojson;\n    case 'LineString':\n        rewindLineString(getCoords(geojson), reverse);\n        return geojson;\n    case 'Polygon':\n        rewindPolygon(getCoords(geojson), reverse);\n        return geojson;\n    case 'MultiLineString':\n        getCoords(geojson).forEach(function (lineCoords) {\n            rewindLineString(lineCoords, reverse);\n        });\n        return geojson;\n    case 'MultiPolygon':\n        getCoords(geojson).forEach(function (lineCoords) {\n            rewindPolygon(lineCoords, reverse);\n        });\n        return geojson;\n    case 'Point':\n    case 'MultiPoint':\n        return geojson;\n    }\n}\n\n/**\n * Rewind LineString - outer ring clockwise\n *\n * @private\n * @param {Array<Array<number>>} coords GeoJSON LineString geometry coordinates\n * @param {Boolean} [reverse=false] enable reverse winding\n * @returns {void} mutates coordinates\n */\nfunction rewindLineString(coords, reverse) {\n    if (booleanClockwise(coords) === reverse) coords.reverse();\n}\n\n/**\n * Rewind Polygon - outer ring counterclockwise and inner rings clockwise.\n *\n * @private\n * @param {Array<Array<Array<number>>>} coords GeoJSON Polygon geometry coordinates\n * @param {Boolean} [reverse=false] enable reverse winding\n * @returns {void} mutates coordinates\n */\nfunction rewindPolygon(coords, reverse) {\n    // outer ring\n    if (booleanClockwise(coords[0]) !== reverse) {\n        coords[0].reverse();\n    }\n    // inner rings\n    for (var i = 1; i < coords.length; i++) {\n        if (booleanClockwise(coords[i]) === reverse) {\n            coords[i].reverse();\n        }\n    }\n}\n\nexport default rewind;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// http://en.wikipedia.org/wiki/Haversine_formula\n// http://www.movable-type.co.uk/scripts/latlong.html\nvar helpers_1 = require(\"@turf/helpers\");\nvar invariant_1 = require(\"@turf/invariant\");\n/**\n * Takes a {@link Point} and calculates the location of a destination point given a distance in\n * degrees, radians, miles, or kilometers; and bearing in degrees.\n * This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name destination\n * @param {Coord} origin starting point\n * @param {number} distance distance from the origin point\n * @param {number} bearing ranging from -180 to 180\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] miles, kilometers, degrees, or radians\n * @param {Object} [options.properties={}] Translate properties to Point\n * @returns {Feature<Point>} destination point\n * @example\n * var point = turf.point([-75.343, 39.984]);\n * var distance = 50;\n * var bearing = 90;\n * var options = {units: 'miles'};\n *\n * var destination = turf.destination(point, distance, bearing, options);\n *\n * //addToMap\n * var addToMap = [point, destination]\n * destination.properties['marker-color'] = '#f00';\n * point.properties['marker-color'] = '#0f0';\n */\nfunction destination(origin, distance, bearing, options) {\n    if (options === void 0) { options = {}; }\n    // Handle input\n    var coordinates1 = invariant_1.getCoord(origin);\n    var longitude1 = helpers_1.degreesToRadians(coordinates1[0]);\n    var latitude1 = helpers_1.degreesToRadians(coordinates1[1]);\n    var bearingRad = helpers_1.degreesToRadians(bearing);\n    var radians = helpers_1.lengthToRadians(distance, options.units);\n    // Main\n    var latitude2 = Math.asin(Math.sin(latitude1) * Math.cos(radians) +\n        Math.cos(latitude1) * Math.sin(radians) * Math.cos(bearingRad));\n    var longitude2 = longitude1 +\n        Math.atan2(Math.sin(bearingRad) * Math.sin(radians) * Math.cos(latitude1), Math.cos(radians) - Math.sin(latitude1) * Math.sin(latitude2));\n    var lng = helpers_1.radiansToDegrees(longitude2);\n    var lat = helpers_1.radiansToDegrees(latitude2);\n    return helpers_1.point([lng, lat], options.properties);\n}\nexports.default = destination;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = require(\"@turf/helpers\");\nvar invariant_1 = require(\"@turf/invariant\");\n// http://en.wikipedia.org/wiki/Haversine_formula\n// http://www.movable-type.co.uk/scripts/latlong.html\n/**\n * Takes two {@link Point|points} and finds the geographic bearing between them,\n * i.e. the angle measured in degrees from the north line (0 degrees)\n *\n * @name bearing\n * @param {Coord} start starting Point\n * @param {Coord} end ending Point\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.final=false] calculates the final bearing if true\n * @returns {number} bearing in decimal degrees, between -180 and 180 degrees (positive clockwise)\n * @example\n * var point1 = turf.point([-75.343, 39.984]);\n * var point2 = turf.point([-75.534, 39.123]);\n *\n * var bearing = turf.bearing(point1, point2);\n *\n * //addToMap\n * var addToMap = [point1, point2]\n * point1.properties['marker-color'] = '#f00'\n * point2.properties['marker-color'] = '#0f0'\n * point1.properties.bearing = bearing\n */\nfunction bearing(start, end, options) {\n    if (options === void 0) { options = {}; }\n    // Reverse calculation\n    if (options.final === true) {\n        return calculateFinalBearing(start, end);\n    }\n    var coordinates1 = invariant_1.getCoord(start);\n    var coordinates2 = invariant_1.getCoord(end);\n    var lon1 = helpers_1.degreesToRadians(coordinates1[0]);\n    var lon2 = helpers_1.degreesToRadians(coordinates2[0]);\n    var lat1 = helpers_1.degreesToRadians(coordinates1[1]);\n    var lat2 = helpers_1.degreesToRadians(coordinates2[1]);\n    var a = Math.sin(lon2 - lon1) * Math.cos(lat2);\n    var b = Math.cos(lat1) * Math.sin(lat2) -\n        Math.sin(lat1) * Math.cos(lat2) * Math.cos(lon2 - lon1);\n    return helpers_1.radiansToDegrees(Math.atan2(a, b));\n}\nexports.default = bearing;\n/**\n * Calculates Final Bearing\n *\n * @private\n * @param {Coord} start starting Point\n * @param {Coord} end ending Point\n * @returns {number} bearing\n */\nfunction calculateFinalBearing(start, end) {\n    // Swap start & end\n    var bear = bearing(end, start);\n    bear = (bear + 180) % 360;\n    return bear;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar invariant_1 = require(\"@turf/invariant\");\nvar helpers_1 = require(\"@turf/helpers\");\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n/**\n * Calculates the distance between two {@link Point|points} in degrees, radians, miles, or kilometers.\n * This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name distance\n * @param {Coord | Point} from origin point or coordinate\n * @param {Coord | Point} to destination point or coordinate\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {number} distance between the two points\n * @example\n * var from = turf.point([-75.343, 39.984]);\n * var to = turf.point([-75.534, 39.123]);\n * var options = {units: 'miles'};\n *\n * var distance = turf.distance(from, to, options);\n *\n * //addToMap\n * var addToMap = [from, to];\n * from.properties.distance = distance;\n * to.properties.distance = distance;\n */\nfunction distance(from, to, options) {\n    if (options === void 0) { options = {}; }\n    var coordinates1 = invariant_1.getCoord(from);\n    var coordinates2 = invariant_1.getCoord(to);\n    var dLat = helpers_1.degreesToRadians(coordinates2[1] - coordinates1[1]);\n    var dLon = helpers_1.degreesToRadians(coordinates2[0] - coordinates1[0]);\n    var lat1 = helpers_1.degreesToRadians(coordinates1[1]);\n    var lat2 = helpers_1.degreesToRadians(coordinates2[1]);\n    var a = Math.pow(Math.sin(dLat / 2), 2) +\n        Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n    return helpers_1.radiansToLength(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), options.units);\n}\nexports.default = distance;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// https://en.wikipedia.org/wiki/Rhumb_line\nvar helpers_1 = require(\"@turf/helpers\");\nvar invariant_1 = require(\"@turf/invariant\");\n/**\n * Calculates the distance along a rhumb line between two {@link Point|points} in degrees, radians,\n * miles, or kilometers.\n *\n * @name rhumbDistance\n * @param {Coord} from origin point\n * @param {Coord} to destination point\n * @param {Object} [options] Optional parameters\n * @param {string} [options.units=\"kilometers\"] can be degrees, radians, miles, or kilometers\n * @returns {number} distance between the two points\n * @example\n * var from = turf.point([-75.343, 39.984]);\n * var to = turf.point([-75.534, 39.123]);\n * var options = {units: 'miles'};\n *\n * var distance = turf.rhumbDistance(from, to, options);\n *\n * //addToMap\n * var addToMap = [from, to];\n * from.properties.distance = distance;\n * to.properties.distance = distance;\n */\nfunction rhumbDistance(from, to, options) {\n    if (options === void 0) { options = {}; }\n    var origin = invariant_1.getCoord(from);\n    var destination = invariant_1.getCoord(to);\n    // compensate the crossing of the 180th meridian (https://macwright.org/2016/09/26/the-180th-meridian.html)\n    // solution from https://github.com/mapbox/mapbox-gl-js/issues/3250#issuecomment-294887678\n    destination[0] +=\n        destination[0] - origin[0] > 180\n            ? -360\n            : origin[0] - destination[0] > 180\n                ? 360\n                : 0;\n    var distanceInMeters = calculateRhumbDistance(origin, destination);\n    var distance = helpers_1.convertLength(distanceInMeters, \"meters\", options.units);\n    return distance;\n}\n/**\n * Returns the distance travelling from ‘this’ point to destination point along a rhumb line.\n * Adapted from Geodesy: https://github.com/chrisveness/geodesy/blob/master/latlon-spherical.js\n *\n * @private\n * @param   {Array<number>} origin point.\n * @param   {Array<number>} destination point.\n * @param   {number} [radius=6371e3] - (Mean) radius of earth (defaults to radius in metres).\n * @returns {number} Distance in km between this point and destination point (same units as radius).\n *\n * @example\n *     var p1 = new LatLon(51.127, 1.338);\n *     var p2 = new LatLon(50.964, 1.853);\n *     var d = p1.distanceTo(p2); // 40.31 km\n */\nfunction calculateRhumbDistance(origin, destination, radius) {\n    // φ => phi\n    // λ => lambda\n    // ψ => psi\n    // Δ => Delta\n    // δ => delta\n    // θ => theta\n    radius = radius === undefined ? helpers_1.earthRadius : Number(radius);\n    // see www.edwilliams.org/avform.htm#Rhumb\n    var R = radius;\n    var phi1 = (origin[1] * Math.PI) / 180;\n    var phi2 = (destination[1] * Math.PI) / 180;\n    var DeltaPhi = phi2 - phi1;\n    var DeltaLambda = (Math.abs(destination[0] - origin[0]) * Math.PI) / 180;\n    // if dLon over 180° take shorter rhumb line across the anti-meridian:\n    if (DeltaLambda > Math.PI) {\n        DeltaLambda -= 2 * Math.PI;\n    }\n    // on Mercator projection, longitude distances shrink by latitude; q is the 'stretch factor'\n    // q becomes ill-conditioned along E-W line (0/0); use empirical tolerance to avoid it\n    var DeltaPsi = Math.log(Math.tan(phi2 / 2 + Math.PI / 4) / Math.tan(phi1 / 2 + Math.PI / 4));\n    var q = Math.abs(DeltaPsi) > 10e-12 ? DeltaPhi / DeltaPsi : Math.cos(phi1);\n    // distance is pythagoras on 'stretched' Mercator projection\n    var delta = Math.sqrt(DeltaPhi * DeltaPhi + q * q * DeltaLambda * DeltaLambda); // angular distance in radians\n    var dist = delta * R;\n    return dist;\n}\nexports.default = rhumbDistance;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Taken from http://geomalgorithms.com/a02-_lines.html\nvar distance_1 = __importDefault(require(\"@turf/distance\"));\nvar helpers_1 = require(\"@turf/helpers\");\nvar invariant_1 = require(\"@turf/invariant\");\nvar meta_1 = require(\"@turf/meta\");\nvar rhumb_distance_1 = __importDefault(require(\"@turf/rhumb-distance\"));\n/**\n * Returns the minimum distance between a {@link Point} and a {@link LineString}, being the distance from a line the\n * minimum distance between the point and any segment of the `LineString`.\n *\n * @name pointToLineDistance\n * @param {Feature<Point>|Array<number>} pt Feature or Geometry\n * @param {Feature<LineString>} line GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units=\"kilometers\"] can be anything supported by turf/convertLength\n * (ex: degrees, radians, miles, or kilometers)\n * @param {string} [options.method=\"geodesic\"] wether to calculate the distance based on geodesic (spheroid) or\n * planar (flat) method. Valid options are 'geodesic' or 'planar'.\n * @returns {number} distance between point and line\n * @example\n * var pt = turf.point([0, 0]);\n * var line = turf.lineString([[1, 1],[-1, 1]]);\n *\n * var distance = turf.pointToLineDistance(pt, line, {units: 'miles'});\n * //=69.11854715938406\n */\nfunction pointToLineDistance(pt, line, options) {\n    if (options === void 0) { options = {}; }\n    // Optional parameters\n    if (!options.method) {\n        options.method = \"geodesic\";\n    }\n    if (!options.units) {\n        options.units = \"kilometers\";\n    }\n    // validation\n    if (!pt) {\n        throw new Error(\"pt is required\");\n    }\n    if (Array.isArray(pt)) {\n        pt = helpers_1.point(pt);\n    }\n    else if (pt.type === \"Point\") {\n        pt = helpers_1.feature(pt);\n    }\n    else {\n        invariant_1.featureOf(pt, \"Point\", \"point\");\n    }\n    if (!line) {\n        throw new Error(\"line is required\");\n    }\n    if (Array.isArray(line)) {\n        line = helpers_1.lineString(line);\n    }\n    else if (line.type === \"LineString\") {\n        line = helpers_1.feature(line);\n    }\n    else {\n        invariant_1.featureOf(line, \"LineString\", \"line\");\n    }\n    var distance = Infinity;\n    var p = pt.geometry.coordinates;\n    meta_1.segmentEach(line, function (segment) {\n        var a = segment.geometry.coordinates[0];\n        var b = segment.geometry.coordinates[1];\n        var d = distanceToSegment(p, a, b, options);\n        if (d < distance) {\n            distance = d;\n        }\n    });\n    return helpers_1.convertLength(distance, \"degrees\", options.units);\n}\n/**\n * Returns the distance between a point P on a segment AB.\n *\n * @private\n * @param {Array<number>} p external point\n * @param {Array<number>} a first segment point\n * @param {Array<number>} b second segment point\n * @param {Object} [options={}] Optional parameters\n * @returns {number} distance\n */\nfunction distanceToSegment(p, a, b, options) {\n    var v = [b[0] - a[0], b[1] - a[1]];\n    var w = [p[0] - a[0], p[1] - a[1]];\n    var c1 = dot(w, v);\n    if (c1 <= 0) {\n        return calcDistance(p, a, { method: options.method, units: \"degrees\" });\n    }\n    var c2 = dot(v, v);\n    if (c2 <= c1) {\n        return calcDistance(p, b, { method: options.method, units: \"degrees\" });\n    }\n    var b2 = c1 / c2;\n    var Pb = [a[0] + b2 * v[0], a[1] + b2 * v[1]];\n    return calcDistance(p, Pb, { method: options.method, units: \"degrees\" });\n}\nfunction dot(u, v) {\n    return u[0] * v[0] + u[1] * v[1];\n}\nfunction calcDistance(a, b, options) {\n    return options.method === \"planar\"\n        ? rhumb_distance_1.default(a, b, options)\n        : distance_1.default(a, b, options);\n}\nexports.default = pointToLineDistance;\n", "export {WebMercatorViewport as default} from '@math.gl/web-mercator';\nexport * from '@math.gl/web-mercator';\n", "import destination from '@turf/destination';\nimport bearing from '@turf/bearing';\nimport pointToLineDistance from '@turf/point-to-line-distance';\nimport { flattenEach } from '@turf/meta';\nimport { point, MultiLineString } from '@turf/helpers';\nimport { getCoords } from '@turf/invariant';\nimport WebMercatorViewport from 'viewport-mercator-project';\nimport { Viewport, Pick, EditHandleFeature, EditHandleType } from './types';\nimport {\n  Geometry,\n  Position,\n  Point,\n  LineString,\n  Polygon,\n  FeatureOf,\n  FeatureWithProps,\n  AnyCoordinates,\n} from './geojson-types';\n\nexport type NearestPointType = FeatureWithProps<Point, { dist: number; index: number }>;\n\nexport function toDeckColor(\n  color?: [number, number, number, number] | number,\n  defaultColor: [number, number, number, number] = [255, 0, 0, 255]\n): [number, number, number, number] {\n  if (!Array.isArray(color)) {\n    return defaultColor;\n  }\n  return [color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255];\n}\n\n//\n// a GeoJSON helper function that calls the provided function with\n// an argument that is the most deeply-nested array having elements\n// that are arrays of primitives as an argument, e.g.\n//\n// {\n//   \"type\": \"MultiPolygon\",\n//   \"coordinates\": [\n//       [\n//           [[30, 20], [45, 40], [10, 40], [30, 20]]\n//       ],\n//       [\n//           [[15, 5], [40, 10], [10, 20], [5, 10], [15, 5]]\n//       ]\n//   ]\n// }\n//\n// the function would be called on:\n//\n// [[30, 20], [45, 40], [10, 40], [30, 20]]\n//\n// and\n//\n// [[15, 5], [40, 10], [10, 20], [5, 10], [15, 5]]\n//\nexport function recursivelyTraverseNestedArrays(\n  array: Array<any>,\n  prefix: Array<number>,\n  fn: Function\n) {\n  if (!Array.isArray(array[0])) {\n    return true;\n  }\n  for (let i = 0; i < array.length; i++) {\n    if (recursivelyTraverseNestedArrays(array[i], [...prefix, i], fn)) {\n      fn(array, prefix);\n      break;\n    }\n  }\n  return false;\n}\n\nexport function generatePointsParallelToLinePoints(\n  p1: Position,\n  p2: Position,\n  mapCoords: Position\n): Position[] {\n  const lineString: LineString = {\n    type: 'LineString',\n    coordinates: [p1, p2],\n  };\n  const pt = point(mapCoords);\n  const ddistance = pointToLineDistance(pt, lineString);\n  const lineBearing = bearing(p1, p2);\n\n  // Check if current point is to the left or right of line\n  // Line from A=(x1,y1) to B=(x2,y2) a point P=(x,y)\n  // then (x−x1)(y2−y1)−(y−y1)(x2−x1)\n  const isPointToLeftOfLine =\n    (mapCoords[0] - p1[0]) * (p2[1] - p1[1]) - (mapCoords[1] - p1[1]) * (p2[0] - p1[0]);\n\n  // Bearing to draw perpendicular to the line string\n  const orthogonalBearing = isPointToLeftOfLine < 0 ? lineBearing - 90 : lineBearing - 270;\n\n  // Get coordinates for the point p3 and p4 which are perpendicular to the lineString\n  // Add the distance as the current position moves away from the lineString\n  const p3 = destination(p2, ddistance, orthogonalBearing);\n  const p4 = destination(p1, ddistance, orthogonalBearing);\n\n  return [p3.geometry.coordinates, p4.geometry.coordinates] as Position[];\n}\n\nexport function distance2d(x1: number, y1: number, x2: number, y2: number): number {\n  const dx = x1 - x2;\n  const dy = y1 - y2;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nexport function mix(a: number, b: number, ratio: number): number {\n  return b * ratio + a * (1 - ratio);\n}\n\nexport function nearestPointOnProjectedLine(\n  line: FeatureOf<LineString>,\n  inPoint: FeatureOf<Point>,\n  viewport: Viewport\n): NearestPointType {\n  const wmViewport = new WebMercatorViewport(viewport);\n  // Project the line to viewport, then find the nearest point\n  const coordinates: Array<Array<number>> = line.geometry.coordinates as any;\n  const projectedCoords = coordinates.map(([x, y, z = 0]) => wmViewport.project([x, y, z]));\n  // @ts-ignore\n  const [x, y] = wmViewport.project(inPoint.geometry.coordinates);\n  // console.log('projectedCoords', JSON.stringify(projectedCoords));\n\n  let minDistance = Infinity;\n  let minPointInfo = {};\n\n  projectedCoords.forEach(([x2, y2], index) => {\n    if (index === 0) {\n      return;\n    }\n\n    const [x1, y1] = projectedCoords[index - 1];\n\n    // line from projectedCoords[index - 1] to projectedCoords[index]\n    // convert to Ax + By + C = 0\n    const A = y1 - y2;\n    const B = x2 - x1;\n    const C = x1 * y2 - x2 * y1;\n\n    // https://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line\n    const div = A * A + B * B;\n    const distance = Math.abs(A * x + B * y + C) / Math.sqrt(div);\n\n    // TODO: Check if inside bounds\n\n    if (distance < minDistance) {\n      minDistance = distance;\n      minPointInfo = {\n        index,\n        x0: (B * (B * x - A * y) - A * C) / div,\n        y0: (A * (-B * x + A * y) - B * C) / div,\n      };\n    }\n  });\n  // @ts-ignore\n  const { index, x0, y0 } = minPointInfo;\n  const [x1, y1, z1 = 0] = projectedCoords[index - 1];\n  const [x2, y2, z2 = 0] = projectedCoords[index];\n\n  // calculate what ratio of the line we are on to find the proper z\n  const lineLength = distance2d(x1, y1, x2, y2);\n  const startToPointLength = distance2d(x1, y1, x0, y0);\n  const ratio = startToPointLength / lineLength;\n  const z0 = mix(z1, z2, ratio);\n\n  return {\n    type: 'Feature',\n    geometry: {\n      type: 'Point',\n      coordinates: wmViewport.unproject([x0, y0, z0]),\n    },\n    properties: {\n      // TODO: calculate the distance in proper units\n      dist: minDistance,\n      index: index - 1,\n    },\n  };\n}\n\nexport function nearestPointOnLine<G extends LineString | MultiLineString>(\n  lines: FeatureOf<LineString>,\n  inPoint: FeatureOf<Point>,\n  viewport?: Viewport\n): NearestPointType {\n  let mercator;\n\n  if (viewport) {\n    mercator = new WebMercatorViewport(viewport);\n  }\n  let closestPoint: any = point([Infinity, Infinity], {\n    dist: Infinity,\n  });\n\n  if (!lines.geometry?.coordinates.length || lines.geometry?.coordinates.length < 2) {\n    return closestPoint;\n  }\n\n  // @ts-ignore\n  flattenEach(lines, (line: any) => {\n    const coords: any = getCoords(line);\n    // @ts-ignore\n    const pointCoords: any = getCoords(inPoint);\n\n    let minDist;\n    let to;\n    let from;\n    let x;\n    let y;\n    let segmentIdx;\n    let dist;\n\n    if (coords.length > 1 && pointCoords.length) {\n      let lineCoordinates;\n      let pointCoordinate;\n\n      // If viewport is given, then translate these coordinates to pixels to increase precision\n      if (mercator) {\n        lineCoordinates = coords.map((lineCoordinate) => mercator.project(lineCoordinate));\n        pointCoordinate = mercator.project(pointCoords);\n      } else {\n        lineCoordinates = coords;\n        pointCoordinate = pointCoords;\n      }\n\n      for (let n = 1; n < lineCoordinates.length; n++) {\n        if (lineCoordinates[n][0] !== lineCoordinates[n - 1][0]) {\n          const slope =\n            (lineCoordinates[n][1] - lineCoordinates[n - 1][1]) /\n            (lineCoordinates[n][0] - lineCoordinates[n - 1][0]);\n          const inverseSlope = lineCoordinates[n][1] - slope * lineCoordinates[n][0];\n\n          dist =\n            Math.abs(slope * pointCoordinate[0] + inverseSlope - pointCoordinate[1]) /\n            Math.sqrt(slope * slope + 1);\n        } else dist = Math.abs(pointCoordinate[0] - lineCoordinates[n][0]);\n\n        // length^2 of line segment\n        const rl2 =\n          Math.pow(lineCoordinates[n][1] - lineCoordinates[n - 1][1], 2) +\n          Math.pow(lineCoordinates[n][0] - lineCoordinates[n - 1][0], 2);\n\n        // distance^2 of pt to end line segment\n        const ln2 =\n          Math.pow(lineCoordinates[n][1] - pointCoordinate[1], 2) +\n          Math.pow(lineCoordinates[n][0] - pointCoordinate[0], 2);\n\n        // distance^2 of pt to begin line segment\n        const lnm12 =\n          Math.pow(lineCoordinates[n - 1][1] - pointCoordinate[1], 2) +\n          Math.pow(lineCoordinates[n - 1][0] - pointCoordinate[0], 2);\n\n        // minimum distance^2 of pt to infinite line\n        const dist2 = Math.pow(dist, 2);\n\n        // calculated length^2 of line segment\n        const calcrl2 = ln2 - dist2 + lnm12 - dist2;\n\n        // redefine minimum distance to line segment (not infinite line) if necessary\n        if (calcrl2 > rl2) {\n          dist = Math.sqrt(Math.min(ln2, lnm12));\n        }\n\n        if (minDist === null || minDist === undefined || minDist > dist) {\n          // eslint-disable-next-line max-depth\n          if (calcrl2 > rl2) {\n            // eslint-disable-next-line max-depth\n            if (lnm12 < ln2) {\n              to = 0; // nearer to previous point\n              from = 1;\n            } else {\n              from = 0; // nearer to current point\n              to = 1;\n            }\n          } else {\n            // perpendicular from point intersects line segment\n            to = Math.sqrt(lnm12 - dist2) / Math.sqrt(rl2);\n            from = Math.sqrt(ln2 - dist2) / Math.sqrt(rl2);\n          }\n          minDist = dist;\n          segmentIdx = n;\n        }\n      }\n\n      const dx = lineCoordinates[segmentIdx - 1][0] - lineCoordinates[segmentIdx][0];\n      const dy = lineCoordinates[segmentIdx - 1][1] - lineCoordinates[segmentIdx][1];\n\n      x = lineCoordinates[segmentIdx - 1][0] - dx * to;\n      y = lineCoordinates[segmentIdx - 1][1] - dy * to;\n    }\n\n    // index needs to be -1 because we have to account for the shift from initial backscan\n    let snapPoint = { x, y, idx: segmentIdx - 1, to, from };\n\n    if (mercator) {\n      const pixelToLatLong = mercator.unproject([snapPoint.x, snapPoint.y]);\n      snapPoint = {\n        x: pixelToLatLong[0],\n        y: pixelToLatLong[1],\n        idx: segmentIdx - 1,\n        to,\n        from,\n      };\n    }\n\n    closestPoint = point([snapPoint.x, snapPoint.y], {\n      dist: Math.abs(snapPoint.from - snapPoint.to),\n      index: snapPoint.idx,\n    });\n  });\n\n  return closestPoint;\n}\n\nexport function getPickedEditHandle(\n  picks: Pick[] | null | undefined\n): EditHandleFeature | null | undefined {\n  const handles = getPickedEditHandles(picks);\n  return handles.length ? handles[0] : null;\n}\n\nexport function getPickedSnapSourceEditHandle(\n  picks: Pick[] | null | undefined\n): EditHandleFeature | null | undefined {\n  const handles = getPickedEditHandles(picks);\n  return handles.find((handle) => handle.properties.editHandleType === 'snap-source');\n}\n\nexport function getNonGuidePicks(picks: Pick[]): Pick[] {\n  return picks && picks.filter((pick) => !pick.isGuide);\n}\n\nexport function getPickedExistingEditHandle(\n  picks: Pick[] | null | undefined\n): EditHandleFeature | null | undefined {\n  const handles = getPickedEditHandles(picks);\n  return handles.find(\n    ({ properties }) => properties.featureIndex >= 0 && properties.editHandleType === 'existing'\n  );\n}\n\nexport function getPickedIntermediateEditHandle(\n  picks: Pick[] | null | undefined\n): EditHandleFeature | null | undefined {\n  const handles = getPickedEditHandles(picks);\n  return handles.find(\n    ({ properties }) => properties.featureIndex >= 0 && properties.editHandleType === 'intermediate'\n  );\n}\n\nexport function getPickedEditHandles(picks: Pick[] | null | undefined): EditHandleFeature[] {\n  const handles =\n    (picks &&\n      picks\n        .filter((pick) => pick.isGuide && pick.object.properties.guideType === 'editHandle')\n        .map((pick) => pick.object)) ||\n    [];\n\n  return handles;\n}\n\nexport function getEditHandlesForGeometry(\n  geometry: Geometry,\n  featureIndex: number,\n  editHandleType: EditHandleType = 'existing'\n): EditHandleFeature[] {\n  let handles: EditHandleFeature[] = [];\n\n  switch (geometry.type) {\n    case 'Point':\n      // positions are not nested\n      handles = [\n        {\n          type: 'Feature',\n          properties: {\n            guideType: 'editHandle',\n            editHandleType,\n            positionIndexes: [],\n            featureIndex,\n          },\n          geometry: {\n            type: 'Point',\n            coordinates: geometry.coordinates,\n          },\n        },\n      ];\n      break;\n    case 'MultiPoint':\n    case 'LineString':\n      // positions are nested 1 level\n      handles = handles.concat(\n        getEditHandlesForCoordinates(geometry.coordinates, [], featureIndex, editHandleType)\n      );\n      break;\n    case 'Polygon':\n    case 'MultiLineString':\n      // positions are nested 2 levels\n      for (let a = 0; a < geometry.coordinates.length; a++) {\n        handles = handles.concat(\n          getEditHandlesForCoordinates(geometry.coordinates[a], [a], featureIndex, editHandleType)\n        );\n        if (geometry.type === 'Polygon') {\n          // Don't repeat the first/last handle for Polygons\n          handles = handles.slice(0, -1);\n        }\n      }\n\n      break;\n    case 'MultiPolygon':\n      // positions are nested 3 levels\n      for (let a = 0; a < geometry.coordinates.length; a++) {\n        for (let b = 0; b < geometry.coordinates[a].length; b++) {\n          handles = handles.concat(\n            getEditHandlesForCoordinates(\n              geometry.coordinates[a][b],\n              [a, b],\n              featureIndex,\n              editHandleType\n            )\n          );\n          // Don't repeat the first/last handle for Polygons\n          handles = handles.slice(0, -1);\n        }\n      }\n\n      break;\n    default:\n      // @ts-ignore\n      throw Error(`Unhandled geometry type: ${geometry.type}`);\n  }\n\n  return handles;\n}\n\nfunction getEditHandlesForCoordinates(\n  coordinates: any[],\n  positionIndexPrefix: number[],\n  featureIndex: number,\n  editHandleType: EditHandleType = 'existing'\n): EditHandleFeature[] {\n  const editHandles = [];\n  for (let i = 0; i < coordinates.length; i++) {\n    const position = coordinates[i];\n    editHandles.push({\n      type: 'Feature',\n      properties: {\n        guideType: 'editHandle',\n        positionIndexes: [...positionIndexPrefix, i],\n        featureIndex,\n        editHandleType,\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: position,\n      },\n    });\n  }\n  return editHandles;\n}\n\n/**\n * Calculates coordinates for a feature preserving rectangular shape.\n * @param feature Feature before modification.\n * @param editHandleIndex Index of the point to modify.\n * @param mapCoords New position for the point.\n * @returns Updated coordinates.\n */\nexport function updateRectanglePosition(\n  feature: FeatureOf<Polygon>,\n  editHandleIndex: number,\n  mapCoords: Position\n): Position[][] {\n  const coordinates = feature.geometry.coordinates;\n  if (!coordinates) {\n    return null;\n  }\n\n  const points = coordinates[0].slice(0, 4);\n  points[editHandleIndex % 4] = mapCoords;\n\n  const p0 = points[(editHandleIndex + 2) % 4];\n  const p2 = points[editHandleIndex % 4];\n  points[(editHandleIndex + 1) % 4] = [p2[0], p0[1]];\n  points[(editHandleIndex + 3) % 4] = [p0[0], p2[1]];\n\n  return [[...points, points[0]]];\n}\n\n/** Creates a copy of feature's coordinates.\n * Each position in coordinates is transformed by calling the provided function.\n * @param coords Coordinates of a feature.\n * @param callback A function to transform each coordinate.\n * @retuns Transformed coordinates.\n */\nexport function mapCoords(\n  coords: AnyCoordinates,\n  callback: (coords: Position) => Position\n): AnyCoordinates {\n  if (typeof coords[0] === 'number') {\n    if (!isNaN(coords[0]) && isFinite(coords[0])) {\n      return callback(coords as Position);\n    }\n    return coords;\n  }\n\n  return (coords as Position[])\n    .map((coord) => {\n      return mapCoords(coord, callback) as Position;\n    })\n    .filter(Boolean);\n}\n", "import {\n  Feature,\n  FeatureCollection,\n  Geometry,\n  Polygon,\n  MultiLineString,\n  MultiPolygon,\n  Position,\n  PolygonCoordinates,\n} from '../geojson-types';\n\nexport class ImmutableFeatureCollection {\n  featureCollection: FeatureCollection;\n\n  constructor(featureCollection: FeatureCollection) {\n    this.featureCollection = featureCollection;\n  }\n\n  getObject() {\n    return this.featureCollection;\n  }\n\n  /**\n   * Replaces the position deeply nested withing the given feature's geometry.\n   * Works with Point, MultiPoint, LineString, MultiLineString, Polygon, and MultiPolygon.\n   *\n   * @param featureIndex The index of the feature to update\n   * @param positionIndexes An array containing the indexes of the position to replace\n   * @param updatedPosition The updated position to place in the result (i.e. [lng, lat])\n   *\n   * @returns A new `ImmutableFeatureCollection` with the given position replaced. Does not modify this `ImmutableFeatureCollection`.\n   */\n  replacePosition(\n    featureIndex: number,\n    positionIndexes: number[] | null | undefined,\n    updatedPosition: Position\n  ): ImmutableFeatureCollection {\n    const geometry = this.featureCollection.features[featureIndex].geometry;\n\n    const isPolygonal = geometry.type === 'Polygon' || geometry.type === 'MultiPolygon';\n    const updatedGeometry: any = {\n      ...geometry,\n      coordinates: immutablyReplacePosition(\n        geometry.coordinates,\n        positionIndexes,\n        updatedPosition,\n        isPolygonal\n      ),\n    };\n\n    return this.replaceGeometry(featureIndex, updatedGeometry);\n  }\n\n  /**\n   * Removes a position deeply nested in a GeoJSON geometry coordinates array.\n   * Works with MultiPoint, LineString, MultiLineString, Polygon, and MultiPolygon.\n   *\n   * @param featureIndex The index of the feature to update\n   * @param positionIndexes An array containing the indexes of the postion to remove\n   *\n   * @returns A new `ImmutableFeatureCollection` with the given coordinate removed. Does not modify this `ImmutableFeatureCollection`.\n   */\n  removePosition(\n    featureIndex: number,\n    positionIndexes: number[] | null | undefined\n  ): ImmutableFeatureCollection {\n    const geometry = this.featureCollection.features[featureIndex].geometry;\n\n    if (geometry.type === 'Point') {\n      throw Error(`Can't remove a position from a Point or there'd be nothing left`);\n    }\n    if (\n      geometry.type === 'MultiPoint' && // only 1 point left\n      geometry.coordinates.length < 2\n    ) {\n      throw Error(`Can't remove the last point of a MultiPoint or there'd be nothing left`);\n    }\n    if (\n      geometry.type === 'LineString' && // only 2 positions\n      geometry.coordinates.length < 3\n    ) {\n      throw Error(`Can't remove position. LineString must have at least two positions`);\n    }\n    if (\n      geometry.type === 'Polygon' && // outer ring is a triangle\n      geometry.coordinates[0].length < 5 &&\n      Array.isArray(positionIndexes) && // trying to remove from outer ring\n      positionIndexes[0] === 0\n    ) {\n      throw Error(`Can't remove position. Polygon's outer ring must have at least four positions`);\n    }\n    if (\n      geometry.type === 'MultiLineString' && // only 1 LineString left\n      geometry.coordinates.length === 1 && // only 2 positions\n      geometry.coordinates[0].length < 3\n    ) {\n      throw Error(`Can't remove position. MultiLineString must have at least two positions`);\n    }\n    if (\n      geometry.type === 'MultiPolygon' && // only 1 polygon left\n      geometry.coordinates.length === 1 && // outer ring is a triangle\n      geometry.coordinates[0][0].length < 5 &&\n      Array.isArray(positionIndexes) && // trying to remove from first polygon\n      positionIndexes[0] === 0 && // trying to remove from outer ring\n      positionIndexes[1] === 0\n    ) {\n      throw Error(\n        `Can't remove position. MultiPolygon's outer ring must have at least four positions`\n      );\n    }\n\n    const isPolygonal = geometry.type === 'Polygon' || geometry.type === 'MultiPolygon';\n    const updatedGeometry: any = {\n      ...geometry,\n      coordinates: immutablyRemovePosition(geometry.coordinates, positionIndexes, isPolygonal),\n    };\n\n    // Handle cases where incomplete geometries need pruned (e.g. holes that were triangles)\n    pruneGeometryIfNecessary(updatedGeometry);\n\n    return this.replaceGeometry(featureIndex, updatedGeometry);\n  }\n\n  /**\n   * Adds a position deeply nested in a GeoJSON geometry coordinates array.\n   * Works with MultiPoint, LineString, MultiLineString, Polygon, and MultiPolygon.\n   *\n   * @param featureIndex The index of the feature to update\n   * @param positionIndexes An array containing the indexes of the position that will proceed the new position\n   * @param positionToAdd The new position to place in the result (i.e. [lng, lat])\n   *\n   * @returns A new `ImmutableFeatureCollection` with the given coordinate removed. Does not modify this `ImmutableFeatureCollection`.\n   */\n  addPosition(\n    featureIndex: number,\n    positionIndexes: number[] | null | undefined,\n    positionToAdd: Position\n  ): ImmutableFeatureCollection {\n    const geometry = this.featureCollection.features[featureIndex].geometry;\n\n    if (geometry.type === 'Point') {\n      throw new Error('Unable to add a position to a Point feature');\n    }\n\n    const isPolygonal = geometry.type === 'Polygon' || geometry.type === 'MultiPolygon';\n    const updatedGeometry: any = {\n      ...geometry,\n      coordinates: immutablyAddPosition(\n        geometry.coordinates,\n        positionIndexes,\n        positionToAdd,\n        isPolygonal\n      ),\n    };\n\n    return this.replaceGeometry(featureIndex, updatedGeometry);\n  }\n\n  replaceGeometry(featureIndex: number, geometry: Geometry): ImmutableFeatureCollection {\n    const updatedFeature: any = {\n      ...this.featureCollection.features[featureIndex],\n      geometry,\n    };\n\n    const updatedFeatureCollection = {\n      ...this.featureCollection,\n      features: [\n        ...this.featureCollection.features.slice(0, featureIndex),\n        updatedFeature,\n        ...this.featureCollection.features.slice(featureIndex + 1),\n      ],\n    };\n\n    return new ImmutableFeatureCollection(updatedFeatureCollection);\n  }\n\n  addFeature(feature: Feature): ImmutableFeatureCollection {\n    return this.addFeatures([feature]);\n  }\n\n  addFeatures(features: Feature[]): ImmutableFeatureCollection {\n    const updatedFeatureCollection = {\n      ...this.featureCollection,\n      features: [...this.featureCollection.features, ...features],\n    };\n\n    return new ImmutableFeatureCollection(updatedFeatureCollection);\n  }\n\n  deleteFeature(featureIndex: number) {\n    return this.deleteFeatures([featureIndex]);\n  }\n\n  deleteFeatures(featureIndexes: number[]) {\n    const features = [...this.featureCollection.features];\n    featureIndexes.sort();\n    for (let i = featureIndexes.length - 1; i >= 0; i--) {\n      const featureIndex = featureIndexes[i];\n      if (featureIndex >= 0 && featureIndex < features.length) {\n        features.splice(featureIndex, 1);\n      }\n    }\n\n    const updatedFeatureCollection = {\n      ...this.featureCollection,\n      features,\n    };\n\n    return new ImmutableFeatureCollection(updatedFeatureCollection);\n  }\n}\n\nfunction getUpdatedPosition(updatedPosition: Position, previousPosition: Position): Position {\n  // This function checks if the updatedPosition is missing elevation\n  // and copies it from previousPosition\n  if (updatedPosition.length === 2 && previousPosition.length === 3) {\n    const elevation = (previousPosition as any)[2];\n    return [updatedPosition[0], updatedPosition[1], elevation];\n  }\n\n  return updatedPosition;\n}\n\nfunction immutablyReplacePosition(\n  coordinates: any,\n  positionIndexes: number[] | null | undefined,\n  updatedPosition: Position,\n  isPolygonal: boolean\n): any {\n  if (!positionIndexes) {\n    return coordinates;\n  }\n  if (positionIndexes.length === 0) {\n    return getUpdatedPosition(updatedPosition, coordinates);\n  }\n  if (positionIndexes.length === 1) {\n    const updated = [\n      ...coordinates.slice(0, positionIndexes[0]),\n      getUpdatedPosition(updatedPosition, coordinates[positionIndexes[0]]),\n      ...coordinates.slice(positionIndexes[0] + 1),\n    ];\n\n    if (\n      isPolygonal &&\n      (positionIndexes[0] === 0 || positionIndexes[0] === coordinates.length - 1)\n    ) {\n      // for polygons, the first point is repeated at the end of the array\n      // so, update it on both ends of the array\n      updated[0] = getUpdatedPosition(updatedPosition, coordinates[0]);\n      updated[coordinates.length - 1] = getUpdatedPosition(updatedPosition, coordinates[0]);\n    }\n    return updated;\n  }\n\n  // recursively update inner array\n  return [\n    ...coordinates.slice(0, positionIndexes[0]),\n    immutablyReplacePosition(\n      coordinates[positionIndexes[0]],\n      positionIndexes.slice(1, positionIndexes.length),\n      updatedPosition,\n      isPolygonal\n    ),\n    ...coordinates.slice(positionIndexes[0] + 1),\n  ];\n}\n\nfunction immutablyRemovePosition(\n  coordinates: any,\n  positionIndexes: number[] | null | undefined,\n  isPolygonal: boolean\n): any {\n  if (!positionIndexes) {\n    return coordinates;\n  }\n  if (positionIndexes.length === 0) {\n    throw Error('Must specify the index of the position to remove');\n  }\n  if (positionIndexes.length === 1) {\n    const updated = [\n      ...coordinates.slice(0, positionIndexes[0]),\n      ...coordinates.slice(positionIndexes[0] + 1),\n    ];\n\n    if (\n      isPolygonal &&\n      (positionIndexes[0] === 0 || positionIndexes[0] === coordinates.length - 1)\n    ) {\n      // for polygons, the first point is repeated at the end of the array\n      // so, if the first/last coordinate is to be removed, coordinates[1] will be the new first/last coordinate\n      if (positionIndexes[0] === 0) {\n        // change the last to be the same as the first\n        updated[updated.length - 1] = updated[0];\n      } else if (positionIndexes[0] === coordinates.length - 1) {\n        // change the first to be the same as the last\n        updated[0] = updated[updated.length - 1];\n      }\n    }\n    return updated;\n  }\n\n  // recursively update inner array\n  return [\n    ...coordinates.slice(0, positionIndexes[0]),\n    immutablyRemovePosition(\n      coordinates[positionIndexes[0]],\n      positionIndexes.slice(1, positionIndexes.length),\n      isPolygonal\n    ),\n    ...coordinates.slice(positionIndexes[0] + 1),\n  ];\n}\n\nfunction immutablyAddPosition(\n  coordinates: any,\n  positionIndexes: number[] | null | undefined,\n  positionToAdd: Position,\n  isPolygonal: boolean\n): any {\n  if (!positionIndexes) {\n    return coordinates;\n  }\n  if (positionIndexes.length === 0) {\n    throw Error('Must specify the index of the position to remove');\n  }\n  if (positionIndexes.length === 1) {\n    const updated = [\n      ...coordinates.slice(0, positionIndexes[0]),\n      positionToAdd,\n      ...coordinates.slice(positionIndexes[0]),\n    ];\n    return updated;\n  }\n\n  // recursively update inner array\n  return [\n    ...coordinates.slice(0, positionIndexes[0]),\n    immutablyAddPosition(\n      coordinates[positionIndexes[0]],\n      positionIndexes.slice(1, positionIndexes.length),\n      positionToAdd,\n      isPolygonal\n    ),\n    ...coordinates.slice(positionIndexes[0] + 1),\n  ];\n}\n\nfunction pruneGeometryIfNecessary(geometry: Geometry) {\n  switch (geometry.type) {\n    case 'Polygon':\n      prunePolygonIfNecessary(geometry);\n      break;\n    case 'MultiLineString':\n      pruneMultiLineStringIfNecessary(geometry);\n      break;\n    case 'MultiPolygon':\n      pruneMultiPolygonIfNecessary(geometry);\n      break;\n    default:\n      // Not downgradable\n      break;\n  }\n}\n\nfunction prunePolygonIfNecessary(geometry: Polygon) {\n  const polygon = geometry.coordinates;\n\n  // If any hole is no longer a polygon, remove the hole entirely\n  for (let holeIndex = 1; holeIndex < polygon.length; holeIndex++) {\n    if (removeHoleIfNecessary(polygon, holeIndex)) {\n      // It was removed, so keep the index the same\n      holeIndex--;\n    }\n  }\n}\n\nfunction pruneMultiLineStringIfNecessary(geometry: MultiLineString) {\n  for (let lineStringIndex = 0; lineStringIndex < geometry.coordinates.length; lineStringIndex++) {\n    const lineString = geometry.coordinates[lineStringIndex];\n    if (lineString.length === 1) {\n      // Only a single position left on this LineString, so remove it (can't have Point in MultiLineString)\n      geometry.coordinates.splice(lineStringIndex, 1);\n      // Keep the index the same\n      lineStringIndex--;\n    }\n  }\n}\n\nfunction pruneMultiPolygonIfNecessary(geometry: MultiPolygon) {\n  for (let polygonIndex = 0; polygonIndex < geometry.coordinates.length; polygonIndex++) {\n    const polygon = geometry.coordinates[polygonIndex];\n    const outerRing = polygon[0];\n\n    // If the outer ring is no longer a polygon, remove the whole polygon\n    if (outerRing.length <= 3) {\n      geometry.coordinates.splice(polygonIndex, 1);\n      // It was removed, so keep the index the same\n      polygonIndex--;\n    }\n\n    for (let holeIndex = 1; holeIndex < polygon.length; holeIndex++) {\n      if (removeHoleIfNecessary(polygon, holeIndex)) {\n        // It was removed, so keep the index the same\n        holeIndex--;\n      }\n    }\n  }\n}\n\nfunction removeHoleIfNecessary(polygon: PolygonCoordinates, holeIndex: number) {\n  const hole = polygon[holeIndex];\n  if (hole.length <= 3) {\n    polygon.splice(holeIndex, 1);\n    return true;\n  }\n  return false;\n}\n", "import turfUnion from '@turf/union';\nimport turfDifference from '@turf/difference';\nimport turfIntersect from '@turf/intersect';\nimport rewind from '@turf/rewind';\n\nimport {\n  EditAction,\n  ClickEvent,\n  PointerMoveEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  DraggingEvent,\n  Pick,\n  Tooltip,\n  ModeProps,\n  GuideFeatureCollection,\n  TentativeFeature,\n} from '../types';\nimport { FeatureCollection, Feature, Polygon, Geometry, Position } from '../geojson-types';\nimport { getPickedEditHandles, getNonGuidePicks } from '../utils';\nimport { EditMode } from './edit-mode';\nimport { ImmutableFeatureCollection } from './immutable-feature-collection';\n\nexport type GeoJsonEditAction = EditAction<FeatureCollection>;\n\nconst DEFAULT_GUIDES: GuideFeatureCollection = {\n  type: 'FeatureCollection',\n  features: [],\n};\nconst DEFAULT_TOOLTIPS: Tooltip[] = [];\n\n// Main interface for `EditMode`s that edit GeoJSON\nexport type GeoJsonEditModeType = EditMode<FeatureCollection, FeatureCollection>;\n\nexport interface GeoJsonEditModeConstructor {\n  new (): GeoJsonEditModeType;\n}\n\nexport class GeoJsonEditMode implements EditMode<FeatureCollection, GuideFeatureCollection> {\n  _clickSequence: Position[] = [];\n\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    return DEFAULT_GUIDES;\n  }\n\n  getTooltips(props: ModeProps<FeatureCollection>): Tooltip[] {\n    return DEFAULT_TOOLTIPS;\n  }\n\n  getSelectedFeature(props: ModeProps<FeatureCollection>): Feature | null | undefined {\n    if (props.selectedIndexes.length === 1) {\n      return props.data.features[props.selectedIndexes[0]];\n    }\n    return null;\n  }\n\n  getSelectedGeometry(props: ModeProps<FeatureCollection>): Geometry | null | undefined {\n    const feature = this.getSelectedFeature(props);\n    if (feature) {\n      return feature.geometry;\n    }\n    return null;\n  }\n\n  getSelectedFeaturesAsFeatureCollection(props: ModeProps<FeatureCollection>): FeatureCollection {\n    const { features } = props.data;\n    const selectedFeatures = props.selectedIndexes.map((selectedIndex) => features[selectedIndex]);\n    return {\n      type: 'FeatureCollection',\n      features: selectedFeatures,\n    };\n  }\n\n  getClickSequence(): Position[] {\n    return this._clickSequence;\n  }\n\n  addClickSequence({ mapCoords }: ClickEvent): void {\n    this._clickSequence.push(mapCoords);\n  }\n\n  resetClickSequence(): void {\n    this._clickSequence = [];\n  }\n\n  getTentativeGuide(props: ModeProps<FeatureCollection>): TentativeFeature | null | undefined {\n    const guides = this.getGuides(props);\n\n    // @ts-ignore\n    return guides.features.find((f) => f.properties && f.properties.guideType === 'tentative');\n  }\n\n  isSelectionPicked(picks: Pick[], props: ModeProps<FeatureCollection>): boolean {\n    if (!picks.length) return false;\n    const pickedFeatures = getNonGuidePicks(picks).map(({ index }) => index);\n    const pickedHandles = getPickedEditHandles(picks).map(\n      ({ properties }) => properties.featureIndex\n    );\n    const pickedIndexes = new Set([...pickedFeatures, ...pickedHandles]);\n    return props.selectedIndexes.some((index) => pickedIndexes.has(index));\n  }\n\n  rewindPolygon(feature: Feature): Feature {\n    const { geometry } = feature;\n\n    const isPolygonal = geometry.type === 'Polygon' || geometry.type === 'MultiPolygon';\n    if (isPolygonal) {\n      // @ts-ignore\n      return rewind(feature);\n    }\n\n    return feature;\n  }\n\n  getAddFeatureAction(\n    featureOrGeometry: Geometry | Feature,\n    features: FeatureCollection\n  ): GeoJsonEditAction {\n    // Unsure why flow can't deal with Geometry type, but there I fixed it\n    const featureOrGeometryAsAny: any = featureOrGeometry;\n\n    const feature: any =\n      featureOrGeometryAsAny.type === 'Feature'\n        ? featureOrGeometryAsAny\n        : {\n            type: 'Feature',\n            properties: {},\n            geometry: featureOrGeometryAsAny,\n          };\n\n    const rewindFeature = this.rewindPolygon(feature);\n    const updatedData = new ImmutableFeatureCollection(features)\n      .addFeature(rewindFeature)\n      .getObject();\n\n    return {\n      updatedData,\n      editType: 'addFeature',\n      editContext: {\n        featureIndexes: [updatedData.features.length - 1],\n      },\n    };\n  }\n\n  getAddManyFeaturesAction(\n    { features: featuresToAdd }: FeatureCollection,\n    features: FeatureCollection\n  ): GeoJsonEditAction {\n    let updatedData = new ImmutableFeatureCollection(features);\n    const initialIndex = updatedData.getObject().features.length;\n    const updatedIndexes = [];\n    for (const feature of featuresToAdd) {\n      const { properties, geometry } = feature;\n      const geometryAsAny: any = geometry;\n      updatedData = updatedData.addFeature({\n        type: 'Feature',\n        properties,\n        geometry: geometryAsAny,\n      });\n      updatedIndexes.push(initialIndex + updatedIndexes.length);\n    }\n\n    return {\n      updatedData: updatedData.getObject(),\n      editType: 'addFeature',\n      editContext: {\n        featureIndexes: updatedIndexes,\n      },\n    };\n  }\n\n  getAddFeatureOrBooleanPolygonAction(\n    featureOrGeometry: Polygon | Feature,\n    props: ModeProps<FeatureCollection>\n  ): GeoJsonEditAction | null | undefined {\n    const featureOrGeometryAsAny: any = featureOrGeometry;\n\n    const selectedFeature = this.getSelectedFeature(props);\n    const { modeConfig } = props;\n    if (modeConfig && modeConfig.booleanOperation) {\n      if (\n        !selectedFeature ||\n        (selectedFeature.geometry.type !== 'Polygon' &&\n          selectedFeature.geometry.type !== 'MultiPolygon')\n      ) {\n        // eslint-disable-next-line no-console,no-undef\n        console.warn(\n          'booleanOperation only supported for single Polygon or MultiPolygon selection'\n        );\n        return null;\n      }\n\n      const feature =\n        featureOrGeometryAsAny.type === 'Feature'\n          ? featureOrGeometryAsAny\n          : {\n              type: 'Feature',\n              geometry: featureOrGeometryAsAny,\n            };\n\n      let updatedGeometry;\n      if (modeConfig.booleanOperation === 'union') {\n        updatedGeometry = turfUnion(selectedFeature, feature);\n      } else if (modeConfig.booleanOperation === 'difference') {\n        // @ts-ignore\n        updatedGeometry = turfDifference(selectedFeature, feature);\n      } else if (modeConfig.booleanOperation === 'intersection') {\n        // @ts-ignore\n        updatedGeometry = turfIntersect(selectedFeature, feature);\n      } else {\n        // eslint-disable-next-line no-console,no-undef\n        console.warn(`Invalid booleanOperation ${modeConfig.booleanOperation}`);\n        return null;\n      }\n\n      if (!updatedGeometry) {\n        // eslint-disable-next-line no-console,no-undef\n        console.warn('Canceling edit. Boolean operation erased entire polygon.');\n        return null;\n      }\n\n      const featureIndex = props.selectedIndexes[0];\n\n      const updatedData = new ImmutableFeatureCollection(props.data)\n        .replaceGeometry(featureIndex, updatedGeometry.geometry)\n        .getObject();\n\n      const editAction: GeoJsonEditAction = {\n        updatedData,\n        editType: 'unionGeometry',\n        editContext: {\n          featureIndexes: [featureIndex],\n        },\n      };\n\n      return editAction;\n    }\n    return this.getAddFeatureAction(featureOrGeometry, props.data);\n  }\n\n  createTentativeFeature(props: ModeProps<FeatureCollection>): TentativeFeature {\n    return null;\n  }\n\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>): void {}\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>): void {\n    const tentativeFeature = this.createTentativeFeature(props);\n    if (tentativeFeature) {\n      props.onEdit({\n        updatedData: props.data,\n        editType: 'updateTentativeFeature',\n        editContext: {\n          feature: tentativeFeature,\n        },\n      });\n    }\n  }\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>): void {}\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>): void {}\n  handleDragging(event: DraggingEvent, props: ModeProps<FeatureCollection>): void {}\n\n  handleKeyUp(event: KeyboardEvent, props: ModeProps<FeatureCollection>): void {\n    if (event.key === 'Escape') {\n      this.resetClickSequence();\n      props.onEdit({\n        // Because the new drawing feature is dropped, so the data will keep as the same.\n        updatedData: props.data,\n        editType: 'cancelFeature',\n        editContext: {},\n      });\n    }\n  }\n}\n\nexport function getIntermediatePosition(position1: Position, position2: Position): Position {\n  const intermediatePosition = [\n    (position1[0] + position2[0]) / 2.0,\n    (position1[1] + position2[1]) / 2.0,\n  ];\n  // @ts-ignore\n  return intermediatePosition;\n}\n", "import { point, lineString as toLineString } from '@turf/helpers';\nimport {\n  recursivelyTraverseNestedArrays,\n  nearestPointOnProjectedLine,\n  nearestPointOnLine,\n  getEditHandlesForGeometry,\n  getPickedEditHandles,\n  getPickedEditHandle,\n  getPickedExistingEditHandle,\n  getPickedIntermediateEditHandle,\n  updateRectanglePosition,\n  NearestPointType,\n} from '../utils';\nimport { LineString, Point, Polygon, FeatureCollection, FeatureOf } from '../geojson-types';\nimport {\n  ModeProps,\n  ClickEvent,\n  PointerMoveEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  DraggingEvent,\n  Viewport,\n  GuideFeatureCollection,\n  EditHandleFeature,\n} from '../types';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\nimport { ImmutableFeatureCollection } from './immutable-feature-collection';\n\nexport class ModifyMode extends GeoJsonEditMode {\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const handles = [];\n\n    const { data, lastPointerMoveEvent } = props;\n    const { features } = data;\n    const picks = lastPointerMoveEvent && lastPointerMoveEvent.picks;\n    const mapCoords = lastPointerMoveEvent && lastPointerMoveEvent.mapCoords;\n\n    for (const index of props.selectedIndexes) {\n      if (index < features.length) {\n        const { geometry } = features[index];\n        handles.push(...getEditHandlesForGeometry(geometry, index));\n      } else {\n        console.warn(`selectedFeatureIndexes out of range ${index}`); // eslint-disable-line no-console,no-undef\n      }\n    }\n\n    // intermediate edit handle\n    if (picks && picks.length && mapCoords) {\n      const existingEditHandle = getPickedExistingEditHandle(picks);\n      // don't show intermediate point when too close to an existing edit handle\n      const featureAsPick = !existingEditHandle && picks.find((pick) => !pick.isGuide);\n\n      // is the feature in the pick selected\n      if (\n        featureAsPick &&\n        !featureAsPick.object.geometry.type.includes('Point') &&\n        !(\n          props.modeConfig?.lockRectangles && featureAsPick.object.properties.shape === 'Rectangle'\n        ) &&\n        props.selectedIndexes.includes(featureAsPick.index)\n      ) {\n        let intermediatePoint: NearestPointType | null | undefined = null;\n        let positionIndexPrefix = [];\n        const referencePoint = point(mapCoords);\n        // process all lines of the (single) feature\n        recursivelyTraverseNestedArrays(\n          featureAsPick.object.geometry.coordinates,\n          [],\n          (lineString, prefix) => {\n            const lineStringFeature = toLineString(lineString);\n            const candidateIntermediatePoint = this.getNearestPoint(\n              // @ts-ignore\n              lineStringFeature,\n              referencePoint,\n              props.modeConfig && props.modeConfig.viewport\n            );\n            if (\n              !intermediatePoint ||\n              candidateIntermediatePoint.properties.dist < intermediatePoint.properties.dist\n            ) {\n              intermediatePoint = candidateIntermediatePoint;\n              positionIndexPrefix = prefix;\n            }\n          }\n        );\n        // tack on the lone intermediate point to the set of handles\n        if (intermediatePoint) {\n          const {\n            geometry: { coordinates: position },\n            properties: { index },\n          } = intermediatePoint;\n          handles.push({\n            type: 'Feature',\n            properties: {\n              guideType: 'editHandle',\n              editHandleType: 'intermediate',\n              featureIndex: featureAsPick.index,\n              positionIndexes: [...positionIndexPrefix, index + 1],\n            },\n            geometry: {\n              type: 'Point',\n              coordinates: position,\n            },\n          });\n        }\n      }\n    }\n\n    return {\n      type: 'FeatureCollection',\n      features: handles,\n    };\n  }\n\n  // turf.js does not support elevation for nearestPointOnLine\n  getNearestPoint(\n    line: FeatureOf<LineString>,\n    inPoint: FeatureOf<Point>,\n    viewport: Viewport | null | undefined\n  ): NearestPointType {\n    const { coordinates } = line.geometry;\n    if (coordinates.some((coord) => coord.length > 2)) {\n      if (viewport) {\n        // This line has elevation, we need to use alternative algorithm\n        return nearestPointOnProjectedLine(line, inPoint, viewport);\n      }\n      // eslint-disable-next-line no-console,no-undef\n      console.log(\n        'Editing 3D point but modeConfig.viewport not provided. Falling back to 2D logic.'\n      );\n    }\n    return nearestPointOnLine(line, inPoint, viewport);\n  }\n\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>) {\n    const pickedExistingHandle = getPickedExistingEditHandle(event.picks);\n    const pickedIntermediateHandle = getPickedIntermediateEditHandle(event.picks);\n\n    if (pickedExistingHandle) {\n      const { featureIndex, positionIndexes } = pickedExistingHandle.properties;\n\n      let updatedData;\n      try {\n        updatedData = new ImmutableFeatureCollection(props.data)\n          .removePosition(featureIndex, positionIndexes)\n          .getObject();\n      } catch (ignored) {\n        // This happens if user attempts to remove the last point\n      }\n\n      if (updatedData) {\n        props.onEdit({\n          updatedData,\n          editType: 'removePosition',\n          editContext: {\n            featureIndexes: [featureIndex],\n            positionIndexes,\n            position: pickedExistingHandle.geometry.coordinates,\n          },\n        });\n      }\n    } else if (pickedIntermediateHandle) {\n      const { featureIndex, positionIndexes } = pickedIntermediateHandle.properties;\n\n      const feature = props.data.features[featureIndex];\n      const canAddPosition = !(\n        props.modeConfig?.lockRectangles && feature?.properties.shape === 'Rectangle'\n      );\n\n      if (canAddPosition) {\n        const updatedData = new ImmutableFeatureCollection(props.data)\n          .addPosition(featureIndex, positionIndexes, pickedIntermediateHandle.geometry.coordinates)\n          .getObject();\n\n        if (updatedData) {\n          props.onEdit({\n            updatedData,\n            editType: 'addPosition',\n            editContext: {\n              featureIndexes: [featureIndex],\n              positionIndexes,\n              position: pickedIntermediateHandle.geometry.coordinates,\n            },\n          });\n        }\n      }\n    }\n  }\n\n  handleDragging(event: DraggingEvent, props: ModeProps<FeatureCollection>): void {\n    const editHandle = getPickedEditHandle(event.pointerDownPicks);\n\n    if (editHandle) {\n      // Cancel map panning if pointer went down on an edit handle\n      event.cancelPan();\n\n      this._dragEditHandle('movePosition', props, editHandle, event);\n    }\n  }\n\n  _dragEditHandle(\n    editType: string,\n    props: ModeProps<FeatureCollection>,\n    editHandle: EditHandleFeature,\n    event: StopDraggingEvent | DraggingEvent\n  ) {\n    const editHandleProperties = editHandle.properties;\n    const editedFeature = props.data.features[editHandleProperties.featureIndex];\n\n    let updatedData;\n    if (props.modeConfig?.lockRectangles && editedFeature.properties.shape === 'Rectangle') {\n      const coordinates = updateRectanglePosition(\n        editedFeature as FeatureOf<Polygon>,\n        editHandleProperties.positionIndexes[1],\n        event.mapCoords\n      );\n\n      updatedData = new ImmutableFeatureCollection(props.data)\n        .replaceGeometry(editHandleProperties.featureIndex, { coordinates, type: 'Polygon' })\n        .getObject();\n    } else {\n      updatedData = new ImmutableFeatureCollection(props.data)\n        .replacePosition(\n          editHandleProperties.featureIndex,\n          editHandleProperties.positionIndexes,\n          event.mapCoords\n        )\n        .getObject();\n    }\n\n    props.onEdit({\n      updatedData,\n      editType,\n      editContext: {\n        featureIndexes: [editHandleProperties.featureIndex],\n        positionIndexes: editHandleProperties.positionIndexes,\n        position: event.mapCoords,\n      },\n    });\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>): void {\n    const cursor = this.getCursor(event);\n    props.onUpdateCursor(cursor);\n  }\n\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>) {\n    const selectedFeatureIndexes = props.selectedIndexes;\n\n    const editHandle = getPickedIntermediateEditHandle(event.picks);\n    if (selectedFeatureIndexes.length && editHandle) {\n      const editHandleProperties = editHandle.properties;\n\n      const updatedData = new ImmutableFeatureCollection(props.data)\n        .addPosition(\n          editHandleProperties.featureIndex,\n          editHandleProperties.positionIndexes,\n          event.mapCoords\n        )\n        .getObject();\n\n      props.onEdit({\n        updatedData,\n        editType: 'addPosition',\n        editContext: {\n          featureIndexes: [editHandleProperties.featureIndex],\n          positionIndexes: editHandleProperties.positionIndexes,\n          position: event.mapCoords,\n        },\n      });\n    }\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>) {\n    const selectedFeatureIndexes = props.selectedIndexes;\n    const editHandle = getPickedEditHandle(event.picks);\n    if (selectedFeatureIndexes.length && editHandle) {\n      this._dragEditHandle('finishMovePosition', props, editHandle, event);\n    }\n  }\n\n  getCursor(event: PointerMoveEvent): string | null | undefined {\n    const picks = (event && event.picks) || [];\n\n    const handlesPicked = getPickedEditHandles(picks);\n    if (handlesPicked.length) {\n      return 'cell';\n    }\n    return null;\n  }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = require(\"@turf/helpers\");\nvar invariant_1 = require(\"@turf/invariant\");\nvar meta_1 = require(\"@turf/meta\");\n/**\n * Creates a {@link FeatureCollection} of 2-vertex {@link LineString} segments from a\n * {@link LineString|(Multi)LineString} or {@link Polygon|(Multi)Polygon}.\n *\n * @name lineSegment\n * @param {GeoJSON} geojson GeoJSON Polygon or LineString\n * @returns {FeatureCollection<LineString>} 2-vertex line segments\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n * var segments = turf.lineSegment(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, segments]\n */\nfunction lineSegment(geojson) {\n    if (!geojson) {\n        throw new Error(\"geojson is required\");\n    }\n    var results = [];\n    meta_1.flattenEach(geojson, function (feature) {\n        lineSegmentFeature(feature, results);\n    });\n    return helpers_1.featureCollection(results);\n}\n/**\n * Line Segment\n *\n * @private\n * @param {Feature<LineString|Polygon>} geojson Line or polygon feature\n * @param {Array} results push to results\n * @returns {void}\n */\nfunction lineSegmentFeature(geojson, results) {\n    var coords = [];\n    var geometry = geojson.geometry;\n    if (geometry !== null) {\n        switch (geometry.type) {\n            case \"Polygon\":\n                coords = invariant_1.getCoords(geometry);\n                break;\n            case \"LineString\":\n                coords = [invariant_1.getCoords(geometry)];\n        }\n        coords.forEach(function (coord) {\n            var segments = createSegments(coord, geojson.properties);\n            segments.forEach(function (segment) {\n                segment.id = results.length;\n                results.push(segment);\n            });\n        });\n    }\n}\n/**\n * Create Segments from LineString coordinates\n *\n * @private\n * @param {Array<Array<number>>} coords LineString coordinates\n * @param {*} properties GeoJSON properties\n * @returns {Array<Feature<LineString>>} line segments\n */\nfunction createSegments(coords, properties) {\n    var segments = [];\n    coords.reduce(function (previousCoords, currentCoords) {\n        var segment = helpers_1.lineString([previousCoords, currentCoords], properties);\n        segment.bbox = bbox(previousCoords, currentCoords);\n        segments.push(segment);\n        return currentCoords;\n    });\n    return segments;\n}\n/**\n * Create BBox between two coordinates (faster than @turf/bbox)\n *\n * @private\n * @param {Array<number>} coords1 Point coordinate\n * @param {Array<number>} coords2 Point coordinate\n * @returns {BBox} [west, south, east, north]\n */\nfunction bbox(coords1, coords2) {\n    var x1 = coords1[0];\n    var y1 = coords1[1];\n    var x2 = coords2[0];\n    var y2 = coords2[1];\n    var west = x1 < x2 ? x1 : x2;\n    var south = y1 < y2 ? y1 : y2;\n    var east = x1 > x2 ? x1 : x2;\n    var north = y1 > y2 ? y1 : y2;\n    return [west, south, east, north];\n}\nexports.default = lineSegment;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = require(\"@turf/helpers\");\nvar invariant_1 = require(\"@turf/invariant\");\nvar line_segment_1 = __importDefault(require(\"@turf/line-segment\"));\nvar meta_1 = require(\"@turf/meta\");\nvar geojson_rbush_1 = __importDefault(require(\"geojson-rbush\"));\n/**\n * Takes any LineString or Polygon GeoJSON and returns the intersecting point(s).\n *\n * @name lineIntersect\n * @param {GeoJSON} line1 any LineString or Polygon\n * @param {GeoJSON} line2 any LineString or Polygon\n * @returns {FeatureCollection<Point>} point(s) that intersect both\n * @example\n * var line1 = turf.lineString([[126, -11], [129, -21]]);\n * var line2 = turf.lineString([[123, -18], [131, -14]]);\n * var intersects = turf.lineIntersect(line1, line2);\n *\n * //addToMap\n * var addToMap = [line1, line2, intersects]\n */\nfunction lineIntersect(line1, line2) {\n    var unique = {};\n    var results = [];\n    // First, normalize geometries to features\n    // Then, handle simple 2-vertex segments\n    if (line1.type === \"LineString\") {\n        line1 = helpers_1.feature(line1);\n    }\n    if (line2.type === \"LineString\") {\n        line2 = helpers_1.feature(line2);\n    }\n    if (line1.type === \"Feature\" &&\n        line2.type === \"Feature\" &&\n        line1.geometry !== null &&\n        line2.geometry !== null &&\n        line1.geometry.type === \"LineString\" &&\n        line2.geometry.type === \"LineString\" &&\n        line1.geometry.coordinates.length === 2 &&\n        line2.geometry.coordinates.length === 2) {\n        var intersect = intersects(line1, line2);\n        if (intersect) {\n            results.push(intersect);\n        }\n        return helpers_1.featureCollection(results);\n    }\n    // Handles complex GeoJSON Geometries\n    var tree = geojson_rbush_1.default();\n    tree.load(line_segment_1.default(line2));\n    meta_1.featureEach(line_segment_1.default(line1), function (segment) {\n        meta_1.featureEach(tree.search(segment), function (match) {\n            var intersect = intersects(segment, match);\n            if (intersect) {\n                // prevent duplicate points https://github.com/Turfjs/turf/issues/688\n                var key = invariant_1.getCoords(intersect).join(\",\");\n                if (!unique[key]) {\n                    unique[key] = true;\n                    results.push(intersect);\n                }\n            }\n        });\n    });\n    return helpers_1.featureCollection(results);\n}\n/**\n * Find a point that intersects LineStrings with two coordinates each\n *\n * @private\n * @param {Feature<LineString>} line1 GeoJSON LineString (Must only contain 2 coordinates)\n * @param {Feature<LineString>} line2 GeoJSON LineString (Must only contain 2 coordinates)\n * @returns {Feature<Point>} intersecting GeoJSON Point\n */\nfunction intersects(line1, line2) {\n    var coords1 = invariant_1.getCoords(line1);\n    var coords2 = invariant_1.getCoords(line2);\n    if (coords1.length !== 2) {\n        throw new Error(\"<intersects> line1 must only contain 2 coordinates\");\n    }\n    if (coords2.length !== 2) {\n        throw new Error(\"<intersects> line2 must only contain 2 coordinates\");\n    }\n    var x1 = coords1[0][0];\n    var y1 = coords1[0][1];\n    var x2 = coords1[1][0];\n    var y2 = coords1[1][1];\n    var x3 = coords2[0][0];\n    var y3 = coords2[0][1];\n    var x4 = coords2[1][0];\n    var y4 = coords2[1][1];\n    var denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n    var numeA = (x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3);\n    var numeB = (x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3);\n    if (denom === 0) {\n        if (numeA === 0 && numeB === 0) {\n            return null;\n        }\n        return null;\n    }\n    var uA = numeA / denom;\n    var uB = numeB / denom;\n    if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n        var x = x1 + uA * (x2 - x1);\n        var y = y1 + uA * (y2 - y1);\n        return helpers_1.point([x, y]);\n    }\n    return null;\n}\nexports.default = lineIntersect;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bearing_1 = __importDefault(require(\"@turf/bearing\"));\nvar distance_1 = __importDefault(require(\"@turf/distance\"));\nvar destination_1 = __importDefault(require(\"@turf/destination\"));\nvar line_intersect_1 = __importDefault(require(\"@turf/line-intersect\"));\nvar meta_1 = require(\"@turf/meta\");\nvar helpers_1 = require(\"@turf/helpers\");\nvar invariant_1 = require(\"@turf/invariant\");\n/**\n * Takes a {@link Point} and a {@link LineString} and calculates the closest Point on the (Multi)LineString.\n *\n * @name nearestPointOnLine\n * @param {Geometry|Feature<LineString|MultiLineString>} lines lines to snap to\n * @param {Geometry|Feature<Point>|number[]} pt point to snap from\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {Feature<Point>} closest point on the `line` to `point`. The properties object will contain three values: `index`: closest point was found on nth line part, `dist`: distance between pt and the closest point, `location`: distance along the line between start and the closest point.\n * @example\n * var line = turf.lineString([\n *     [-77.031669, 38.878605],\n *     [-77.029609, 38.881946],\n *     [-77.020339, 38.884084],\n *     [-77.025661, 38.885821],\n *     [-77.021884, 38.889563],\n *     [-77.019824, 38.892368]\n * ]);\n * var pt = turf.point([-77.037076, 38.884017]);\n *\n * var snapped = turf.nearestPointOnLine(line, pt, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [line, pt, snapped];\n * snapped.properties['marker-color'] = '#00f';\n */\nfunction nearestPointOnLine(lines, pt, options) {\n    if (options === void 0) { options = {}; }\n    var closestPt = helpers_1.point([Infinity, Infinity], {\n        dist: Infinity,\n    });\n    var length = 0.0;\n    meta_1.flattenEach(lines, function (line) {\n        var coords = invariant_1.getCoords(line);\n        for (var i = 0; i < coords.length - 1; i++) {\n            //start\n            var start = helpers_1.point(coords[i]);\n            start.properties.dist = distance_1.default(pt, start, options);\n            //stop\n            var stop_1 = helpers_1.point(coords[i + 1]);\n            stop_1.properties.dist = distance_1.default(pt, stop_1, options);\n            // sectionLength\n            var sectionLength = distance_1.default(start, stop_1, options);\n            //perpendicular\n            var heightDistance = Math.max(start.properties.dist, stop_1.properties.dist);\n            var direction = bearing_1.default(start, stop_1);\n            var perpendicularPt1 = destination_1.default(pt, heightDistance, direction + 90, options);\n            var perpendicularPt2 = destination_1.default(pt, heightDistance, direction - 90, options);\n            var intersect = line_intersect_1.default(helpers_1.lineString([\n                perpendicularPt1.geometry.coordinates,\n                perpendicularPt2.geometry.coordinates,\n            ]), helpers_1.lineString([start.geometry.coordinates, stop_1.geometry.coordinates]));\n            var intersectPt = null;\n            if (intersect.features.length > 0) {\n                intersectPt = intersect.features[0];\n                intersectPt.properties.dist = distance_1.default(pt, intersectPt, options);\n                intersectPt.properties.location =\n                    length + distance_1.default(start, intersectPt, options);\n            }\n            if (start.properties.dist < closestPt.properties.dist) {\n                closestPt = start;\n                closestPt.properties.index = i;\n                closestPt.properties.location = length;\n            }\n            if (stop_1.properties.dist < closestPt.properties.dist) {\n                closestPt = stop_1;\n                closestPt.properties.index = i + 1;\n                closestPt.properties.location = length + sectionLength;\n            }\n            if (intersectPt &&\n                intersectPt.properties.dist < closestPt.properties.dist) {\n                closestPt = intersectPt;\n                closestPt.properties.index = i;\n            }\n            // update length\n            length += sectionLength;\n        }\n    });\n    return closestPt;\n}\nexports.default = nearestPointOnLine;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar destination_1 = __importDefault(require(\"@turf/destination\"));\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Takes a {@link Point} and calculates the circle polygon given a radius in degrees, radians, miles, or kilometers; and steps for precision.\n *\n * @name circle\n * @param {Feature<Point>|number[]} center center point\n * @param {number} radius radius of the circle\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.steps=64] number of steps\n * @param {string} [options.units='kilometers'] miles, kilometers, degrees, or radians\n * @param {Object} [options.properties={}] properties\n * @returns {Feature<Polygon>} circle polygon\n * @example\n * var center = [-75.343, 39.984];\n * var radius = 5;\n * var options = {steps: 10, units: 'kilometers', properties: {foo: 'bar'}};\n * var circle = turf.circle(center, radius, options);\n *\n * //addToMap\n * var addToMap = [turf.point(center), circle]\n */\nfunction circle(center, radius, options) {\n    if (options === void 0) { options = {}; }\n    // default params\n    var steps = options.steps || 64;\n    var properties = options.properties\n        ? options.properties\n        : !Array.isArray(center) && center.type === \"Feature\" && center.properties\n            ? center.properties\n            : {};\n    // main\n    var coordinates = [];\n    for (var i = 0; i < steps; i++) {\n        coordinates.push(destination_1.default(center, radius, (i * -360) / steps, options).geometry\n            .coordinates);\n    }\n    coordinates.push(coordinates[0]);\n    return helpers_1.polygon([coordinates], properties);\n}\nexports.default = circle;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bbox_1 = __importDefault(require(\"@turf/bbox\"));\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Takes a {@link Feature} or {@link FeatureCollection} and returns the absolute center point of all features.\n *\n * @name center\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] Translate GeoJSON Properties to Point\n * @param {Object} [options.bbox={}] Translate GeoJSON BBox to Point\n * @param {Object} [options.id={}] Translate GeoJSON Id to Point\n * @returns {Feature<Point>} a Point feature at the absolute center point of all input features\n * @example\n * var features = turf.points([\n *   [-97.522259, 35.4691],\n *   [-97.502754, 35.463455],\n *   [-97.508269, 35.463245]\n * ]);\n *\n * var center = turf.center(features);\n *\n * //addToMap\n * var addToMap = [features, center]\n * center.properties['marker-size'] = 'large';\n * center.properties['marker-color'] = '#000';\n */\nfunction center(geojson, options) {\n    if (options === void 0) { options = {}; }\n    var ext = bbox_1.default(geojson);\n    var x = (ext[0] + ext[2]) / 2;\n    var y = (ext[1] + ext[3]) / 2;\n    return helpers_1.point([x, y], options.properties, options);\n}\nexports.default = center;\n", "import nearestPointOnLine from '@turf/nearest-point-on-line';\nimport { point, lineString as toLineString } from '@turf/helpers';\nimport circle from '@turf/circle';\nimport distance from '@turf/distance';\nimport turfCenter from '@turf/center';\nimport {\n  recursivelyTraverseNestedArrays,\n  nearestPointOnProjectedLine,\n  getPickedEditHandles,\n  getPickedEditHandle,\n  NearestPointType,\n} from '../utils';\nimport { LineString, Point, FeatureCollection, FeatureOf } from '../geojson-types';\nimport {\n  ModeProps,\n  PointerMoveEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  DraggingEvent,\n  Viewport,\n  EditHandleFeature,\n  GuideFeatureCollection,\n} from '../types';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\nimport { ImmutableFeatureCollection } from './immutable-feature-collection';\n\nexport class ResizeCircleMode extends GeoJsonEditMode {\n  _selectedEditHandle: EditHandleFeature | null | undefined;\n  _isResizing = false;\n\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const handles = [];\n    const selectedFeatureIndexes = props.selectedIndexes;\n\n    const { lastPointerMoveEvent } = props;\n    const picks = lastPointerMoveEvent && lastPointerMoveEvent.picks;\n    const mapCoords = lastPointerMoveEvent && lastPointerMoveEvent.mapCoords;\n\n    // intermediate edit handle\n    if (\n      picks &&\n      picks.length &&\n      mapCoords &&\n      selectedFeatureIndexes.length === 1 &&\n      !this._isResizing\n    ) {\n      const featureAsPick = picks.find((pick) => !pick.isGuide);\n\n      // is the feature in the pick selected\n      if (\n        featureAsPick &&\n        featureAsPick.object.properties.shape &&\n        featureAsPick.object.properties.shape.includes('Circle') &&\n        props.selectedIndexes.includes(featureAsPick.index)\n      ) {\n        let intermediatePoint: NearestPointType | null | undefined = null;\n        let positionIndexPrefix = [];\n        const referencePoint = point(mapCoords);\n        // process all lines of the (single) feature\n        recursivelyTraverseNestedArrays(\n          featureAsPick.object.geometry.coordinates,\n          [],\n          (lineString, prefix) => {\n            const lineStringFeature = toLineString(lineString);\n            const candidateIntermediatePoint = this.getNearestPoint(\n              // @ts-ignore\n              lineStringFeature,\n              referencePoint,\n              props.modeConfig && props.modeConfig.viewport\n            );\n            if (\n              !intermediatePoint ||\n              candidateIntermediatePoint.properties.dist < intermediatePoint.properties.dist\n            ) {\n              intermediatePoint = candidateIntermediatePoint;\n              positionIndexPrefix = prefix;\n            }\n          }\n        );\n        // tack on the lone intermediate point to the set of handles\n        if (intermediatePoint) {\n          const {\n            geometry: { coordinates: position },\n            properties: { index },\n          } = intermediatePoint;\n          handles.push({\n            type: 'Feature',\n            properties: {\n              guideType: 'editHandle',\n              editHandleType: 'intermediate',\n              featureIndex: featureAsPick.index,\n              positionIndexes: [...positionIndexPrefix, index + 1],\n            },\n            geometry: {\n              type: 'Point',\n              coordinates: position,\n            },\n          });\n        }\n      }\n    }\n\n    return {\n      type: 'FeatureCollection',\n      features: handles,\n    };\n  }\n\n  // turf.js does not support elevation for nearestPointOnLine\n  getNearestPoint(\n    line: FeatureOf<LineString>,\n    inPoint: FeatureOf<Point>,\n    viewport: Viewport | null | undefined\n  ): NearestPointType {\n    const { coordinates } = line.geometry;\n    if (coordinates.some((coord) => coord.length > 2)) {\n      if (viewport) {\n        // This line has elevation, we need to use alternative algorithm\n        return nearestPointOnProjectedLine(line, inPoint, viewport);\n      }\n      // eslint-disable-next-line no-console,no-undef\n      console.log(\n        'Editing 3D point but modeConfig.viewport not provided. Falling back to 2D logic.'\n      );\n    }\n\n    return nearestPointOnLine(line, inPoint);\n  }\n\n  handleDragging(event: DraggingEvent, props: ModeProps<FeatureCollection>): void {\n    const editHandle = getPickedEditHandle(event.pointerDownPicks);\n\n    if (editHandle) {\n      // Cancel map panning if pointer went down on an edit handle\n      event.cancelPan();\n\n      const editHandleProperties = editHandle.properties;\n\n      const feature = this.getSelectedFeature(props);\n      const center = turfCenter(feature).geometry.coordinates;\n      const numberOfSteps = Object.entries(feature.geometry.coordinates[0]).length - 1;\n      const radius = Math.max(distance(center, event.mapCoords), 0.001);\n\n      const { steps = numberOfSteps } = {};\n      const options = { steps };\n      const updatedFeature = circle(center, radius, options);\n      const geometry = updatedFeature.geometry;\n\n      const updatedData = new ImmutableFeatureCollection(props.data)\n        .replaceGeometry(editHandleProperties.featureIndex, geometry)\n        .getObject();\n\n      props.onEdit({\n        updatedData,\n        editType: 'unionGeometry',\n        editContext: {\n          featureIndexes: [editHandleProperties.featureIndex],\n        },\n      });\n    }\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>): void {\n    if (!this._isResizing) {\n      const selectedEditHandle = getPickedEditHandle(event.picks);\n      this._selectedEditHandle =\n        selectedEditHandle && selectedEditHandle.properties.editHandleType === 'intermediate'\n          ? selectedEditHandle\n          : null;\n    }\n\n    const cursor = this.getCursor(event);\n    props.onUpdateCursor(cursor);\n  }\n\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (this._selectedEditHandle) {\n      this._isResizing = true;\n    }\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (this._isResizing) {\n      this._selectedEditHandle = null;\n      this._isResizing = false;\n    }\n  }\n\n  getCursor(event: PointerMoveEvent): string | null | undefined {\n    const picks = (event && event.picks) || [];\n\n    const handlesPicked = getPickedEditHandles(picks);\n    if (handlesPicked.length) {\n      return 'cell';\n    }\n    return null;\n  }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Returns a cloned copy of the passed GeoJSON Object, including possible 'Foreign Members'.\n * ~3-5x faster than the common JSON.parse + JSON.stringify combo method.\n *\n * @name clone\n * @param {GeoJSON} geojson GeoJSON Object\n * @returns {GeoJSON} cloned GeoJSON Object\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]], {color: 'red'});\n *\n * var lineCloned = turf.clone(line);\n */\nfunction clone(geojson) {\n    if (!geojson) {\n        throw new Error(\"geojson is required\");\n    }\n    switch (geojson.type) {\n        case \"Feature\":\n            return cloneFeature(geojson);\n        case \"FeatureCollection\":\n            return cloneFeatureCollection(geojson);\n        case \"Point\":\n        case \"LineString\":\n        case \"Polygon\":\n        case \"MultiPoint\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\":\n        case \"GeometryCollection\":\n            return cloneGeometry(geojson);\n        default:\n            throw new Error(\"unknown GeoJSON type\");\n    }\n}\n/**\n * Clone Feature\n *\n * @private\n * @param {Feature<any>} geojson GeoJSON Feature\n * @returns {Feature<any>} cloned Feature\n */\nfunction cloneFeature(geojson) {\n    var cloned = { type: \"Feature\" };\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n            case \"type\":\n            case \"properties\":\n            case \"geometry\":\n                return;\n            default:\n                cloned[key] = geojson[key];\n        }\n    });\n    // Add properties & geometry last\n    cloned.properties = cloneProperties(geojson.properties);\n    cloned.geometry = cloneGeometry(geojson.geometry);\n    return cloned;\n}\n/**\n * Clone Properties\n *\n * @private\n * @param {Object} properties GeoJSON Properties\n * @returns {Object} cloned Properties\n */\nfunction cloneProperties(properties) {\n    var cloned = {};\n    if (!properties) {\n        return cloned;\n    }\n    Object.keys(properties).forEach(function (key) {\n        var value = properties[key];\n        if (typeof value === \"object\") {\n            if (value === null) {\n                // handle null\n                cloned[key] = null;\n            }\n            else if (Array.isArray(value)) {\n                // handle Array\n                cloned[key] = value.map(function (item) {\n                    return item;\n                });\n            }\n            else {\n                // handle generic Object\n                cloned[key] = cloneProperties(value);\n            }\n        }\n        else {\n            cloned[key] = value;\n        }\n    });\n    return cloned;\n}\n/**\n * Clone Feature Collection\n *\n * @private\n * @param {FeatureCollection<any>} geojson GeoJSON Feature Collection\n * @returns {FeatureCollection<any>} cloned Feature Collection\n */\nfunction cloneFeatureCollection(geojson) {\n    var cloned = { type: \"FeatureCollection\" };\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n            case \"type\":\n            case \"features\":\n                return;\n            default:\n                cloned[key] = geojson[key];\n        }\n    });\n    // Add features\n    cloned.features = geojson.features.map(function (feature) {\n        return cloneFeature(feature);\n    });\n    return cloned;\n}\n/**\n * Clone Geometry\n *\n * @private\n * @param {Geometry<any>} geometry GeoJSON Geometry\n * @returns {Geometry<any>} cloned Geometry\n */\nfunction cloneGeometry(geometry) {\n    var geom = { type: geometry.type };\n    if (geometry.bbox) {\n        geom.bbox = geometry.bbox;\n    }\n    if (geometry.type === \"GeometryCollection\") {\n        geom.geometries = geometry.geometries.map(function (g) {\n            return cloneGeometry(g);\n        });\n        return geom;\n    }\n    geom.coordinates = deepSlice(geometry.coordinates);\n    return geom;\n}\n/**\n * Deep Slice coordinates\n *\n * @private\n * @param {Coordinates} coords Coordinates\n * @returns {Coordinates} all coordinates sliced\n */\nfunction deepSlice(coords) {\n    var cloned = coords;\n    if (typeof cloned[0] !== \"object\") {\n        return cloned.slice();\n    }\n    return cloned.map(function (coord) {\n        return deepSlice(coord);\n    });\n}\nexports.default = clone;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// https://en.wikipedia.org/wiki/Rhumb_line\nvar helpers_1 = require(\"@turf/helpers\");\nvar invariant_1 = require(\"@turf/invariant\");\n/**\n * Returns the destination {@link Point} having travelled the given distance along a Rhumb line from the\n * origin Point with the (varant) given bearing.\n *\n * @name rhumbDestination\n * @param {Coord} origin starting point\n * @param {number} distance distance from the starting point\n * @param {number} bearing varant bearing angle ranging from -180 to 180 degrees from north\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @param {Object} [options.properties={}] translate properties to destination point\n * @returns {Feature<Point>} Destination point.\n * @example\n * var pt = turf.point([-75.343, 39.984], {\"marker-color\": \"F00\"});\n * var distance = 50;\n * var bearing = 90;\n * var options = {units: 'miles'};\n *\n * var destination = turf.rhumbDestination(pt, distance, bearing, options);\n *\n * //addToMap\n * var addToMap = [pt, destination]\n * destination.properties['marker-color'] = '#00F';\n */\nfunction rhumbDestination(origin, distance, bearing, options) {\n    if (options === void 0) { options = {}; }\n    var wasNegativeDistance = distance < 0;\n    var distanceInMeters = helpers_1.convertLength(Math.abs(distance), options.units, \"meters\");\n    if (wasNegativeDistance)\n        distanceInMeters = -Math.abs(distanceInMeters);\n    var coords = invariant_1.getCoord(origin);\n    var destination = calculateRhumbDestination(coords, distanceInMeters, bearing);\n    // compensate the crossing of the 180th meridian (https://macwright.org/2016/09/26/the-180th-meridian.html)\n    // solution from https://github.com/mapbox/mapbox-gl-js/issues/3250#issuecomment-294887678\n    destination[0] +=\n        destination[0] - coords[0] > 180\n            ? -360\n            : coords[0] - destination[0] > 180\n                ? 360\n                : 0;\n    return helpers_1.point(destination, options.properties);\n}\n/**\n * Returns the destination point having travelled along a rhumb line from origin point the given\n * distance on the  given bearing.\n * Adapted from Geodesy: http://www.movable-type.co.uk/scripts/latlong.html#rhumblines\n *\n * @private\n * @param   {Array<number>} origin - point\n * @param   {number} distance - Distance travelled, in same units as earth radius (default: metres).\n * @param   {number} bearing - Bearing in degrees from north.\n * @param   {number} [radius=6371e3] - (Mean) radius of earth (defaults to radius in metres).\n * @returns {Array<number>} Destination point.\n */\nfunction calculateRhumbDestination(origin, distance, bearing, radius) {\n    // φ => phi\n    // λ => lambda\n    // ψ => psi\n    // Δ => Delta\n    // δ => delta\n    // θ => theta\n    radius = radius === undefined ? helpers_1.earthRadius : Number(radius);\n    var delta = distance / radius; // angular distance in radians\n    var lambda1 = (origin[0] * Math.PI) / 180; // to radians, but without normalize to 𝜋\n    var phi1 = helpers_1.degreesToRadians(origin[1]);\n    var theta = helpers_1.degreesToRadians(bearing);\n    var DeltaPhi = delta * Math.cos(theta);\n    var phi2 = phi1 + DeltaPhi;\n    // check for some daft bugger going past the pole, normalise latitude if so\n    if (Math.abs(phi2) > Math.PI / 2) {\n        phi2 = phi2 > 0 ? Math.PI - phi2 : -Math.PI - phi2;\n    }\n    var DeltaPsi = Math.log(Math.tan(phi2 / 2 + Math.PI / 4) / Math.tan(phi1 / 2 + Math.PI / 4));\n    // E-W course becomes ill-conditioned with 0/0\n    var q = Math.abs(DeltaPsi) > 10e-12 ? DeltaPhi / DeltaPsi : Math.cos(phi1);\n    var DeltaLambda = (delta * Math.sin(theta)) / q;\n    var lambda2 = lambda1 + DeltaLambda;\n    return [\n        (((lambda2 * 180) / Math.PI + 540) % 360) - 180,\n        (phi2 * 180) / Math.PI,\n    ]; // normalise to −180..+180°\n}\nexports.default = rhumbDestination;\n", "'use strict';\n\nvar meta = require('@turf/meta');\nvar helpers = require('@turf/helpers');\nvar invariant = require('@turf/invariant');\nvar clone = require('@turf/clone');\nvar rhumbDestination = require('@turf/rhumb-destination');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar clone__default = /*#__PURE__*/_interopDefaultLegacy(clone);\nvar rhumbDestination__default = /*#__PURE__*/_interopDefaultLegacy(rhumbDestination);\n\n/**\n * Moves any geojson Feature or Geometry of a specified distance along a Rhumb Line\n * on the provided direction angle.\n *\n * @name transformTranslate\n * @param {GeoJSON} geojson object to be translated\n * @param {number} distance length of the motion; negative values determine motion in opposite direction\n * @param {number} direction of the motion; angle from North in decimal degrees, positive clockwise\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] in which `distance` will be express; miles, kilometers, degrees, or radians\n * @param {number} [options.zTranslation=0] length of the vertical motion, same unit of distance\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} the translated GeoJSON object\n * @example\n * var poly = turf.polygon([[[0,29],[3.5,29],[2.5,32],[0,29]]]);\n * var translatedPoly = turf.transformTranslate(poly, 100, 35);\n *\n * //addToMap\n * var addToMap = [poly, translatedPoly];\n * translatedPoly.properties = {stroke: '#F00', 'stroke-width': 4};\n */\nfunction transformTranslate(geojson, distance, direction, options) {\n  // Optional parameters\n  options = options || {};\n  if (!helpers.isObject(options)) throw new Error(\"options is invalid\");\n  var units = options.units;\n  var zTranslation = options.zTranslation;\n  var mutate = options.mutate;\n\n  // Input validation\n  if (!geojson) throw new Error(\"geojson is required\");\n  if (distance === undefined || distance === null || isNaN(distance))\n    throw new Error(\"distance is required\");\n  if (zTranslation && typeof zTranslation !== \"number\" && isNaN(zTranslation))\n    throw new Error(\"zTranslation is not a number\");\n\n  // Shortcut no-motion\n  zTranslation = zTranslation !== undefined ? zTranslation : 0;\n  if (distance === 0 && zTranslation === 0) return geojson;\n\n  if (direction === undefined || direction === null || isNaN(direction))\n    throw new Error(\"direction is required\");\n\n  // Invert with negative distances\n  if (distance < 0) {\n    distance = -distance;\n    direction = direction + 180;\n  }\n\n  // Clone geojson to avoid side effects\n  if (mutate === false || mutate === undefined) geojson = clone__default['default'](geojson);\n\n  // Translate each coordinate\n  meta.coordEach(geojson, function (pointCoords) {\n    var newCoords = invariant.getCoords(\n      rhumbDestination__default['default'](pointCoords, distance, direction, { units: units })\n    );\n    pointCoords[0] = newCoords[0];\n    pointCoords[1] = newCoords[1];\n    if (zTranslation && pointCoords.length === 3)\n      pointCoords[2] += zTranslation;\n  });\n  return geojson;\n}\n\nmodule.exports = transformTranslate;\nmodule.exports.default = transformTranslate;\n", "import turfBearing from '@turf/bearing';\nimport turfDistance from '@turf/distance';\nimport turfTransformTranslate from '@turf/transform-translate';\nimport { point } from '@turf/helpers';\nimport WebMercatorViewport from 'viewport-mercator-project';\nimport { FeatureCollection, Position } from '../geojson-types';\nimport {\n  PointerMoveEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  DraggingEvent,\n  ModeProps,\n} from '../types';\nimport { mapCoords } from '../utils';\nimport { GeoJsonEditMode, GeoJsonEditAction } from './geojson-edit-mode';\nimport { ImmutableFeatureCollection } from './immutable-feature-collection';\n\nexport class TranslateMode extends GeoJsonEditMode {\n  _geometryBeforeTranslate: FeatureCollection | null | undefined;\n  _isTranslatable: boolean;\n\n  handleDragging(event: DraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (!this._isTranslatable) {\n      // Nothing to do\n      return;\n    }\n\n    if (this._geometryBeforeTranslate) {\n      // Translate the geometry\n      const editAction = this.getTranslateAction(\n        event.pointerDownMapCoords,\n        event.mapCoords,\n        'translating',\n        props\n      );\n\n      if (editAction) {\n        props.onEdit(editAction);\n      }\n    }\n\n    // cancel map panning\n    event.cancelPan();\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    this._isTranslatable = this.isSelectionPicked(event.pointerDownPicks || event.picks, props);\n\n    this.updateCursor(props);\n  }\n\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (!this._isTranslatable) {\n      return;\n    }\n\n    this._geometryBeforeTranslate = this.getSelectedFeaturesAsFeatureCollection(props);\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (this._geometryBeforeTranslate) {\n      // Translate the geometry\n      const editAction = this.getTranslateAction(\n        event.pointerDownMapCoords,\n        event.mapCoords,\n        'translated',\n        props\n      );\n\n      if (editAction) {\n        props.onEdit(editAction);\n      }\n\n      this._geometryBeforeTranslate = null;\n    }\n  }\n\n  updateCursor(props: ModeProps<FeatureCollection>) {\n    if (this._isTranslatable) {\n      props.onUpdateCursor('move');\n    } else {\n      props.onUpdateCursor(null);\n    }\n  }\n\n  getTranslateAction(\n    startDragPoint: Position,\n    currentPoint: Position,\n    editType: string,\n    props: ModeProps<FeatureCollection>\n  ): GeoJsonEditAction | null | undefined {\n    if (!this._geometryBeforeTranslate) {\n      return null;\n    }\n\n    let updatedData = new ImmutableFeatureCollection(props.data);\n    const selectedIndexes = props.selectedIndexes;\n\n    const { viewport: viewportDesc, screenSpace } = props.modeConfig || {};\n\n    if (viewportDesc && screenSpace) {\n      const viewport = viewportDesc.project ? viewportDesc : new WebMercatorViewport(viewportDesc);\n\n      const from = viewport.project(startDragPoint);\n      const to = viewport.project(currentPoint);\n      const dx = to[0] - from[0];\n      const dy = to[1] - from[1];\n\n      for (let i = 0; i < selectedIndexes.length; i++) {\n        const selectedIndex = selectedIndexes[i];\n        const feature = this._geometryBeforeTranslate.features[i];\n\n        let coordinates = feature.geometry.coordinates;\n        if (coordinates) {\n          coordinates = mapCoords(coordinates, (coord) => {\n            const pixels = viewport.project(coord);\n            if (pixels) {\n              pixels[0] += dx;\n              pixels[1] += dy;\n              return viewport.unproject(pixels);\n            }\n            return null;\n          });\n\n          // @ts-ignore\n          updatedData = updatedData.replaceGeometry(selectedIndex, {\n            type: feature.geometry.type,\n            coordinates,\n          });\n        }\n      }\n    } else {\n      const p1 = point(startDragPoint);\n      const p2 = point(currentPoint);\n\n      const distanceMoved = turfDistance(p1, p2);\n      const direction = turfBearing(p1, p2);\n\n      const movedFeatures = turfTransformTranslate(\n        // @ts-ignore\n        this._geometryBeforeTranslate,\n        distanceMoved,\n        direction\n      );\n\n      for (let i = 0; i < selectedIndexes.length; i++) {\n        const selectedIndex = selectedIndexes[i];\n        const movedFeature = movedFeatures.features[i];\n        updatedData = updatedData.replaceGeometry(selectedIndex, movedFeature.geometry);\n      }\n    }\n\n    return {\n      updatedData: updatedData.getObject(),\n      editType,\n      editContext: {\n        featureIndexes: selectedIndexes,\n      },\n    };\n  }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar meta_1 = require(\"@turf/meta\");\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Takes one or more features and calculates the centroid using the mean of all vertices.\n * This lessens the effect of small islands and artifacts when calculating the centroid of a set of polygons.\n *\n * @name centroid\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [options={}] Optional Parameters\n * @param {Object} [options.properties={}] an Object that is used as the {@link Feature}'s properties\n * @returns {Feature<Point>} the centroid of the input features\n * @example\n * var polygon = turf.polygon([[[-81, 41], [-88, 36], [-84, 31], [-80, 33], [-77, 39], [-81, 41]]]);\n *\n * var centroid = turf.centroid(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, centroid]\n */\nfunction centroid(geojson, options) {\n    if (options === void 0) { options = {}; }\n    var xSum = 0;\n    var ySum = 0;\n    var len = 0;\n    meta_1.coordEach(geojson, function (coord) {\n        xSum += coord[0];\n        ySum += coord[1];\n        len++;\n    }, true);\n    return helpers_1.point([xSum / len, ySum / len], options.properties);\n}\nexports.default = centroid;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Takes a bbox and returns an equivalent {@link Polygon|polygon}.\n *\n * @name bboxPolygon\n * @param {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @param {Object} [options={}] Optional parameters\n * @param {Properties} [options.properties={}] Translate properties to Polygon\n * @param {string|number} [options.id={}] Translate Id to Polygon\n * @returns {Feature<Polygon>} a Polygon representation of the bounding box\n * @example\n * var bbox = [0, 0, 10, 10];\n *\n * var poly = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [poly]\n */\nfunction bboxPolygon(bbox, options) {\n    if (options === void 0) { options = {}; }\n    // Convert BBox positions to Numbers\n    // No performance loss for including Number()\n    // https://github.com/Turfjs/turf/issues/1119\n    var west = Number(bbox[0]);\n    var south = Number(bbox[1]);\n    var east = Number(bbox[2]);\n    var north = Number(bbox[3]);\n    if (bbox.length === 6) {\n        throw new Error(\"@turf/bbox-polygon does not support BBox with 6 positions\");\n    }\n    var lowLeft = [west, south];\n    var topLeft = [west, north];\n    var topRight = [east, north];\n    var lowRight = [east, south];\n    return helpers_1.polygon([[lowLeft, lowRight, topRight, topLeft, lowLeft]], options.properties, { bbox: bbox, id: options.id });\n}\nexports.default = bboxPolygon;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = require(\"@turf/helpers\");\nvar invariant_1 = require(\"@turf/invariant\");\n/**\n * Converts a {@link Polygon} to {@link LineString|(Multi)LineString} or {@link MultiPolygon} to a\n * {@link FeatureCollection} of {@link LineString|(Multi)LineString}.\n *\n * @name polygonToLine\n * @param {Feature<Polygon|MultiPolygon>} poly Feature to convert\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] translates GeoJSON properties to Feature\n * @returns {FeatureCollection|Feature<LineString|MultiLinestring>} converted (Multi)Polygon to (Multi)LineString\n * @example\n * var poly = turf.polygon([[[125, -30], [145, -30], [145, -20], [125, -20], [125, -30]]]);\n *\n * var line = turf.polygonToLine(poly);\n *\n * //addToMap\n * var addToMap = [line];\n */\nfunction default_1(poly, options) {\n    if (options === void 0) { options = {}; }\n    var geom = invariant_1.getGeom(poly);\n    if (!options.properties && poly.type === \"Feature\") {\n        options.properties = poly.properties;\n    }\n    switch (geom.type) {\n        case \"Polygon\":\n            return polygonToLine(geom, options);\n        case \"MultiPolygon\":\n            return multiPolygonToLine(geom, options);\n        default:\n            throw new Error(\"invalid poly\");\n    }\n}\nexports.default = default_1;\n/**\n * @private\n */\nfunction polygonToLine(poly, options) {\n    if (options === void 0) { options = {}; }\n    var geom = invariant_1.getGeom(poly);\n    var coords = geom.coordinates;\n    var properties = options.properties\n        ? options.properties\n        : poly.type === \"Feature\"\n            ? poly.properties\n            : {};\n    return coordsToLine(coords, properties);\n}\nexports.polygonToLine = polygonToLine;\n/**\n * @private\n */\nfunction multiPolygonToLine(multiPoly, options) {\n    if (options === void 0) { options = {}; }\n    var geom = invariant_1.getGeom(multiPoly);\n    var coords = geom.coordinates;\n    var properties = options.properties\n        ? options.properties\n        : multiPoly.type === \"Feature\"\n            ? multiPoly.properties\n            : {};\n    var lines = [];\n    coords.forEach(function (coord) {\n        lines.push(coordsToLine(coord, properties));\n    });\n    return helpers_1.featureCollection(lines);\n}\nexports.multiPolygonToLine = multiPolygonToLine;\n/**\n * @private\n */\nfunction coordsToLine(coords, properties) {\n    if (coords.length > 1) {\n        return helpers_1.multiLineString(coords, properties);\n    }\n    return helpers_1.lineString(coords[0], properties);\n}\nexports.coordsToLine = coordsToLine;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// https://en.wikipedia.org/wiki/Rhumb_line\nvar helpers_1 = require(\"@turf/helpers\");\nvar invariant_1 = require(\"@turf/invariant\");\n/**\n * Takes two {@link Point|points} and finds the bearing angle between them along a Rhumb line\n * i.e. the angle measured in degrees start the north line (0 degrees)\n *\n * @name rhumbBearing\n * @param {Coord} start starting Point\n * @param {Coord} end ending Point\n * @param {Object} [options] Optional parameters\n * @param {boolean} [options.final=false] calculates the final bearing if true\n * @returns {number} bearing from north in decimal degrees, between -180 and 180 degrees (positive clockwise)\n * @example\n * var point1 = turf.point([-75.343, 39.984], {\"marker-color\": \"#F00\"});\n * var point2 = turf.point([-75.534, 39.123], {\"marker-color\": \"#00F\"});\n *\n * var bearing = turf.rhumbBearing(point1, point2);\n *\n * //addToMap\n * var addToMap = [point1, point2];\n * point1.properties.bearing = bearing;\n * point2.properties.bearing = bearing;\n */\nfunction rhumbBearing(start, end, options) {\n    if (options === void 0) { options = {}; }\n    var bear360;\n    if (options.final) {\n        bear360 = calculateRhumbBearing(invariant_1.getCoord(end), invariant_1.getCoord(start));\n    }\n    else {\n        bear360 = calculateRhumbBearing(invariant_1.getCoord(start), invariant_1.getCoord(end));\n    }\n    var bear180 = bear360 > 180 ? -(360 - bear360) : bear360;\n    return bear180;\n}\n/**\n * Returns the bearing from ‘this’ point to destination point along a rhumb line.\n * Adapted from Geodesy: https://github.com/chrisveness/geodesy/blob/master/latlon-spherical.js\n *\n * @private\n * @param   {Array<number>} from - origin point.\n * @param   {Array<number>} to - destination point.\n * @returns {number} Bearing in degrees from north.\n * @example\n * var p1 = new LatLon(51.127, 1.338);\n * var p2 = new LatLon(50.964, 1.853);\n * var d = p1.rhumbBearingTo(p2); // 116.7 m\n */\nfunction calculateRhumbBearing(from, to) {\n    // φ => phi\n    // Δλ => deltaLambda\n    // Δψ => deltaPsi\n    // θ => theta\n    var phi1 = helpers_1.degreesToRadians(from[1]);\n    var phi2 = helpers_1.degreesToRadians(to[1]);\n    var deltaLambda = helpers_1.degreesToRadians(to[0] - from[0]);\n    // if deltaLambdaon over 180° take shorter rhumb line across the anti-meridian:\n    if (deltaLambda > Math.PI) {\n        deltaLambda -= 2 * Math.PI;\n    }\n    if (deltaLambda < -Math.PI) {\n        deltaLambda += 2 * Math.PI;\n    }\n    var deltaPsi = Math.log(Math.tan(phi2 / 2 + Math.PI / 4) / Math.tan(phi1 / 2 + Math.PI / 4));\n    var theta = Math.atan2(deltaLambda, deltaPsi);\n    return (helpers_1.radiansToDegrees(theta) + 360) % 360;\n}\nexports.default = rhumbBearing;\n", "'use strict';\n\nvar clone = require('@turf/clone');\nvar center = require('@turf/center');\nvar centroid = require('@turf/centroid');\nvar turfBBox = require('@turf/bbox');\nvar rhumbBearing = require('@turf/rhumb-bearing');\nvar rhumbDistance = require('@turf/rhumb-distance');\nvar rhumbDestination = require('@turf/rhumb-destination');\nvar meta = require('@turf/meta');\nvar helpers = require('@turf/helpers');\nvar invariant = require('@turf/invariant');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar clone__default = /*#__PURE__*/_interopDefaultLegacy(clone);\nvar center__default = /*#__PURE__*/_interopDefaultLegacy(center);\nvar centroid__default = /*#__PURE__*/_interopDefaultLegacy(centroid);\nvar turfBBox__default = /*#__PURE__*/_interopDefaultLegacy(turfBBox);\nvar rhumbBearing__default = /*#__PURE__*/_interopDefaultLegacy(rhumbBearing);\nvar rhumbDistance__default = /*#__PURE__*/_interopDefaultLegacy(rhumbDistance);\nvar rhumbDestination__default = /*#__PURE__*/_interopDefaultLegacy(rhumbDestination);\n\n/**\n * Scale a GeoJSON from a given point by a factor of scaling (ex: factor=2 would make the GeoJSON 200% larger).\n * If a FeatureCollection is provided, the origin point will be calculated based on each individual Feature.\n *\n * @name transformScale\n * @param {GeoJSON} geojson GeoJSON to be scaled\n * @param {number} factor of scaling, positive or negative values greater than 0\n * @param {Object} [options={}] Optional parameters\n * @param {string|Coord} [options.origin='centroid'] Point from which the scaling will occur (string options: sw/se/nw/ne/center/centroid)\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} scaled GeoJSON\n * @example\n * var poly = turf.polygon([[[0,29],[3.5,29],[2.5,32],[0,29]]]);\n * var scaledPoly = turf.transformScale(poly, 3);\n *\n * //addToMap\n * var addToMap = [poly, scaledPoly];\n * scaledPoly.properties = {stroke: '#F00', 'stroke-width': 4};\n */\nfunction transformScale(geojson, factor, options) {\n  // Optional parameters\n  options = options || {};\n  if (!helpers.isObject(options)) throw new Error(\"options is invalid\");\n  var origin = options.origin;\n  var mutate = options.mutate;\n\n  // Input validation\n  if (!geojson) throw new Error(\"geojson required\");\n  if (typeof factor !== \"number\" || factor === 0)\n    throw new Error(\"invalid factor\");\n  var originIsPoint = Array.isArray(origin) || typeof origin === \"object\";\n\n  // Clone geojson to avoid side effects\n  if (mutate !== true) geojson = clone__default['default'](geojson);\n\n  // Scale each Feature separately\n  if (geojson.type === \"FeatureCollection\" && !originIsPoint) {\n    meta.featureEach(geojson, function (feature, index) {\n      geojson.features[index] = scale(feature, factor, origin);\n    });\n    return geojson;\n  }\n  // Scale Feature/Geometry\n  return scale(geojson, factor, origin);\n}\n\n/**\n * Scale Feature/Geometry\n *\n * @private\n * @param {Feature|Geometry} feature GeoJSON Feature/Geometry\n * @param {number} factor of scaling, positive or negative values greater than 0\n * @param {string|Coord} [origin=\"centroid\"] Point from which the scaling will occur (string options: sw/se/nw/ne/center/centroid)\n * @returns {Feature|Geometry} scaled GeoJSON Feature/Geometry\n */\nfunction scale(feature, factor, origin) {\n  // Default params\n  var isPoint = invariant.getType(feature) === \"Point\";\n  origin = defineOrigin(feature, origin);\n\n  // Shortcut no-scaling\n  if (factor === 1 || isPoint) return feature;\n\n  // Scale each coordinate\n  meta.coordEach(feature, function (coord) {\n    var originalDistance = rhumbDistance__default['default'](origin, coord);\n    var bearing = rhumbBearing__default['default'](origin, coord);\n    var newDistance = originalDistance * factor;\n    var newCoord = invariant.getCoords(rhumbDestination__default['default'](origin, newDistance, bearing));\n    coord[0] = newCoord[0];\n    coord[1] = newCoord[1];\n    if (coord.length === 3) coord[2] *= factor;\n  });\n\n  return feature;\n}\n\n/**\n * Define Origin\n *\n * @private\n * @param {GeoJSON} geojson GeoJSON\n * @param {string|Coord} origin sw/se/nw/ne/center/centroid\n * @returns {Feature<Point>} Point origin\n */\nfunction defineOrigin(geojson, origin) {\n  // Default params\n  if (origin === undefined || origin === null) origin = \"centroid\";\n\n  // Input Coord\n  if (Array.isArray(origin) || typeof origin === \"object\")\n    return invariant.getCoord(origin);\n\n  // Define BBox\n  var bbox = geojson.bbox ? geojson.bbox : turfBBox__default['default'](geojson);\n  var west = bbox[0];\n  var south = bbox[1];\n  var east = bbox[2];\n  var north = bbox[3];\n\n  switch (origin) {\n    case \"sw\":\n    case \"southwest\":\n    case \"westsouth\":\n    case \"bottomleft\":\n      return helpers.point([west, south]);\n    case \"se\":\n    case \"southeast\":\n    case \"eastsouth\":\n    case \"bottomright\":\n      return helpers.point([east, south]);\n    case \"nw\":\n    case \"northwest\":\n    case \"westnorth\":\n    case \"topleft\":\n      return helpers.point([west, north]);\n    case \"ne\":\n    case \"northeast\":\n    case \"eastnorth\":\n    case \"topright\":\n      return helpers.point([east, north]);\n    case \"center\":\n      return center__default['default'](geojson);\n    case undefined:\n    case null:\n    case \"centroid\":\n      return centroid__default['default'](geojson);\n    default:\n      throw new Error(\"invalid origin\");\n  }\n}\n\nmodule.exports = transformScale;\nmodule.exports.default = transformScale;\n", "/* eslint-disable prettier/prettier */\nimport bbox from '@turf/bbox';\nimport turfCentroid from '@turf/centroid';\nimport turfBearing from '@turf/bearing';\nimport bboxPolygon from '@turf/bbox-polygon';\nimport { point, featureCollection } from '@turf/helpers';\nimport polygonToLine from '@turf/polygon-to-line';\nimport { coordEach } from '@turf/meta';\nimport turfDistance from '@turf/distance';\nimport turfTransformScale from '@turf/transform-scale';\nimport { getCoord, getGeom } from '@turf/invariant';\nimport { FeatureCollection, Position } from '../geojson-types';\nimport {\n  ModeProps,\n  PointerMoveEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  DraggingEvent,\n  EditHandleFeature,\n  GuideFeatureCollection,\n} from '../types';\nimport { getPickedEditHandle } from '../utils';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\nimport { ImmutableFeatureCollection } from './immutable-feature-collection';\n\nexport class ScaleMode extends GeoJsonEditMode {\n  _geometryBeingScaled: FeatureCollection | null | undefined;\n  _selectedEditHandle: EditHandleFeature | null | undefined;\n  _cornerGuidePoints: Array<EditHandleFeature>;\n  _cursor: string | null | undefined;\n  _isScaling = false;\n\n  _isSinglePointGeometrySelected = (geometry: FeatureCollection | null | undefined): boolean => {\n    const { features } = geometry || {};\n    if (Array.isArray(features) && features.length === 1) {\n      // @ts-ignore\n      const { type } = getGeom(features[0]);\n      return type === 'Point';\n    }\n    return false;\n  };\n\n  _getOppositeScaleHandle = (selectedHandle: EditHandleFeature) => {\n    const selectedHandleIndex =\n      selectedHandle &&\n      selectedHandle.properties &&\n      Array.isArray(selectedHandle.properties.positionIndexes) &&\n      selectedHandle.properties.positionIndexes[0];\n\n    if (typeof selectedHandleIndex !== 'number') {\n      return null;\n    }\n    const guidePointCount = this._cornerGuidePoints.length;\n    const oppositeIndex = (selectedHandleIndex + guidePointCount / 2) % guidePointCount;\n    return this._cornerGuidePoints.find((p) => {\n      if (!Array.isArray(p.properties.positionIndexes)) {\n        return false;\n      }\n      return p.properties.positionIndexes[0] === oppositeIndex;\n    });\n  };\n\n  _getUpdatedData = (props: ModeProps<FeatureCollection>, editedData: FeatureCollection) => {\n    let updatedData = new ImmutableFeatureCollection(props.data);\n    const selectedIndexes = props.selectedIndexes;\n    for (let i = 0; i < selectedIndexes.length; i++) {\n      const selectedIndex = selectedIndexes[i];\n      const movedFeature = editedData.features[i];\n      updatedData = updatedData.replaceGeometry(selectedIndex, movedFeature.geometry);\n    }\n    return updatedData.getObject();\n  };\n\n  isEditHandleSelected = (): boolean => Boolean(this._selectedEditHandle);\n\n  getScaleAction = (\n    startDragPoint: Position,\n    currentPoint: Position,\n    editType: string,\n    props: ModeProps<FeatureCollection>\n  ) => {\n    if (!this._selectedEditHandle) {\n      return null;\n    }\n\n    const oppositeHandle = this._getOppositeScaleHandle(this._selectedEditHandle);\n    const origin = getCoord(oppositeHandle);\n    // @ts-ignore\n    const scaleFactor = getScaleFactor(origin, startDragPoint, currentPoint);\n    // @ts-ignore\n    const scaledFeatures: FeatureCollection = turfTransformScale(\n      // @ts-ignore\n      this._geometryBeingScaled,\n      scaleFactor,\n      { origin }\n    );\n\n    return {\n      updatedData: this._getUpdatedData(props, scaledFeatures),\n      editType,\n      editContext: {\n        featureIndexes: props.selectedIndexes,\n      },\n    };\n  };\n\n  updateCursor = (props: ModeProps<FeatureCollection>) => {\n    if (this._selectedEditHandle) {\n      if (this._cursor) {\n        props.onUpdateCursor(this._cursor);\n      }\n      const cursorGeometry = this.getSelectedFeaturesAsFeatureCollection(props);\n\n      // Get resize cursor direction from the hovered scale editHandle (e.g. nesw or nwse)\n      const centroid = turfCentroid(cursorGeometry);\n      const bearing = turfBearing(centroid, this._selectedEditHandle);\n      const positiveBearing = bearing < 0 ? bearing + 180 : bearing;\n      if (\n        (positiveBearing >= 0 && positiveBearing <= 90) ||\n        (positiveBearing >= 180 && positiveBearing <= 270)\n      ) {\n        this._cursor = 'nesw-resize';\n        props.onUpdateCursor('nesw-resize');\n      } else {\n        this._cursor = 'nwse-resize';\n        props.onUpdateCursor('nwse-resize');\n      }\n    } else {\n      props.onUpdateCursor(null);\n      this._cursor = null;\n    }\n  };\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    if (!this._isScaling) {\n      const selectedEditHandle = getPickedEditHandle(event.picks);\n      this._selectedEditHandle =\n        selectedEditHandle && selectedEditHandle.properties.editHandleType === 'scale'\n          ? selectedEditHandle\n          : null;\n\n      this.updateCursor(props);\n    }\n  }\n\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (this._selectedEditHandle) {\n      this._isScaling = true;\n      this._geometryBeingScaled = this.getSelectedFeaturesAsFeatureCollection(props);\n    }\n  }\n\n  handleDragging(event: DraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (!this._isScaling) {\n      return;\n    }\n\n    props.onUpdateCursor(this._cursor);\n\n    const scaleAction = this.getScaleAction(\n      event.pointerDownMapCoords,\n      event.mapCoords,\n      'scaling',\n      props\n    );\n    if (scaleAction) {\n      props.onEdit(scaleAction);\n    }\n\n    event.cancelPan();\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (this._isScaling) {\n      // Scale the geometry\n      const scaleAction = this.getScaleAction(\n        event.pointerDownMapCoords,\n        event.mapCoords,\n        'scaled',\n        props\n      );\n      if (scaleAction) {\n        props.onEdit(scaleAction);\n      }\n\n      props.onUpdateCursor(null);\n\n      this._geometryBeingScaled = null;\n      this._selectedEditHandle = null;\n      this._cursor = null;\n      this._isScaling = false;\n    }\n  }\n\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    this._cornerGuidePoints = [];\n    const selectedGeometry = this.getSelectedFeaturesAsFeatureCollection(props);\n\n    // Add buffer to the enveloping box if a single Point feature is selected\n    if (this._isSinglePointGeometrySelected(selectedGeometry)) {\n      return { type: 'FeatureCollection', features: [] };\n    }\n\n    const boundingBox = bboxPolygon(bbox(selectedGeometry));\n    boundingBox.properties.mode = 'scale';\n    const cornerGuidePoints = [];\n\n    coordEach(boundingBox, (coord, coordIndex) => {\n      if (coordIndex < 4) {\n        // Get corner midpoint guides from the enveloping box\n        const cornerPoint = point(coord, {\n          guideType: 'editHandle',\n          editHandleType: 'scale',\n          positionIndexes: [coordIndex],\n        });\n        cornerGuidePoints.push(cornerPoint);\n      }\n    });\n\n    this._cornerGuidePoints = cornerGuidePoints;\n    // @ts-ignore\n    return featureCollection([polygonToLine(boundingBox), ...this._cornerGuidePoints]);\n  }\n}\n\nfunction getScaleFactor(centroid: Position, startDragPoint: Position, currentPoint: Position) {\n  const startDistance = turfDistance(centroid, startDragPoint);\n  const endDistance = turfDistance(centroid, currentPoint);\n  return endDistance / startDistance;\n}\n", "'use strict';\n\nvar centroid = require('@turf/centroid');\nvar rhumbBearing = require('@turf/rhumb-bearing');\nvar rhumbDistance = require('@turf/rhumb-distance');\nvar rhumbDestination = require('@turf/rhumb-destination');\nvar clone = require('@turf/clone');\nvar meta = require('@turf/meta');\nvar invariant = require('@turf/invariant');\nvar helpers = require('@turf/helpers');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar centroid__default = /*#__PURE__*/_interopDefaultLegacy(centroid);\nvar rhumbBearing__default = /*#__PURE__*/_interopDefaultLegacy(rhumbBearing);\nvar rhumbDistance__default = /*#__PURE__*/_interopDefaultLegacy(rhumbDistance);\nvar rhumbDestination__default = /*#__PURE__*/_interopDefaultLegacy(rhumbDestination);\nvar clone__default = /*#__PURE__*/_interopDefaultLegacy(clone);\n\n/**\n * Rotates any geojson Feature or Geometry of a specified angle, around its `centroid` or a given `pivot` point.\n *\n * @name transformRotate\n * @param {GeoJSON} geojson object to be rotated\n * @param {number} angle of rotation in decimal degrees, positive clockwise\n * @param {Object} [options={}] Optional parameters\n * @param {Coord} [options.pivot='centroid'] point around which the rotation will be performed\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} the rotated GeoJSON feature\n * @example\n * var poly = turf.polygon([[[0,29],[3.5,29],[2.5,32],[0,29]]]);\n * var options = {pivot: [0, 25]};\n * var rotatedPoly = turf.transformRotate(poly, 10, options);\n *\n * //addToMap\n * var addToMap = [poly, rotatedPoly];\n * rotatedPoly.properties = {stroke: '#F00', 'stroke-width': 4};\n */\nfunction transformRotate(geojson, angle, options) {\n  // Optional parameters\n  options = options || {};\n  if (!helpers.isObject(options)) throw new Error(\"options is invalid\");\n  var pivot = options.pivot;\n  var mutate = options.mutate;\n\n  // Input validation\n  if (!geojson) throw new Error(\"geojson is required\");\n  if (angle === undefined || angle === null || isNaN(angle))\n    throw new Error(\"angle is required\");\n\n  // Shortcut no-rotation\n  if (angle === 0) return geojson;\n\n  // Use centroid of GeoJSON if pivot is not provided\n  if (!pivot) pivot = centroid__default['default'](geojson);\n\n  // Clone geojson to avoid side effects\n  if (mutate === false || mutate === undefined) geojson = clone__default['default'](geojson);\n\n  // Rotate each coordinate\n  meta.coordEach(geojson, function (pointCoords) {\n    var initialAngle = rhumbBearing__default['default'](pivot, pointCoords);\n    var finalAngle = initialAngle + angle;\n    var distance = rhumbDistance__default['default'](pivot, pointCoords);\n    var newCoords = invariant.getCoords(rhumbDestination__default['default'](pivot, distance, finalAngle));\n    pointCoords[0] = newCoords[0];\n    pointCoords[1] = newCoords[1];\n  });\n  return geojson;\n}\n\nmodule.exports = transformRotate;\nmodule.exports.default = transformRotate;\n", "/* eslint-disable prettier/prettier */\nimport bbox from '@turf/bbox';\nimport turfCentroid from '@turf/centroid';\nimport turfBearing from '@turf/bearing';\nimport bboxPolygon from '@turf/bbox-polygon';\nimport turfDistance from '@turf/distance';\nimport { coordEach } from '@turf/meta';\nimport { getGeom } from '@turf/invariant';\nimport { point, featureCollection, lineString } from '@turf/helpers';\nimport turfTransformRotate from '@turf/transform-rotate';\nimport polygonToLine from '@turf/polygon-to-line';\nimport {\n  PointerMoveEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  DraggingEvent,\n  ModeProps,\n  EditHandleFeature,\n  GuideFeatureCollection,\n} from '../types';\nimport { getPickedEditHandle } from '../utils';\nimport { FeatureCollection, Position } from '../geojson-types';\nimport { GeoJsonEditMode, GeoJsonEditAction, getIntermediatePosition } from './geojson-edit-mode';\nimport { ImmutableFeatureCollection } from './immutable-feature-collection';\n\nexport class RotateMode extends GeoJsonEditMode {\n  _selectedEditHandle: EditHandleFeature | null | undefined;\n  _geometryBeingRotated: FeatureCollection | null | undefined;\n  _isRotating = false;\n\n  _isSinglePointGeometrySelected = (geometry: FeatureCollection | null | undefined): boolean => {\n    const { features } = geometry || {};\n    if (Array.isArray(features) && features.length === 1) {\n      // @ts-ignore\n      const { type } = getGeom(features[0]);\n      return type === 'Point';\n    }\n    return false;\n  };\n\n  getIsRotating = () => this._isRotating;\n\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const selectedGeometry =\n      this._geometryBeingRotated || this.getSelectedFeaturesAsFeatureCollection(props);\n\n    if (this._isSinglePointGeometrySelected(selectedGeometry)) {\n      return { type: 'FeatureCollection', features: [] };\n    }\n\n    if (this._isRotating) {\n      // Display rotate pivot\n      return featureCollection([turfCentroid(selectedGeometry)]) as GuideFeatureCollection;\n    }\n\n    const boundingBox = bboxPolygon(bbox(selectedGeometry));\n\n    let previousCoord = null;\n    let topEdgeMidpointCoords = null;\n    let longestEdgeLength = 0;\n\n    coordEach(boundingBox, (coord) => {\n      if (previousCoord) {\n        // @ts-ignore\n        const edgeMidpoint = getIntermediatePosition(coord, previousCoord);\n        if (!topEdgeMidpointCoords || edgeMidpoint[1] > topEdgeMidpointCoords[1]) {\n          // Get the top edge midpoint of the enveloping box\n          topEdgeMidpointCoords = edgeMidpoint;\n        }\n        // Get the length of the longest edge of the enveloping box\n        const edgeDistance = turfDistance(coord, previousCoord);\n        longestEdgeLength = Math.max(longestEdgeLength, edgeDistance);\n      }\n      previousCoord = coord;\n    });\n\n    // Scale the length of the line between the rotate handler and the enveloping box\n    // relative to the length of the longest edge of the enveloping box\n    const rotateHandleCoords = topEdgeMidpointCoords && [\n      topEdgeMidpointCoords[0],\n      topEdgeMidpointCoords[1] + longestEdgeLength / 1000,\n    ];\n\n    const lineFromEnvelopeToRotateHandle = lineString([topEdgeMidpointCoords, rotateHandleCoords]);\n    const rotateHandle = point(rotateHandleCoords, {\n      guideType: 'editHandle',\n      editHandleType: 'rotate',\n    });\n    // @ts-ignore\n    return featureCollection([\n      // @ts-ignore\n      polygonToLine(boundingBox),\n      // @ts-ignore\n      rotateHandle,\n      // @ts-ignore\n      lineFromEnvelopeToRotateHandle,\n    ]);\n  }\n\n  handleDragging(event: DraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (!this._isRotating) {\n      return;\n    }\n\n    const rotateAction = this.getRotateAction(\n      event.pointerDownMapCoords,\n      event.mapCoords,\n      'rotating',\n      props\n    );\n    if (rotateAction) {\n      props.onEdit(rotateAction);\n    }\n\n    event.cancelPan();\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    if (!this._isRotating) {\n      const selectedEditHandle = getPickedEditHandle(event.picks);\n      this._selectedEditHandle =\n        selectedEditHandle && selectedEditHandle.properties.editHandleType === 'rotate'\n          ? selectedEditHandle\n          : null;\n    }\n\n    this.updateCursor(props);\n  }\n\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (this._selectedEditHandle) {\n      this._isRotating = true;\n      this._geometryBeingRotated = this.getSelectedFeaturesAsFeatureCollection(props);\n    }\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (this._isRotating) {\n      // Rotate the geometry\n      const rotateAction = this.getRotateAction(\n        event.pointerDownMapCoords,\n        event.mapCoords,\n        'rotated',\n        props\n      );\n\n      if (rotateAction) {\n        props.onEdit(rotateAction);\n      }\n\n      this._geometryBeingRotated = null;\n      this._selectedEditHandle = null;\n      this._isRotating = false;\n    }\n  }\n\n  updateCursor(props: ModeProps<FeatureCollection>) {\n    if (this._selectedEditHandle) {\n      // TODO: look at doing SVG cursors to get a better \"rotate\" cursor\n      props.onUpdateCursor('crosshair');\n    } else {\n      props.onUpdateCursor(null);\n    }\n  }\n\n  getRotateAction(\n    startDragPoint: Position,\n    currentPoint: Position,\n    editType: string,\n    props: ModeProps<FeatureCollection>\n  ): GeoJsonEditAction | null | undefined {\n    if (!this._geometryBeingRotated) {\n      return null;\n    }\n\n    const centroid = turfCentroid(this._geometryBeingRotated);\n    const angle = getRotationAngle(centroid, startDragPoint, currentPoint);\n    // @ts-ignore\n    const rotatedFeatures: FeatureCollection = turfTransformRotate(\n      // @ts-ignore\n      this._geometryBeingRotated,\n      angle,\n      {\n        pivot: centroid,\n      }\n    );\n\n    let updatedData = new ImmutableFeatureCollection(props.data);\n\n    const selectedIndexes = props.selectedIndexes;\n    for (let i = 0; i < selectedIndexes.length; i++) {\n      const selectedIndex = selectedIndexes[i];\n      const movedFeature = rotatedFeatures.features[i];\n      updatedData = updatedData.replaceGeometry(selectedIndex, movedFeature.geometry);\n    }\n\n    return {\n      updatedData: updatedData.getObject(),\n      editType,\n      editContext: {\n        featureIndexes: selectedIndexes,\n      },\n    };\n  }\n}\n\nfunction getRotationAngle(centroid: Position, startDragPoint: Position, currentPoint: Position) {\n  const bearing1 = turfBearing(centroid, startDragPoint);\n  const bearing2 = turfBearing(centroid, currentPoint);\n  return bearing2 - bearing1;\n}\n", "import { StartDraggingEvent, ModeProps } from '../types';\nimport { FeatureCollection } from '../geojson-types';\nimport { TranslateMode } from './translate-mode';\n\nexport class DuplicateMode extends TranslateMode {\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>) {\n    super.handleStartDragging(event, props);\n\n    if (this._geometryBeforeTranslate) {\n      props.onEdit(this.getAddManyFeaturesAction(this._geometryBeforeTranslate, props.data));\n    }\n  }\n\n  updateCursor(props: ModeProps<FeatureCollection>) {\n    if (this._isTranslatable) {\n      props.onUpdateCursor('copy');\n    } else {\n      props.onUpdateCursor(null);\n    }\n  }\n}\n", "import { Position, LineString, FeatureCollection } from '../geojson-types';\nimport { ClickEvent, PointerMoveEvent, ModeProps, GuideFeatureCollection } from '../types';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\nimport { ImmutableFeatureCollection } from './immutable-feature-collection';\n\nexport class ExtendLineStringMode extends GeoJsonEditMode {\n  getSingleSelectedLineString(props: ModeProps<FeatureCollection>): LineString | null | undefined {\n    const selectedGeometry = this.getSelectedGeometry(props);\n\n    if (selectedGeometry && selectedGeometry.type === 'LineString') {\n      return selectedGeometry;\n    }\n    return null;\n  }\n\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>) {\n    const { selectedIndexes } = props;\n    const selectedLineString = this.getSingleSelectedLineString(props);\n\n    if (!selectedLineString) {\n      console.warn(`ExtendLineStringMode only supported for single LineString selection`); // eslint-disable-line\n      return;\n    }\n\n    // Extend the LineString\n    let positionIndexes = [selectedLineString.coordinates.length];\n\n    const modeConfig = props.modeConfig;\n    if (modeConfig && modeConfig.drawAtFront) {\n      positionIndexes = [0];\n    }\n    const featureIndex = selectedIndexes[0];\n    const updatedData = new ImmutableFeatureCollection(props.data)\n      .addPosition(featureIndex, positionIndexes, event.mapCoords)\n      .getObject();\n\n    props.onEdit({\n      updatedData,\n      editType: 'addPosition',\n      editContext: {\n        featureIndexes: [featureIndex],\n        positionIndexes,\n        position: event.mapCoords,\n      },\n    });\n  }\n\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const guides = {\n      type: 'FeatureCollection',\n      features: [],\n    };\n\n    const selectedLineString = this.getSingleSelectedLineString(props);\n    if (!selectedLineString) {\n      // nothing to do\n      // @ts-ignore\n      return guides;\n    }\n\n    const mapCoords = props.lastPointerMoveEvent && props.lastPointerMoveEvent.mapCoords;\n\n    // Draw an extension line starting from one end of the selected LineString to the cursor\n    let startPosition: Position | null | undefined = null;\n    const { modeConfig } = props;\n    if (modeConfig && modeConfig.drawAtFront) {\n      startPosition = selectedLineString.coordinates[0];\n    } else {\n      startPosition = selectedLineString.coordinates[selectedLineString.coordinates.length - 1];\n    }\n\n    guides.features.push({\n      type: 'Feature',\n      properties: {\n        guideType: 'tentative',\n      },\n      geometry: {\n        type: 'LineString',\n        coordinates: [startPosition, mapCoords],\n      },\n    });\n    // @ts-ignore\n    return guides;\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    props.onUpdateCursor('cell');\n  }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar invariant_1 = require(\"@turf/invariant\");\n// http://en.wikipedia.org/wiki/Even%E2%80%93odd_rule\n// modified from: https://github.com/substack/point-in-polygon/blob/master/index.js\n// which was modified from http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n/**\n * Takes a {@link Point} and a {@link Polygon} or {@link MultiPolygon} and determines if the point\n * resides inside the polygon. The polygon can be convex or concave. The function accounts for holes.\n *\n * @name booleanPointInPolygon\n * @param {Coord} point input point\n * @param {Feature<Polygon|MultiPolygon>} polygon input polygon or multipolygon\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.ignoreBoundary=false] True if polygon boundary should be ignored when determining if\n * the point is inside the polygon otherwise false.\n * @returns {boolean} `true` if the Point is inside the Polygon; `false` if the Point is not inside the Polygon\n * @example\n * var pt = turf.point([-77, 44]);\n * var poly = turf.polygon([[\n *   [-81, 41],\n *   [-81, 47],\n *   [-72, 47],\n *   [-72, 41],\n *   [-81, 41]\n * ]]);\n *\n * turf.booleanPointInPolygon(pt, poly);\n * //= true\n */\nfunction booleanPointInPolygon(point, polygon, options) {\n    if (options === void 0) { options = {}; }\n    // validation\n    if (!point) {\n        throw new Error(\"point is required\");\n    }\n    if (!polygon) {\n        throw new Error(\"polygon is required\");\n    }\n    var pt = invariant_1.getCoord(point);\n    var geom = invariant_1.getGeom(polygon);\n    var type = geom.type;\n    var bbox = polygon.bbox;\n    var polys = geom.coordinates;\n    // Quick elimination if point is not inside bbox\n    if (bbox && inBBox(pt, bbox) === false) {\n        return false;\n    }\n    // normalize to multipolygon\n    if (type === \"Polygon\") {\n        polys = [polys];\n    }\n    var insidePoly = false;\n    for (var i = 0; i < polys.length && !insidePoly; i++) {\n        // check if it is in the outer ring first\n        if (inRing(pt, polys[i][0], options.ignoreBoundary)) {\n            var inHole = false;\n            var k = 1;\n            // check for the point in any of the holes\n            while (k < polys[i].length && !inHole) {\n                if (inRing(pt, polys[i][k], !options.ignoreBoundary)) {\n                    inHole = true;\n                }\n                k++;\n            }\n            if (!inHole) {\n                insidePoly = true;\n            }\n        }\n    }\n    return insidePoly;\n}\nexports.default = booleanPointInPolygon;\n/**\n * inRing\n *\n * @private\n * @param {Array<number>} pt [x,y]\n * @param {Array<Array<number>>} ring [[x,y], [x,y],..]\n * @param {boolean} ignoreBoundary ignoreBoundary\n * @returns {boolean} inRing\n */\nfunction inRing(pt, ring, ignoreBoundary) {\n    var isInside = false;\n    if (ring[0][0] === ring[ring.length - 1][0] &&\n        ring[0][1] === ring[ring.length - 1][1]) {\n        ring = ring.slice(0, ring.length - 1);\n    }\n    for (var i = 0, j = ring.length - 1; i < ring.length; j = i++) {\n        var xi = ring[i][0];\n        var yi = ring[i][1];\n        var xj = ring[j][0];\n        var yj = ring[j][1];\n        var onBoundary = pt[1] * (xi - xj) + yi * (xj - pt[0]) + yj * (pt[0] - xi) === 0 &&\n            (xi - pt[0]) * (xj - pt[0]) <= 0 &&\n            (yi - pt[1]) * (yj - pt[1]) <= 0;\n        if (onBoundary) {\n            return !ignoreBoundary;\n        }\n        var intersect = yi > pt[1] !== yj > pt[1] &&\n            pt[0] < ((xj - xi) * (pt[1] - yi)) / (yj - yi) + xi;\n        if (intersect) {\n            isInside = !isInside;\n        }\n    }\n    return isInside;\n}\n/**\n * inBBox\n *\n * @private\n * @param {Position} pt point [x,y]\n * @param {BBox} bbox BBox [west, south, east, north]\n * @returns {boolean} true/false if point is inside BBox\n */\nfunction inBBox(pt, bbox) {\n    return (bbox[0] <= pt[0] && bbox[1] <= pt[1] && bbox[2] >= pt[0] && bbox[3] >= pt[1]);\n}\n", "!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?e(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],e):e(t.jsts={})}(this,function(t){\"use strict\";function e(){}function n(t){this.message=t||\"\"}function i(t){this.message=t||\"\"}function r(t){this.message=t||\"\"}function o(){}function s(t){return null===t?Mt:t.color}function a(t){return null===t?null:t.parent}function u(t,e){null!==t&&(t.color=e)}function l(t){return null===t?null:t.left}function c(t){return null===t?null:t.right}function p(){this.root_=null,this.size_=0}function h(){}function f(){this.array_=[],arguments[0]instanceof It&&this.addAll(arguments[0])}function g(){}function d(t){this.message=t||\"\"}function y(){this.array_=[]}\"fill\"in Array.prototype||Object.defineProperty(Array.prototype,\"fill\",{configurable:!0,value:function(t){if(void 0===this||null===this)throw new TypeError(this+\" is not an object\");var e=Object(this),n=Math.max(Math.min(e.length,9007199254740991),0)||0,i=1 in arguments?parseInt(Number(arguments[1]),10)||0:0;i=i<0?Math.max(n+i,0):Math.min(i,n);var r=2 in arguments&&void 0!==arguments[2]?parseInt(Number(arguments[2]),10)||0:n;for(r=r<0?Math.max(n+arguments[2],0):Math.min(r,n);i<r;)e[i]=t,++i;return e},writable:!0}),Number.isFinite=Number.isFinite||function(t){return\"number\"==typeof t&&isFinite(t)},Number.isInteger=Number.isInteger||function(t){return\"number\"==typeof t&&isFinite(t)&&Math.floor(t)===t},Number.parseFloat=Number.parseFloat||parseFloat,Number.isNaN=Number.isNaN||function(t){return t!=t},Math.trunc=Math.trunc||function(t){return t<0?Math.ceil(t):Math.floor(t)};var _=function(){};_.prototype.interfaces_=function(){return[]},_.prototype.getClass=function(){return _},_.prototype.equalsWithTolerance=function(t,e,n){return Math.abs(t-e)<=n};var m=function(t){function e(e){t.call(this,e),this.name=\"IllegalArgumentException\",this.message=e,this.stack=(new t).stack}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(Error),v=function(){},I={MAX_VALUE:{configurable:!0}};v.isNaN=function(t){return Number.isNaN(t)},v.doubleToLongBits=function(t){return t},v.longBitsToDouble=function(t){return t},v.isInfinite=function(t){return!Number.isFinite(t)},I.MAX_VALUE.get=function(){return Number.MAX_VALUE},Object.defineProperties(v,I);var E=function(){},x=function(){},N=function(){},C=function t(){if(this.x=null,this.y=null,this.z=null,0===arguments.length)this.x=0,this.y=0,this.z=t.NULL_ORDINATE;else if(1===arguments.length){var e=arguments[0];this.x=e.x,this.y=e.y,this.z=e.z}else 2===arguments.length?(this.x=arguments[0],this.y=arguments[1],this.z=t.NULL_ORDINATE):3===arguments.length&&(this.x=arguments[0],this.y=arguments[1],this.z=arguments[2])},S={DimensionalComparator:{configurable:!0},serialVersionUID:{configurable:!0},NULL_ORDINATE:{configurable:!0},X:{configurable:!0},Y:{configurable:!0},Z:{configurable:!0}};C.prototype.setOrdinate=function(t,e){switch(t){case C.X:this.x=e;break;case C.Y:this.y=e;break;case C.Z:this.z=e;break;default:throw new m(\"Invalid ordinate index: \"+t)}},C.prototype.equals2D=function(){if(1===arguments.length){var t=arguments[0];return this.x===t.x&&this.y===t.y}if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!_.equalsWithTolerance(this.x,e.x,n)&&!!_.equalsWithTolerance(this.y,e.y,n)}},C.prototype.getOrdinate=function(t){switch(t){case C.X:return this.x;case C.Y:return this.y;case C.Z:return this.z}throw new m(\"Invalid ordinate index: \"+t)},C.prototype.equals3D=function(t){return this.x===t.x&&this.y===t.y&&(this.z===t.z||v.isNaN(this.z))&&v.isNaN(t.z)},C.prototype.equals=function(t){return t instanceof C&&this.equals2D(t)},C.prototype.equalInZ=function(t,e){return _.equalsWithTolerance(this.z,t.z,e)},C.prototype.compareTo=function(t){var e=t;return this.x<e.x?-1:this.x>e.x?1:this.y<e.y?-1:this.y>e.y?1:0},C.prototype.clone=function(){},C.prototype.copy=function(){return new C(this)},C.prototype.toString=function(){return\"(\"+this.x+\", \"+this.y+\", \"+this.z+\")\"},C.prototype.distance3D=function(t){var e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return Math.sqrt(e*e+n*n+i*i)},C.prototype.distance=function(t){var e=this.x-t.x,n=this.y-t.y;return Math.sqrt(e*e+n*n)},C.prototype.hashCode=function(){var t=17;return t=37*t+C.hashCode(this.x),t=37*t+C.hashCode(this.y)},C.prototype.setCoordinate=function(t){this.x=t.x,this.y=t.y,this.z=t.z},C.prototype.interfaces_=function(){return[E,x,e]},C.prototype.getClass=function(){return C},C.hashCode=function(){if(1===arguments.length){var t=arguments[0],e=v.doubleToLongBits(t);return Math.trunc((e^e)>>>32)}},S.DimensionalComparator.get=function(){return L},S.serialVersionUID.get=function(){return 0x5cbf2c235c7e5800},S.NULL_ORDINATE.get=function(){return v.NaN},S.X.get=function(){return 0},S.Y.get=function(){return 1},S.Z.get=function(){return 2},Object.defineProperties(C,S);var L=function(t){if(this._dimensionsToTest=2,0===arguments.length);else if(1===arguments.length){var e=arguments[0];if(2!==e&&3!==e)throw new m(\"only 2 or 3 dimensions may be specified\");this._dimensionsToTest=e}};L.prototype.compare=function(t,e){var n=t,i=e,r=L.compare(n.x,i.x);if(0!==r)return r;var o=L.compare(n.y,i.y);if(0!==o)return o;if(this._dimensionsToTest<=2)return 0;return L.compare(n.z,i.z)},L.prototype.interfaces_=function(){return[N]},L.prototype.getClass=function(){return L},L.compare=function(t,e){return t<e?-1:t>e?1:v.isNaN(t)?v.isNaN(e)?0:-1:v.isNaN(e)?1:0};var b=function(){};b.prototype.create=function(){},b.prototype.interfaces_=function(){return[]},b.prototype.getClass=function(){return b};var w=function(){},O={INTERIOR:{configurable:!0},BOUNDARY:{configurable:!0},EXTERIOR:{configurable:!0},NONE:{configurable:!0}};w.prototype.interfaces_=function(){return[]},w.prototype.getClass=function(){return w},w.toLocationSymbol=function(t){switch(t){case w.EXTERIOR:return\"e\";case w.BOUNDARY:return\"b\";case w.INTERIOR:return\"i\";case w.NONE:return\"-\"}throw new m(\"Unknown location value: \"+t)},O.INTERIOR.get=function(){return 0},O.BOUNDARY.get=function(){return 1},O.EXTERIOR.get=function(){return 2},O.NONE.get=function(){return-1},Object.defineProperties(w,O);var T=function(t,e){return t.interfaces_&&t.interfaces_().indexOf(e)>-1},R=function(){},P={LOG_10:{configurable:!0}};R.prototype.interfaces_=function(){return[]},R.prototype.getClass=function(){return R},R.log10=function(t){var e=Math.log(t);return v.isInfinite(e)?e:v.isNaN(e)?e:e/R.LOG_10},R.min=function(t,e,n,i){var r=t;return e<r&&(r=e),n<r&&(r=n),i<r&&(r=i),r},R.clamp=function(){if(\"number\"==typeof arguments[2]&&\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1],n=arguments[2];return t<e?e:t>n?n:t}if(Number.isInteger(arguments[2])&&Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var i=arguments[0],r=arguments[1],o=arguments[2];return i<r?r:i>o?o:i}},R.wrap=function(t,e){return t<0?e- -t%e:t%e},R.max=function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=t;return e>i&&(i=e),n>i&&(i=n),i}if(4===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3],u=r;return o>u&&(u=o),s>u&&(u=s),a>u&&(u=a),u}},R.average=function(t,e){return(t+e)/2},P.LOG_10.get=function(){return Math.log(10)},Object.defineProperties(R,P);var D=function(t){this.str=t};D.prototype.append=function(t){this.str+=t},D.prototype.setCharAt=function(t,e){this.str=this.str.substr(0,t)+e+this.str.substr(t+1)},D.prototype.toString=function(t){return this.str};var M=function(t){this.value=t};M.prototype.intValue=function(){return this.value},M.prototype.compareTo=function(t){return this.value<t?-1:this.value>t?1:0},M.isNaN=function(t){return Number.isNaN(t)};var A=function(){};A.isWhitespace=function(t){return t<=32&&t>=0||127===t},A.toUpperCase=function(t){return t.toUpperCase()};var F=function t(){if(this._hi=0,this._lo=0,0===arguments.length)this.init(0);else if(1===arguments.length){if(\"number\"==typeof arguments[0]){var e=arguments[0];this.init(e)}else if(arguments[0]instanceof t){var n=arguments[0];this.init(n)}else if(\"string\"==typeof arguments[0]){var i=arguments[0];t.call(this,t.parse(i))}}else if(2===arguments.length){var r=arguments[0],o=arguments[1];this.init(r,o)}},G={PI:{configurable:!0},TWO_PI:{configurable:!0},PI_2:{configurable:!0},E:{configurable:!0},NaN:{configurable:!0},EPS:{configurable:!0},SPLIT:{configurable:!0},MAX_PRINT_DIGITS:{configurable:!0},TEN:{configurable:!0},ONE:{configurable:!0},SCI_NOT_EXPONENT_CHAR:{configurable:!0},SCI_NOT_ZERO:{configurable:!0}};F.prototype.le=function(t){return(this._hi<t._hi||this._hi===t._hi)&&this._lo<=t._lo},F.prototype.extractSignificantDigits=function(t,e){var n=this.abs(),i=F.magnitude(n._hi),r=F.TEN.pow(i);(n=n.divide(r)).gt(F.TEN)?(n=n.divide(F.TEN),i+=1):n.lt(F.ONE)&&(n=n.multiply(F.TEN),i-=1);for(var o=i+1,s=new D,a=F.MAX_PRINT_DIGITS-1,u=0;u<=a;u++){t&&u===o&&s.append(\".\");var l=Math.trunc(n._hi);if(l<0)break;var c=!1,p=0;l>9?(c=!0,p=\"9\"):p=\"0\"+l,s.append(p),n=n.subtract(F.valueOf(l)).multiply(F.TEN),c&&n.selfAdd(F.TEN);var h=!0,f=F.magnitude(n._hi);if(f<0&&Math.abs(f)>=a-u&&(h=!1),!h)break}return e[0]=i,s.toString()},F.prototype.sqr=function(){return this.multiply(this)},F.prototype.doubleValue=function(){return this._hi+this._lo},F.prototype.subtract=function(){if(arguments[0]instanceof F){var t=arguments[0];return this.add(t.negate())}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.add(-e)}},F.prototype.equals=function(){if(1===arguments.length){var t=arguments[0];return this._hi===t._hi&&this._lo===t._lo}},F.prototype.isZero=function(){return 0===this._hi&&0===this._lo},F.prototype.selfSubtract=function(){if(arguments[0]instanceof F){var t=arguments[0];return this.isNaN()?this:this.selfAdd(-t._hi,-t._lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.isNaN()?this:this.selfAdd(-e,0)}},F.prototype.getSpecialNumberString=function(){return this.isZero()?\"0.0\":this.isNaN()?\"NaN \":null},F.prototype.min=function(t){return this.le(t)?this:t},F.prototype.selfDivide=function(){if(1===arguments.length){if(arguments[0]instanceof F){var t=arguments[0];return this.selfDivide(t._hi,t._lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.selfDivide(e,0)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1],r=null,o=null,s=null,a=null,u=null,l=null,c=null,p=null;return u=this._hi/n,l=F.SPLIT*u,r=l-u,p=F.SPLIT*n,r=l-r,o=u-r,s=p-n,c=u*n,s=p-s,a=n-s,p=r*s-c+r*a+o*s+o*a,l=(this._hi-c-p+this._lo-u*i)/n,p=u+l,this._hi=p,this._lo=u-p+l,this}},F.prototype.dump=function(){return\"DD<\"+this._hi+\", \"+this._lo+\">\"},F.prototype.divide=function(){if(arguments[0]instanceof F){var t=arguments[0],e=null,n=null,i=null,r=null,o=null,s=null,a=null,u=null;n=(o=this._hi/t._hi)-(e=(s=F.SPLIT*o)-(e=s-o)),u=e*(i=(u=F.SPLIT*t._hi)-(i=u-t._hi))-(a=o*t._hi)+e*(r=t._hi-i)+n*i+n*r,s=(this._hi-a-u+this._lo-o*t._lo)/t._hi;return new F(u=o+s,o-u+s)}if(\"number\"==typeof arguments[0]){var l=arguments[0];return v.isNaN(l)?F.createNaN():F.copy(this).selfDivide(l,0)}},F.prototype.ge=function(t){return(this._hi>t._hi||this._hi===t._hi)&&this._lo>=t._lo},F.prototype.pow=function(t){if(0===t)return F.valueOf(1);var e=new F(this),n=F.valueOf(1),i=Math.abs(t);if(i>1)for(;i>0;)i%2==1&&n.selfMultiply(e),(i/=2)>0&&(e=e.sqr());else n=e;return t<0?n.reciprocal():n},F.prototype.ceil=function(){if(this.isNaN())return F.NaN;var t=Math.ceil(this._hi),e=0;return t===this._hi&&(e=Math.ceil(this._lo)),new F(t,e)},F.prototype.compareTo=function(t){var e=t;return this._hi<e._hi?-1:this._hi>e._hi?1:this._lo<e._lo?-1:this._lo>e._lo?1:0},F.prototype.rint=function(){if(this.isNaN())return this;return this.add(.5).floor()},F.prototype.setValue=function(){if(arguments[0]instanceof F){var t=arguments[0];return this.init(t),this}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.init(e),this}},F.prototype.max=function(t){return this.ge(t)?this:t},F.prototype.sqrt=function(){if(this.isZero())return F.valueOf(0);if(this.isNegative())return F.NaN;var t=1/Math.sqrt(this._hi),e=this._hi*t,n=F.valueOf(e),i=this.subtract(n.sqr())._hi*(.5*t);return n.add(i)},F.prototype.selfAdd=function(){if(1===arguments.length){if(arguments[0]instanceof F){var t=arguments[0];return this.selfAdd(t._hi,t._lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0],n=null,i=null,r=null,o=null,s=null,a=null;return r=this._hi+e,s=r-this._hi,o=r-s,o=e-s+(this._hi-o),a=o+this._lo,n=r+a,i=a+(r-n),this._hi=n+i,this._lo=i+(n-this._hi),this}}else if(2===arguments.length){var u=arguments[0],l=arguments[1],c=null,p=null,h=null,f=null,g=null,d=null,y=null;f=this._hi+u,p=this._lo+l,g=f-(d=f-this._hi),h=p-(y=p-this._lo);var _=(c=f+(d=(g=u-d+(this._hi-g))+p))+(d=(h=l-y+(this._lo-h))+(d+(f-c))),m=d+(c-_);return this._hi=_,this._lo=m,this}},F.prototype.selfMultiply=function(){if(1===arguments.length){if(arguments[0]instanceof F){var t=arguments[0];return this.selfMultiply(t._hi,t._lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.selfMultiply(e,0)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1],r=null,o=null,s=null,a=null,u=null,l=null;r=(u=F.SPLIT*this._hi)-this._hi,l=F.SPLIT*n,r=u-r,o=this._hi-r,s=l-n;var c=(u=this._hi*n)+(l=r*(s=l-s)-u+r*(a=n-s)+o*s+o*a+(this._hi*i+this._lo*n)),p=l+(r=u-c);return this._hi=c,this._lo=p,this}},F.prototype.selfSqr=function(){return this.selfMultiply(this)},F.prototype.floor=function(){if(this.isNaN())return F.NaN;var t=Math.floor(this._hi),e=0;return t===this._hi&&(e=Math.floor(this._lo)),new F(t,e)},F.prototype.negate=function(){return this.isNaN()?this:new F(-this._hi,-this._lo)},F.prototype.clone=function(){},F.prototype.multiply=function(){if(arguments[0]instanceof F){var t=arguments[0];return t.isNaN()?F.createNaN():F.copy(this).selfMultiply(t)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return v.isNaN(e)?F.createNaN():F.copy(this).selfMultiply(e,0)}},F.prototype.isNaN=function(){return v.isNaN(this._hi)},F.prototype.intValue=function(){return Math.trunc(this._hi)},F.prototype.toString=function(){var t=F.magnitude(this._hi);return t>=-3&&t<=20?this.toStandardNotation():this.toSciNotation()},F.prototype.toStandardNotation=function(){var t=this.getSpecialNumberString();if(null!==t)return t;var e=new Array(1).fill(null),n=this.extractSignificantDigits(!0,e),i=e[0]+1,r=n;if(\".\"===n.charAt(0))r=\"0\"+n;else if(i<0)r=\"0.\"+F.stringOfChar(\"0\",-i)+n;else if(-1===n.indexOf(\".\")){var o=i-n.length;r=n+F.stringOfChar(\"0\",o)+\".0\"}return this.isNegative()?\"-\"+r:r},F.prototype.reciprocal=function(){var t=null,e=null,n=null,i=null,r=null,o=null,s=null,a=null;e=(r=1/this._hi)-(t=(o=F.SPLIT*r)-(t=o-r)),n=(a=F.SPLIT*this._hi)-this._hi;var u=r+(o=(1-(s=r*this._hi)-(a=t*(n=a-n)-s+t*(i=this._hi-n)+e*n+e*i)-r*this._lo)/this._hi);return new F(u,r-u+o)},F.prototype.toSciNotation=function(){if(this.isZero())return F.SCI_NOT_ZERO;var t=this.getSpecialNumberString();if(null!==t)return t;var e=new Array(1).fill(null),n=this.extractSignificantDigits(!1,e),i=F.SCI_NOT_EXPONENT_CHAR+e[0];if(\"0\"===n.charAt(0))throw new Error(\"Found leading zero: \"+n);var r=\"\";n.length>1&&(r=n.substring(1));var o=n.charAt(0)+\".\"+r;return this.isNegative()?\"-\"+o+i:o+i},F.prototype.abs=function(){return this.isNaN()?F.NaN:this.isNegative()?this.negate():new F(this)},F.prototype.isPositive=function(){return(this._hi>0||0===this._hi)&&this._lo>0},F.prototype.lt=function(t){return(this._hi<t._hi||this._hi===t._hi)&&this._lo<t._lo},F.prototype.add=function(){if(arguments[0]instanceof F){var t=arguments[0];return F.copy(this).selfAdd(t)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return F.copy(this).selfAdd(e)}},F.prototype.init=function(){if(1===arguments.length){if(\"number\"==typeof arguments[0]){var t=arguments[0];this._hi=t,this._lo=0}else if(arguments[0]instanceof F){var e=arguments[0];this._hi=e._hi,this._lo=e._lo}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this._hi=n,this._lo=i}},F.prototype.gt=function(t){return(this._hi>t._hi||this._hi===t._hi)&&this._lo>t._lo},F.prototype.isNegative=function(){return(this._hi<0||0===this._hi)&&this._lo<0},F.prototype.trunc=function(){return this.isNaN()?F.NaN:this.isPositive()?this.floor():this.ceil()},F.prototype.signum=function(){return this._hi>0?1:this._hi<0?-1:this._lo>0?1:this._lo<0?-1:0},F.prototype.interfaces_=function(){return[e,E,x]},F.prototype.getClass=function(){return F},F.sqr=function(t){return F.valueOf(t).selfMultiply(t)},F.valueOf=function(){if(\"string\"==typeof arguments[0]){var t=arguments[0];return F.parse(t)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return new F(e)}},F.sqrt=function(t){return F.valueOf(t).sqrt()},F.parse=function(t){for(var e=0,n=t.length;A.isWhitespace(t.charAt(e));)e++;var i=!1;if(e<n){var r=t.charAt(e);\"-\"!==r&&\"+\"!==r||(e++,\"-\"===r&&(i=!0))}for(var o=new F,s=0,a=0,u=0;!(e>=n);){var l=t.charAt(e);if(e++,A.isDigit(l)){var c=l-\"0\";o.selfMultiply(F.TEN),o.selfAdd(c),s++}else{if(\".\"!==l){if(\"e\"===l||\"E\"===l){var p=t.substring(e);try{u=M.parseInt(p)}catch(e){throw e instanceof Error?new Error(\"Invalid exponent \"+p+\" in string \"+t):e}break}throw new Error(\"Unexpected character '\"+l+\"' at position \"+e+\" in string \"+t)}a=s}}var h=o,f=s-a-u;if(0===f)h=o;else if(f>0){var g=F.TEN.pow(f);h=o.divide(g)}else if(f<0){var d=F.TEN.pow(-f);h=o.multiply(d)}return i?h.negate():h},F.createNaN=function(){return new F(v.NaN,v.NaN)},F.copy=function(t){return new F(t)},F.magnitude=function(t){var e=Math.abs(t),n=Math.log(e)/Math.log(10),i=Math.trunc(Math.floor(n));return 10*Math.pow(10,i)<=e&&(i+=1),i},F.stringOfChar=function(t,e){for(var n=new D,i=0;i<e;i++)n.append(t);return n.toString()},G.PI.get=function(){return new F(3.141592653589793,1.2246467991473532e-16)},G.TWO_PI.get=function(){return new F(6.283185307179586,2.4492935982947064e-16)},G.PI_2.get=function(){return new F(1.5707963267948966,6.123233995736766e-17)},G.E.get=function(){return new F(2.718281828459045,1.4456468917292502e-16)},G.NaN.get=function(){return new F(v.NaN,v.NaN)},G.EPS.get=function(){return 1.23259516440783e-32},G.SPLIT.get=function(){return 134217729},G.MAX_PRINT_DIGITS.get=function(){return 32},G.TEN.get=function(){return F.valueOf(10)},G.ONE.get=function(){return F.valueOf(1)},G.SCI_NOT_EXPONENT_CHAR.get=function(){return\"E\"},G.SCI_NOT_ZERO.get=function(){return\"0.0E0\"},Object.defineProperties(F,G);var q=function(){},B={DP_SAFE_EPSILON:{configurable:!0}};q.prototype.interfaces_=function(){return[]},q.prototype.getClass=function(){return q},q.orientationIndex=function(t,e,n){var i=q.orientationIndexFilter(t,e,n);if(i<=1)return i;var r=F.valueOf(e.x).selfAdd(-t.x),o=F.valueOf(e.y).selfAdd(-t.y),s=F.valueOf(n.x).selfAdd(-e.x),a=F.valueOf(n.y).selfAdd(-e.y);return r.selfMultiply(a).selfSubtract(o.selfMultiply(s)).signum()},q.signOfDet2x2=function(t,e,n,i){return t.multiply(i).selfSubtract(e.multiply(n)).signum()},q.intersection=function(t,e,n,i){var r=F.valueOf(i.y).selfSubtract(n.y).selfMultiply(F.valueOf(e.x).selfSubtract(t.x)),o=F.valueOf(i.x).selfSubtract(n.x).selfMultiply(F.valueOf(e.y).selfSubtract(t.y)),s=r.subtract(o),a=F.valueOf(i.x).selfSubtract(n.x).selfMultiply(F.valueOf(t.y).selfSubtract(n.y)),u=F.valueOf(i.y).selfSubtract(n.y).selfMultiply(F.valueOf(t.x).selfSubtract(n.x)),l=a.subtract(u).selfDivide(s).doubleValue(),c=F.valueOf(t.x).selfAdd(F.valueOf(e.x).selfSubtract(t.x).selfMultiply(l)).doubleValue(),p=F.valueOf(e.x).selfSubtract(t.x).selfMultiply(F.valueOf(t.y).selfSubtract(n.y)),h=F.valueOf(e.y).selfSubtract(t.y).selfMultiply(F.valueOf(t.x).selfSubtract(n.x)),f=p.subtract(h).selfDivide(s).doubleValue(),g=F.valueOf(n.y).selfAdd(F.valueOf(i.y).selfSubtract(n.y).selfMultiply(f)).doubleValue();return new C(c,g)},q.orientationIndexFilter=function(t,e,n){var i=null,r=(t.x-n.x)*(e.y-n.y),o=(t.y-n.y)*(e.x-n.x),s=r-o;if(r>0){if(o<=0)return q.signum(s);i=r+o}else{if(!(r<0))return q.signum(s);if(o>=0)return q.signum(s);i=-r-o}var a=q.DP_SAFE_EPSILON*i;return s>=a||-s>=a?q.signum(s):2},q.signum=function(t){return t>0?1:t<0?-1:0},B.DP_SAFE_EPSILON.get=function(){return 1e-15},Object.defineProperties(q,B);var V=function(){},U={X:{configurable:!0},Y:{configurable:!0},Z:{configurable:!0},M:{configurable:!0}};U.X.get=function(){return 0},U.Y.get=function(){return 1},U.Z.get=function(){return 2},U.M.get=function(){return 3},V.prototype.setOrdinate=function(t,e,n){},V.prototype.size=function(){},V.prototype.getOrdinate=function(t,e){},V.prototype.getCoordinate=function(){},V.prototype.getCoordinateCopy=function(t){},V.prototype.getDimension=function(){},V.prototype.getX=function(t){},V.prototype.clone=function(){},V.prototype.expandEnvelope=function(t){},V.prototype.copy=function(){},V.prototype.getY=function(t){},V.prototype.toCoordinateArray=function(){},V.prototype.interfaces_=function(){return[x]},V.prototype.getClass=function(){return V},Object.defineProperties(V,U);var z=function(){},X=function(t){function e(){t.call(this,\"Projective point not representable on the Cartesian plane.\")}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(z),Y=function(){};Y.arraycopy=function(t,e,n,i,r){for(var o=0,s=e;s<e+r;s++)n[i+o]=t[s],o++},Y.getProperty=function(t){return{\"line.separator\":\"\\n\"}[t]};var k=function t(){if(this.x=null,this.y=null,this.w=null,0===arguments.length)this.x=0,this.y=0,this.w=1;else if(1===arguments.length){var e=arguments[0];this.x=e.x,this.y=e.y,this.w=1}else if(2===arguments.length){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var n=arguments[0],i=arguments[1];this.x=n,this.y=i,this.w=1}else if(arguments[0]instanceof t&&arguments[1]instanceof t){var r=arguments[0],o=arguments[1];this.x=r.y*o.w-o.y*r.w,this.y=o.x*r.w-r.x*o.w,this.w=r.x*o.y-o.x*r.y}else if(arguments[0]instanceof C&&arguments[1]instanceof C){var s=arguments[0],a=arguments[1];this.x=s.y-a.y,this.y=a.x-s.x,this.w=s.x*a.y-a.x*s.y}}else if(3===arguments.length){var u=arguments[0],l=arguments[1],c=arguments[2];this.x=u,this.y=l,this.w=c}else if(4===arguments.length){var p=arguments[0],h=arguments[1],f=arguments[2],g=arguments[3],d=p.y-h.y,y=h.x-p.x,_=p.x*h.y-h.x*p.y,m=f.y-g.y,v=g.x-f.x,I=f.x*g.y-g.x*f.y;this.x=y*I-v*_,this.y=m*_-d*I,this.w=d*v-m*y}};k.prototype.getY=function(){var t=this.y/this.w;if(v.isNaN(t)||v.isInfinite(t))throw new X;return t},k.prototype.getX=function(){var t=this.x/this.w;if(v.isNaN(t)||v.isInfinite(t))throw new X;return t},k.prototype.getCoordinate=function(){var t=new C;return t.x=this.getX(),t.y=this.getY(),t},k.prototype.interfaces_=function(){return[]},k.prototype.getClass=function(){return k},k.intersection=function(t,e,n,i){var r=t.y-e.y,o=e.x-t.x,s=t.x*e.y-e.x*t.y,a=n.y-i.y,u=i.x-n.x,l=n.x*i.y-i.x*n.y,c=r*u-a*o,p=(o*l-u*s)/c,h=(a*s-r*l)/c;if(v.isNaN(p)||v.isInfinite(p)||v.isNaN(h)||v.isInfinite(h))throw new X;return new C(p,h)};var j=function t(){if(this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,0===arguments.length)this.init();else if(1===arguments.length){if(arguments[0]instanceof C){var e=arguments[0];this.init(e.x,e.x,e.y,e.y)}else if(arguments[0]instanceof t){var n=arguments[0];this.init(n)}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];this.init(i.x,r.x,i.y,r.y)}else if(4===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2],u=arguments[3];this.init(o,s,a,u)}},H={serialVersionUID:{configurable:!0}};j.prototype.getArea=function(){return this.getWidth()*this.getHeight()},j.prototype.equals=function(t){if(!(t instanceof j))return!1;var e=t;return this.isNull()?e.isNull():this._maxx===e.getMaxX()&&this._maxy===e.getMaxY()&&this._minx===e.getMinX()&&this._miny===e.getMinY()},j.prototype.intersection=function(t){if(this.isNull()||t.isNull()||!this.intersects(t))return new j;var e=this._minx>t._minx?this._minx:t._minx,n=this._miny>t._miny?this._miny:t._miny,i=this._maxx<t._maxx?this._maxx:t._maxx,r=this._maxy<t._maxy?this._maxy:t._maxy;return new j(e,i,n,r)},j.prototype.isNull=function(){return this._maxx<this._minx},j.prototype.getMaxX=function(){return this._maxx},j.prototype.covers=function(){if(1===arguments.length){if(arguments[0]instanceof C){var t=arguments[0];return this.covers(t.x,t.y)}if(arguments[0]instanceof j){var e=arguments[0];return!this.isNull()&&!e.isNull()&&(e.getMinX()>=this._minx&&e.getMaxX()<=this._maxx&&e.getMinY()>=this._miny&&e.getMaxY()<=this._maxy)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return!this.isNull()&&(n>=this._minx&&n<=this._maxx&&i>=this._miny&&i<=this._maxy)}},j.prototype.intersects=function(){if(1===arguments.length){if(arguments[0]instanceof j){var t=arguments[0];return!this.isNull()&&!t.isNull()&&!(t._minx>this._maxx||t._maxx<this._minx||t._miny>this._maxy||t._maxy<this._miny)}if(arguments[0]instanceof C){var e=arguments[0];return this.intersects(e.x,e.y)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return!this.isNull()&&!(n>this._maxx||n<this._minx||i>this._maxy||i<this._miny)}},j.prototype.getMinY=function(){return this._miny},j.prototype.getMinX=function(){return this._minx},j.prototype.expandToInclude=function(){if(1===arguments.length){if(arguments[0]instanceof C){var t=arguments[0];this.expandToInclude(t.x,t.y)}else if(arguments[0]instanceof j){var e=arguments[0];if(e.isNull())return null;this.isNull()?(this._minx=e.getMinX(),this._maxx=e.getMaxX(),this._miny=e.getMinY(),this._maxy=e.getMaxY()):(e._minx<this._minx&&(this._minx=e._minx),e._maxx>this._maxx&&(this._maxx=e._maxx),e._miny<this._miny&&(this._miny=e._miny),e._maxy>this._maxy&&(this._maxy=e._maxy))}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.isNull()?(this._minx=n,this._maxx=n,this._miny=i,this._maxy=i):(n<this._minx&&(this._minx=n),n>this._maxx&&(this._maxx=n),i<this._miny&&(this._miny=i),i>this._maxy&&(this._maxy=i))}},j.prototype.minExtent=function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return t<e?t:e},j.prototype.getWidth=function(){return this.isNull()?0:this._maxx-this._minx},j.prototype.compareTo=function(t){var e=t;return this.isNull()?e.isNull()?0:-1:e.isNull()?1:this._minx<e._minx?-1:this._minx>e._minx?1:this._miny<e._miny?-1:this._miny>e._miny?1:this._maxx<e._maxx?-1:this._maxx>e._maxx?1:this._maxy<e._maxy?-1:this._maxy>e._maxy?1:0},j.prototype.translate=function(t,e){if(this.isNull())return null;this.init(this.getMinX()+t,this.getMaxX()+t,this.getMinY()+e,this.getMaxY()+e)},j.prototype.toString=function(){return\"Env[\"+this._minx+\" : \"+this._maxx+\", \"+this._miny+\" : \"+this._maxy+\"]\"},j.prototype.setToNull=function(){this._minx=0,this._maxx=-1,this._miny=0,this._maxy=-1},j.prototype.getHeight=function(){return this.isNull()?0:this._maxy-this._miny},j.prototype.maxExtent=function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return t>e?t:e},j.prototype.expandBy=function(){if(1===arguments.length){var t=arguments[0];this.expandBy(t,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this.isNull())return null;this._minx-=e,this._maxx+=e,this._miny-=n,this._maxy+=n,(this._minx>this._maxx||this._miny>this._maxy)&&this.setToNull()}},j.prototype.contains=function(){if(1===arguments.length){if(arguments[0]instanceof j){var t=arguments[0];return this.covers(t)}if(arguments[0]instanceof C){var e=arguments[0];return this.covers(e)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return this.covers(n,i)}},j.prototype.centre=function(){return this.isNull()?null:new C((this.getMinX()+this.getMaxX())/2,(this.getMinY()+this.getMaxY())/2)},j.prototype.init=function(){if(0===arguments.length)this.setToNull();else if(1===arguments.length){if(arguments[0]instanceof C){var t=arguments[0];this.init(t.x,t.x,t.y,t.y)}else if(arguments[0]instanceof j){var e=arguments[0];this._minx=e._minx,this._maxx=e._maxx,this._miny=e._miny,this._maxy=e._maxy}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.init(n.x,i.x,n.y,i.y)}else if(4===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3];r<o?(this._minx=r,this._maxx=o):(this._minx=o,this._maxx=r),s<a?(this._miny=s,this._maxy=a):(this._miny=a,this._maxy=s)}},j.prototype.getMaxY=function(){return this._maxy},j.prototype.distance=function(t){if(this.intersects(t))return 0;var e=0;this._maxx<t._minx?e=t._minx-this._maxx:this._minx>t._maxx&&(e=this._minx-t._maxx);var n=0;return this._maxy<t._miny?n=t._miny-this._maxy:this._miny>t._maxy&&(n=this._miny-t._maxy),0===e?n:0===n?e:Math.sqrt(e*e+n*n)},j.prototype.hashCode=function(){var t=17;return t=37*t+C.hashCode(this._minx),t=37*t+C.hashCode(this._maxx),t=37*t+C.hashCode(this._miny),t=37*t+C.hashCode(this._maxy)},j.prototype.interfaces_=function(){return[E,e]},j.prototype.getClass=function(){return j},j.intersects=function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2];return n.x>=(t.x<e.x?t.x:e.x)&&n.x<=(t.x>e.x?t.x:e.x)&&n.y>=(t.y<e.y?t.y:e.y)&&n.y<=(t.y>e.y?t.y:e.y)}if(4===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2],s=arguments[3],a=Math.min(o.x,s.x),u=Math.max(o.x,s.x),l=Math.min(i.x,r.x),c=Math.max(i.x,r.x);return!(l>u)&&(!(c<a)&&(a=Math.min(o.y,s.y),u=Math.max(o.y,s.y),l=Math.min(i.y,r.y),c=Math.max(i.y,r.y),!(l>u)&&!(c<a)))}},H.serialVersionUID.get=function(){return 0x51845cd552189800},Object.defineProperties(j,H);var W={typeStr:/^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,emptyTypeStr:/^\\s*(\\w+)\\s*EMPTY\\s*$/,spaces:/\\s+/,parenComma:/\\)\\s*,\\s*\\(/,doubleParenComma:/\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/,trimParens:/^\\s*\\(?(.*?)\\)?\\s*$/},K=function(t){this.geometryFactory=t||new _e};K.prototype.read=function(t){var e,n,i;t=t.replace(/[\\n\\r]/g,\" \");var r=W.typeStr.exec(t);if(-1!==t.search(\"EMPTY\")&&((r=W.emptyTypeStr.exec(t))[2]=void 0),r&&(n=r[1].toLowerCase(),i=r[2],Q[n]&&(e=Q[n].apply(this,[i]))),void 0===e)throw new Error(\"Could not parse WKT \"+t);return e},K.prototype.write=function(t){return this.extractGeometry(t)},K.prototype.extractGeometry=function(t){var e=t.getGeometryType().toLowerCase();if(!J[e])return null;var n=e.toUpperCase();return t.isEmpty()?n+\" EMPTY\":n+\"(\"+J[e].apply(this,[t])+\")\"};var J={coordinate:function(t){return t.x+\" \"+t.y},point:function(t){return J.coordinate.call(this,t._coordinates._coordinates[0])},multipoint:function(t){for(var e=[],n=0,i=t._geometries.length;n<i;++n)e.push(\"(\"+J.point.apply(this,[t._geometries[n]])+\")\");return e.join(\",\")},linestring:function(t){for(var e=[],n=0,i=t._points._coordinates.length;n<i;++n)e.push(J.coordinate.apply(this,[t._points._coordinates[n]]));return e.join(\",\")},linearring:function(t){for(var e=[],n=0,i=t._points._coordinates.length;n<i;++n)e.push(J.coordinate.apply(this,[t._points._coordinates[n]]));return e.join(\",\")},multilinestring:function(t){for(var e=[],n=0,i=t._geometries.length;n<i;++n)e.push(\"(\"+J.linestring.apply(this,[t._geometries[n]])+\")\");return e.join(\",\")},polygon:function(t){var e=[];e.push(\"(\"+J.linestring.apply(this,[t._shell])+\")\");for(var n=0,i=t._holes.length;n<i;++n)e.push(\"(\"+J.linestring.apply(this,[t._holes[n]])+\")\");return e.join(\",\")},multipolygon:function(t){for(var e=[],n=0,i=t._geometries.length;n<i;++n)e.push(\"(\"+J.polygon.apply(this,[t._geometries[n]])+\")\");return e.join(\",\")},geometrycollection:function(t){for(var e=[],n=0,i=t._geometries.length;n<i;++n)e.push(this.extractGeometry(t._geometries[n]));return e.join(\",\")}},Q={point:function(t){if(void 0===t)return this.geometryFactory.createPoint();var e=t.trim().split(W.spaces);return this.geometryFactory.createPoint(new C(Number.parseFloat(e[0]),Number.parseFloat(e[1])))},multipoint:function(t){if(void 0===t)return this.geometryFactory.createMultiPoint();for(var e,n=t.trim().split(\",\"),i=[],r=0,o=n.length;r<o;++r)e=n[r].replace(W.trimParens,\"$1\"),i.push(Q.point.apply(this,[e]));return this.geometryFactory.createMultiPoint(i)},linestring:function(t){if(void 0===t)return this.geometryFactory.createLineString();for(var e,n=t.trim().split(\",\"),i=[],r=0,o=n.length;r<o;++r)e=n[r].trim().split(W.spaces),i.push(new C(Number.parseFloat(e[0]),Number.parseFloat(e[1])));return this.geometryFactory.createLineString(i)},linearring:function(t){if(void 0===t)return this.geometryFactory.createLinearRing();for(var e,n=t.trim().split(\",\"),i=[],r=0,o=n.length;r<o;++r)e=n[r].trim().split(W.spaces),i.push(new C(Number.parseFloat(e[0]),Number.parseFloat(e[1])));return this.geometryFactory.createLinearRing(i)},multilinestring:function(t){if(void 0===t)return this.geometryFactory.createMultiLineString();for(var e,n=t.trim().split(W.parenComma),i=[],r=0,o=n.length;r<o;++r)e=n[r].replace(W.trimParens,\"$1\"),i.push(Q.linestring.apply(this,[e]));return this.geometryFactory.createMultiLineString(i)},polygon:function(t){if(void 0===t)return this.geometryFactory.createPolygon();for(var e,n,i,r,o=t.trim().split(W.parenComma),s=[],a=0,u=o.length;a<u;++a)e=o[a].replace(W.trimParens,\"$1\"),n=Q.linestring.apply(this,[e]),i=this.geometryFactory.createLinearRing(n._points),0===a?r=i:s.push(i);return this.geometryFactory.createPolygon(r,s)},multipolygon:function(t){if(void 0===t)return this.geometryFactory.createMultiPolygon();for(var e,n=t.trim().split(W.doubleParenComma),i=[],r=0,o=n.length;r<o;++r)e=n[r].replace(W.trimParens,\"$1\"),i.push(Q.polygon.apply(this,[e]));return this.geometryFactory.createMultiPolygon(i)},geometrycollection:function(t){if(void 0===t)return this.geometryFactory.createGeometryCollection();for(var e=(t=t.replace(/,\\s*([A-Za-z])/g,\"|$1\")).trim().split(\"|\"),n=[],i=0,r=e.length;i<r;++i)n.push(this.read(e[i]));return this.geometryFactory.createGeometryCollection(n)}},Z=function(t){this.parser=new K(t)};Z.prototype.write=function(t){return this.parser.write(t)},Z.toLineString=function(t,e){if(2!==arguments.length)throw new Error(\"Not implemented\");return\"LINESTRING ( \"+t.x+\" \"+t.y+\", \"+e.x+\" \"+e.y+\" )\"};var $=function(t){function e(e){t.call(this,e),this.name=\"RuntimeException\",this.message=e,this.stack=(new t).stack}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(Error),tt=function(t){function e(){if(t.call(this),0===arguments.length)t.call(this);else if(1===arguments.length){var e=arguments[0];t.call(this,e)}}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}($),et=function(){};et.prototype.interfaces_=function(){return[]},et.prototype.getClass=function(){return et},et.shouldNeverReachHere=function(){if(0===arguments.length)et.shouldNeverReachHere(null);else if(1===arguments.length){var t=arguments[0];throw new tt(\"Should never reach here\"+(null!==t?\": \"+t:\"\"))}},et.isTrue=function(){var t,e;if(1===arguments.length)t=arguments[0],et.isTrue(t,null);else if(2===arguments.length&&(t=arguments[0],e=arguments[1],!t))throw null===e?new tt:new tt(e)},et.equals=function(){var t,e,n;if(2===arguments.length)t=arguments[0],e=arguments[1],et.equals(t,e,null);else if(3===arguments.length&&(t=arguments[0],e=arguments[1],n=arguments[2],!e.equals(t)))throw new tt(\"Expected \"+t+\" but encountered \"+e+(null!==n?\": \"+n:\"\"))};var nt=function(){this._result=null,this._inputLines=Array(2).fill().map(function(){return Array(2)}),this._intPt=new Array(2).fill(null),this._intLineIndex=null,this._isProper=null,this._pa=null,this._pb=null,this._precisionModel=null,this._intPt[0]=new C,this._intPt[1]=new C,this._pa=this._intPt[0],this._pb=this._intPt[1],this._result=0},it={DONT_INTERSECT:{configurable:!0},DO_INTERSECT:{configurable:!0},COLLINEAR:{configurable:!0},NO_INTERSECTION:{configurable:!0},POINT_INTERSECTION:{configurable:!0},COLLINEAR_INTERSECTION:{configurable:!0}};nt.prototype.getIndexAlongSegment=function(t,e){return this.computeIntLineIndex(),this._intLineIndex[t][e]},nt.prototype.getTopologySummary=function(){var t=new D;return this.isEndPoint()&&t.append(\" endpoint\"),this._isProper&&t.append(\" proper\"),this.isCollinear()&&t.append(\" collinear\"),t.toString()},nt.prototype.computeIntersection=function(t,e,n,i){this._inputLines[0][0]=t,this._inputLines[0][1]=e,this._inputLines[1][0]=n,this._inputLines[1][1]=i,this._result=this.computeIntersect(t,e,n,i)},nt.prototype.getIntersectionNum=function(){return this._result},nt.prototype.computeIntLineIndex=function(){if(0===arguments.length)null===this._intLineIndex&&(this._intLineIndex=Array(2).fill().map(function(){return Array(2)}),this.computeIntLineIndex(0),this.computeIntLineIndex(1));else if(1===arguments.length){var t=arguments[0];this.getEdgeDistance(t,0)>this.getEdgeDistance(t,1)?(this._intLineIndex[t][0]=0,this._intLineIndex[t][1]=1):(this._intLineIndex[t][0]=1,this._intLineIndex[t][1]=0)}},nt.prototype.isProper=function(){return this.hasIntersection()&&this._isProper},nt.prototype.setPrecisionModel=function(t){this._precisionModel=t},nt.prototype.isInteriorIntersection=function(){if(0===arguments.length)return!!this.isInteriorIntersection(0)||!!this.isInteriorIntersection(1);if(1===arguments.length){for(var t=arguments[0],e=0;e<this._result;e++)if(!this._intPt[e].equals2D(this._inputLines[t][0])&&!this._intPt[e].equals2D(this._inputLines[t][1]))return!0;return!1}},nt.prototype.getIntersection=function(t){return this._intPt[t]},nt.prototype.isEndPoint=function(){return this.hasIntersection()&&!this._isProper},nt.prototype.hasIntersection=function(){return this._result!==nt.NO_INTERSECTION},nt.prototype.getEdgeDistance=function(t,e){return nt.computeEdgeDistance(this._intPt[e],this._inputLines[t][0],this._inputLines[t][1])},nt.prototype.isCollinear=function(){return this._result===nt.COLLINEAR_INTERSECTION},nt.prototype.toString=function(){return Z.toLineString(this._inputLines[0][0],this._inputLines[0][1])+\" - \"+Z.toLineString(this._inputLines[1][0],this._inputLines[1][1])+this.getTopologySummary()},nt.prototype.getEndpoint=function(t,e){return this._inputLines[t][e]},nt.prototype.isIntersection=function(t){for(var e=0;e<this._result;e++)if(this._intPt[e].equals2D(t))return!0;return!1},nt.prototype.getIntersectionAlongSegment=function(t,e){return this.computeIntLineIndex(),this._intPt[this._intLineIndex[t][e]]},nt.prototype.interfaces_=function(){return[]},nt.prototype.getClass=function(){return nt},nt.computeEdgeDistance=function(t,e,n){var i=Math.abs(n.x-e.x),r=Math.abs(n.y-e.y),o=-1;if(t.equals(e))o=0;else if(t.equals(n))o=i>r?i:r;else{var s=Math.abs(t.x-e.x),a=Math.abs(t.y-e.y);0!==(o=i>r?s:a)||t.equals(e)||(o=Math.max(s,a))}return et.isTrue(!(0===o&&!t.equals(e)),\"Bad distance calculation\"),o},nt.nonRobustComputeEdgeDistance=function(t,e,n){var i=t.x-e.x,r=t.y-e.y,o=Math.sqrt(i*i+r*r);return et.isTrue(!(0===o&&!t.equals(e)),\"Invalid distance calculation\"),o},it.DONT_INTERSECT.get=function(){return 0},it.DO_INTERSECT.get=function(){return 1},it.COLLINEAR.get=function(){return 2},it.NO_INTERSECTION.get=function(){return 0},it.POINT_INTERSECTION.get=function(){return 1},it.COLLINEAR_INTERSECTION.get=function(){return 2},Object.defineProperties(nt,it);var rt=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.isInSegmentEnvelopes=function(t){var e=new j(this._inputLines[0][0],this._inputLines[0][1]),n=new j(this._inputLines[1][0],this._inputLines[1][1]);return e.contains(t)&&n.contains(t)},e.prototype.computeIntersection=function(){if(3!==arguments.length)return t.prototype.computeIntersection.apply(this,arguments);var e=arguments[0],n=arguments[1],i=arguments[2];if(this._isProper=!1,j.intersects(n,i,e)&&0===at.orientationIndex(n,i,e)&&0===at.orientationIndex(i,n,e))return this._isProper=!0,(e.equals(n)||e.equals(i))&&(this._isProper=!1),this._result=t.POINT_INTERSECTION,null;this._result=t.NO_INTERSECTION},e.prototype.normalizeToMinimum=function(t,e,n,i,r){r.x=this.smallestInAbsValue(t.x,e.x,n.x,i.x),r.y=this.smallestInAbsValue(t.y,e.y,n.y,i.y),t.x-=r.x,t.y-=r.y,e.x-=r.x,e.y-=r.y,n.x-=r.x,n.y-=r.y,i.x-=r.x,i.y-=r.y},e.prototype.safeHCoordinateIntersection=function(t,n,i,r){var o=null;try{o=k.intersection(t,n,i,r)}catch(s){if(!(s instanceof X))throw s;o=e.nearestEndpoint(t,n,i,r)}return o},e.prototype.intersection=function(t,n,i,r){var o=this.intersectionWithNormalization(t,n,i,r);return this.isInSegmentEnvelopes(o)||(o=new C(e.nearestEndpoint(t,n,i,r))),null!==this._precisionModel&&this._precisionModel.makePrecise(o),o},e.prototype.smallestInAbsValue=function(t,e,n,i){var r=t,o=Math.abs(r);return Math.abs(e)<o&&(r=e,o=Math.abs(e)),Math.abs(n)<o&&(r=n,o=Math.abs(n)),Math.abs(i)<o&&(r=i),r},e.prototype.checkDD=function(t,e,n,i,r){var o=q.intersection(t,e,n,i),s=this.isInSegmentEnvelopes(o);Y.out.println(\"DD in env = \"+s+\"  --------------------- \"+o),r.distance(o)>1e-4&&Y.out.println(\"Distance = \"+r.distance(o))},e.prototype.intersectionWithNormalization=function(t,e,n,i){var r=new C(t),o=new C(e),s=new C(n),a=new C(i),u=new C;this.normalizeToEnvCentre(r,o,s,a,u);var l=this.safeHCoordinateIntersection(r,o,s,a);return l.x+=u.x,l.y+=u.y,l},e.prototype.computeCollinearIntersection=function(e,n,i,r){var o=j.intersects(e,n,i),s=j.intersects(e,n,r),a=j.intersects(i,r,e),u=j.intersects(i,r,n);return o&&s?(this._intPt[0]=i,this._intPt[1]=r,t.COLLINEAR_INTERSECTION):a&&u?(this._intPt[0]=e,this._intPt[1]=n,t.COLLINEAR_INTERSECTION):o&&a?(this._intPt[0]=i,this._intPt[1]=e,!i.equals(e)||s||u?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):o&&u?(this._intPt[0]=i,this._intPt[1]=n,!i.equals(n)||s||a?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):s&&a?(this._intPt[0]=r,this._intPt[1]=e,!r.equals(e)||o||u?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):s&&u?(this._intPt[0]=r,this._intPt[1]=n,!r.equals(n)||o||a?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):t.NO_INTERSECTION},e.prototype.normalizeToEnvCentre=function(t,e,n,i,r){var o=t.x<e.x?t.x:e.x,s=t.y<e.y?t.y:e.y,a=t.x>e.x?t.x:e.x,u=t.y>e.y?t.y:e.y,l=n.x<i.x?n.x:i.x,c=n.y<i.y?n.y:i.y,p=n.x>i.x?n.x:i.x,h=n.y>i.y?n.y:i.y,f=((o>l?o:l)+(a<p?a:p))/2,g=((s>c?s:c)+(u<h?u:h))/2;r.x=f,r.y=g,t.x-=r.x,t.y-=r.y,e.x-=r.x,e.y-=r.y,n.x-=r.x,n.y-=r.y,i.x-=r.x,i.y-=r.y},e.prototype.computeIntersect=function(e,n,i,r){if(this._isProper=!1,!j.intersects(e,n,i,r))return t.NO_INTERSECTION;var o=at.orientationIndex(e,n,i),s=at.orientationIndex(e,n,r);if(o>0&&s>0||o<0&&s<0)return t.NO_INTERSECTION;var a=at.orientationIndex(i,r,e),u=at.orientationIndex(i,r,n);if(a>0&&u>0||a<0&&u<0)return t.NO_INTERSECTION;return 0===o&&0===s&&0===a&&0===u?this.computeCollinearIntersection(e,n,i,r):(0===o||0===s||0===a||0===u?(this._isProper=!1,e.equals2D(i)||e.equals2D(r)?this._intPt[0]=e:n.equals2D(i)||n.equals2D(r)?this._intPt[0]=n:0===o?this._intPt[0]=new C(i):0===s?this._intPt[0]=new C(r):0===a?this._intPt[0]=new C(e):0===u&&(this._intPt[0]=new C(n))):(this._isProper=!0,this._intPt[0]=this.intersection(e,n,i,r)),t.POINT_INTERSECTION)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.nearestEndpoint=function(t,e,n,i){var r=t,o=at.distancePointLine(t,n,i),s=at.distancePointLine(e,n,i);return s<o&&(o=s,r=e),(s=at.distancePointLine(n,t,e))<o&&(o=s,r=n),(s=at.distancePointLine(i,t,e))<o&&(o=s,r=i),r},e}(nt),ot=function(){};ot.prototype.interfaces_=function(){return[]},ot.prototype.getClass=function(){return ot},ot.orientationIndex=function(t,e,n){var i=e.x-t.x,r=e.y-t.y,o=n.x-e.x,s=n.y-e.y;return ot.signOfDet2x2(i,r,o,s)},ot.signOfDet2x2=function(t,e,n,i){var r=null,o=null,s=null;if(r=1,0===t||0===i)return 0===e||0===n?0:e>0?n>0?-r:r:n>0?r:-r;if(0===e||0===n)return i>0?t>0?r:-r:t>0?-r:r;if(e>0?i>0?e<=i||(r=-r,o=t,t=n,n=o,o=e,e=i,i=o):e<=-i?(r=-r,n=-n,i=-i):(o=t,t=-n,n=o,o=e,e=-i,i=o):i>0?-e<=i?(r=-r,t=-t,e=-e):(o=-t,t=n,n=o,o=-e,e=i,i=o):e>=i?(t=-t,e=-e,n=-n,i=-i):(r=-r,o=-t,t=-n,n=o,o=-e,e=-i,i=o),t>0){if(!(n>0))return r;if(!(t<=n))return r}else{if(n>0)return-r;if(!(t>=n))return-r;r=-r,t=-t,n=-n}for(;;){if(s=Math.floor(n/t),n-=s*t,(i-=s*e)<0)return-r;if(i>e)return r;if(t>n+n){if(e<i+i)return r}else{if(e>i+i)return-r;n=t-n,i=e-i,r=-r}if(0===i)return 0===n?0:-r;if(0===n)return r;if(s=Math.floor(t/n),t-=s*n,(e-=s*i)<0)return r;if(e>i)return-r;if(n>t+t){if(i<e+e)return-r}else{if(i>e+e)return r;t=n-t,e=i-e,r=-r}if(0===e)return 0===t?0:r;if(0===t)return-r}};var st=function(){this._p=null,this._crossingCount=0,this._isPointOnSegment=!1;var t=arguments[0];this._p=t};st.prototype.countSegment=function(t,e){if(t.x<this._p.x&&e.x<this._p.x)return null;if(this._p.x===e.x&&this._p.y===e.y)return this._isPointOnSegment=!0,null;if(t.y===this._p.y&&e.y===this._p.y){var n=t.x,i=e.x;return n>i&&(n=e.x,i=t.x),this._p.x>=n&&this._p.x<=i&&(this._isPointOnSegment=!0),null}if(t.y>this._p.y&&e.y<=this._p.y||e.y>this._p.y&&t.y<=this._p.y){var r=t.x-this._p.x,o=t.y-this._p.y,s=e.x-this._p.x,a=e.y-this._p.y,u=ot.signOfDet2x2(r,o,s,a);if(0===u)return this._isPointOnSegment=!0,null;a<o&&(u=-u),u>0&&this._crossingCount++}},st.prototype.isPointInPolygon=function(){return this.getLocation()!==w.EXTERIOR},st.prototype.getLocation=function(){return this._isPointOnSegment?w.BOUNDARY:this._crossingCount%2==1?w.INTERIOR:w.EXTERIOR},st.prototype.isOnSegment=function(){return this._isPointOnSegment},st.prototype.interfaces_=function(){return[]},st.prototype.getClass=function(){return st},st.locatePointInRing=function(){if(arguments[0]instanceof C&&T(arguments[1],V)){for(var t=arguments[0],e=arguments[1],n=new st(t),i=new C,r=new C,o=1;o<e.size();o++)if(e.getCoordinate(o,i),e.getCoordinate(o-1,r),n.countSegment(i,r),n.isOnSegment())return n.getLocation();return n.getLocation()}if(arguments[0]instanceof C&&arguments[1]instanceof Array){for(var s=arguments[0],a=arguments[1],u=new st(s),l=1;l<a.length;l++){var c=a[l],p=a[l-1];if(u.countSegment(c,p),u.isOnSegment())return u.getLocation()}return u.getLocation()}};var at=function(){},ut={CLOCKWISE:{configurable:!0},RIGHT:{configurable:!0},COUNTERCLOCKWISE:{configurable:!0},LEFT:{configurable:!0},COLLINEAR:{configurable:!0},STRAIGHT:{configurable:!0}};at.prototype.interfaces_=function(){return[]},at.prototype.getClass=function(){return at},at.orientationIndex=function(t,e,n){return q.orientationIndex(t,e,n)},at.signedArea=function(){if(arguments[0]instanceof Array){var t=arguments[0];if(t.length<3)return 0;for(var e=0,n=t[0].x,i=1;i<t.length-1;i++){var r=t[i].x-n,o=t[i+1].y;e+=r*(t[i-1].y-o)}return e/2}if(T(arguments[0],V)){var s=arguments[0],a=s.size();if(a<3)return 0;var u=new C,l=new C,c=new C;s.getCoordinate(0,l),s.getCoordinate(1,c);var p=l.x;c.x-=p;for(var h=0,f=1;f<a-1;f++)u.y=l.y,l.x=c.x,l.y=c.y,s.getCoordinate(f+1,c),c.x-=p,h+=l.x*(u.y-c.y);return h/2}},at.distanceLineLine=function(t,e,n,i){if(t.equals(e))return at.distancePointLine(t,n,i);if(n.equals(i))return at.distancePointLine(i,t,e);var r=!1;if(j.intersects(t,e,n,i)){var o=(e.x-t.x)*(i.y-n.y)-(e.y-t.y)*(i.x-n.x);if(0===o)r=!0;else{var s=(t.y-n.y)*(i.x-n.x)-(t.x-n.x)*(i.y-n.y),a=((t.y-n.y)*(e.x-t.x)-(t.x-n.x)*(e.y-t.y))/o,u=s/o;(u<0||u>1||a<0||a>1)&&(r=!0)}}else r=!0;return r?R.min(at.distancePointLine(t,n,i),at.distancePointLine(e,n,i),at.distancePointLine(n,t,e),at.distancePointLine(i,t,e)):0},at.isPointInRing=function(t,e){return at.locatePointInRing(t,e)!==w.EXTERIOR},at.computeLength=function(t){var e=t.size();if(e<=1)return 0;var n=0,i=new C;t.getCoordinate(0,i);for(var r=i.x,o=i.y,s=1;s<e;s++){t.getCoordinate(s,i);var a=i.x,u=i.y,l=a-r,c=u-o;n+=Math.sqrt(l*l+c*c),r=a,o=u}return n},at.isCCW=function(t){var e=t.length-1;if(e<3)throw new m(\"Ring has fewer than 4 points, so orientation cannot be determined\");for(var n=t[0],i=0,r=1;r<=e;r++){var o=t[r];o.y>n.y&&(n=o,i=r)}var s=i;do{(s-=1)<0&&(s=e)}while(t[s].equals2D(n)&&s!==i);var a=i;do{a=(a+1)%e}while(t[a].equals2D(n)&&a!==i);var u=t[s],l=t[a];if(u.equals2D(n)||l.equals2D(n)||u.equals2D(l))return!1;var c=at.computeOrientation(u,n,l),p=!1;return p=0===c?u.x>l.x:c>0,p},at.locatePointInRing=function(t,e){return st.locatePointInRing(t,e)},at.distancePointLinePerpendicular=function(t,e,n){var i=(n.x-e.x)*(n.x-e.x)+(n.y-e.y)*(n.y-e.y),r=((e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y))/i;return Math.abs(r)*Math.sqrt(i)},at.computeOrientation=function(t,e,n){return at.orientationIndex(t,e,n)},at.distancePointLine=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(0===e.length)throw new m(\"Line array must contain at least one vertex\");for(var n=t.distance(e[0]),i=0;i<e.length-1;i++){var r=at.distancePointLine(t,e[i],e[i+1]);r<n&&(n=r)}return n}if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2];if(s.x===a.x&&s.y===a.y)return o.distance(s);var u=(a.x-s.x)*(a.x-s.x)+(a.y-s.y)*(a.y-s.y),l=((o.x-s.x)*(a.x-s.x)+(o.y-s.y)*(a.y-s.y))/u;if(l<=0)return o.distance(s);if(l>=1)return o.distance(a);var c=((s.y-o.y)*(a.x-s.x)-(s.x-o.x)*(a.y-s.y))/u;return Math.abs(c)*Math.sqrt(u)}},at.isOnLine=function(t,e){for(var n=new rt,i=1;i<e.length;i++){var r=e[i-1],o=e[i];if(n.computeIntersection(t,r,o),n.hasIntersection())return!0}return!1},ut.CLOCKWISE.get=function(){return-1},ut.RIGHT.get=function(){return at.CLOCKWISE},ut.COUNTERCLOCKWISE.get=function(){return 1},ut.LEFT.get=function(){return at.COUNTERCLOCKWISE},ut.COLLINEAR.get=function(){return 0},ut.STRAIGHT.get=function(){return at.COLLINEAR},Object.defineProperties(at,ut);var lt=function(){};lt.prototype.filter=function(t){},lt.prototype.interfaces_=function(){return[]},lt.prototype.getClass=function(){return lt};var ct=function(){var t=arguments[0];this._envelope=null,this._factory=null,this._SRID=null,this._userData=null,this._factory=t,this._SRID=t.getSRID()},pt={serialVersionUID:{configurable:!0},SORTINDEX_POINT:{configurable:!0},SORTINDEX_MULTIPOINT:{configurable:!0},SORTINDEX_LINESTRING:{configurable:!0},SORTINDEX_LINEARRING:{configurable:!0},SORTINDEX_MULTILINESTRING:{configurable:!0},SORTINDEX_POLYGON:{configurable:!0},SORTINDEX_MULTIPOLYGON:{configurable:!0},SORTINDEX_GEOMETRYCOLLECTION:{configurable:!0},geometryChangedFilter:{configurable:!0}};ct.prototype.isGeometryCollection=function(){return this.getSortIndex()===ct.SORTINDEX_GEOMETRYCOLLECTION},ct.prototype.getFactory=function(){return this._factory},ct.prototype.getGeometryN=function(t){return this},ct.prototype.getArea=function(){return 0},ct.prototype.isRectangle=function(){return!1},ct.prototype.equals=function(){if(arguments[0]instanceof ct){var t=arguments[0];return null!==t&&this.equalsTopo(t)}if(arguments[0]instanceof Object){var e=arguments[0];if(!(e instanceof ct))return!1;var n=e;return this.equalsExact(n)}},ct.prototype.equalsExact=function(t){return this===t||this.equalsExact(t,0)},ct.prototype.geometryChanged=function(){this.apply(ct.geometryChangedFilter)},ct.prototype.geometryChangedAction=function(){this._envelope=null},ct.prototype.equalsNorm=function(t){return null!==t&&this.norm().equalsExact(t.norm())},ct.prototype.getLength=function(){return 0},ct.prototype.getNumGeometries=function(){return 1},ct.prototype.compareTo=function(){if(1===arguments.length){var t=arguments[0],e=t;return this.getSortIndex()!==e.getSortIndex()?this.getSortIndex()-e.getSortIndex():this.isEmpty()&&e.isEmpty()?0:this.isEmpty()?-1:e.isEmpty()?1:this.compareToSameClass(t)}if(2===arguments.length){var n=arguments[0],i=arguments[1];return this.getSortIndex()!==n.getSortIndex()?this.getSortIndex()-n.getSortIndex():this.isEmpty()&&n.isEmpty()?0:this.isEmpty()?-1:n.isEmpty()?1:this.compareToSameClass(n,i)}},ct.prototype.getUserData=function(){return this._userData},ct.prototype.getSRID=function(){return this._SRID},ct.prototype.getEnvelope=function(){return this.getFactory().toGeometry(this.getEnvelopeInternal())},ct.prototype.checkNotGeometryCollection=function(t){if(t.getSortIndex()===ct.SORTINDEX_GEOMETRYCOLLECTION)throw new m(\"This method does not support GeometryCollection arguments\")},ct.prototype.equal=function(t,e,n){return 0===n?t.equals(e):t.distance(e)<=n},ct.prototype.norm=function(){var t=this.copy();return t.normalize(),t},ct.prototype.getPrecisionModel=function(){return this._factory.getPrecisionModel()},ct.prototype.getEnvelopeInternal=function(){return null===this._envelope&&(this._envelope=this.computeEnvelopeInternal()),new j(this._envelope)},ct.prototype.setSRID=function(t){this._SRID=t},ct.prototype.setUserData=function(t){this._userData=t},ct.prototype.compare=function(t,e){for(var n=t.iterator(),i=e.iterator();n.hasNext()&&i.hasNext();){var r=n.next(),o=i.next(),s=r.compareTo(o);if(0!==s)return s}return n.hasNext()?1:i.hasNext()?-1:0},ct.prototype.hashCode=function(){return this.getEnvelopeInternal().hashCode()},ct.prototype.isGeometryCollectionOrDerived=function(){return this.getSortIndex()===ct.SORTINDEX_GEOMETRYCOLLECTION||this.getSortIndex()===ct.SORTINDEX_MULTIPOINT||this.getSortIndex()===ct.SORTINDEX_MULTILINESTRING||this.getSortIndex()===ct.SORTINDEX_MULTIPOLYGON},ct.prototype.interfaces_=function(){return[x,E,e]},ct.prototype.getClass=function(){return ct},ct.hasNonEmptyElements=function(t){for(var e=0;e<t.length;e++)if(!t[e].isEmpty())return!0;return!1},ct.hasNullElements=function(t){for(var e=0;e<t.length;e++)if(null===t[e])return!0;return!1},pt.serialVersionUID.get=function(){return 0x799ea46522854c00},pt.SORTINDEX_POINT.get=function(){return 0},pt.SORTINDEX_MULTIPOINT.get=function(){return 1},pt.SORTINDEX_LINESTRING.get=function(){return 2},pt.SORTINDEX_LINEARRING.get=function(){return 3},pt.SORTINDEX_MULTILINESTRING.get=function(){return 4},pt.SORTINDEX_POLYGON.get=function(){return 5},pt.SORTINDEX_MULTIPOLYGON.get=function(){return 6},pt.SORTINDEX_GEOMETRYCOLLECTION.get=function(){return 7},pt.geometryChangedFilter.get=function(){return ht},Object.defineProperties(ct,pt);var ht=function(){};ht.interfaces_=function(){return[lt]},ht.filter=function(t){t.geometryChangedAction()};var ft=function(){};ft.prototype.filter=function(t){},ft.prototype.interfaces_=function(){return[]},ft.prototype.getClass=function(){return ft};var gt=function(){},dt={Mod2BoundaryNodeRule:{configurable:!0},EndPointBoundaryNodeRule:{configurable:!0},MultiValentEndPointBoundaryNodeRule:{configurable:!0},MonoValentEndPointBoundaryNodeRule:{configurable:!0},MOD2_BOUNDARY_RULE:{configurable:!0},ENDPOINT_BOUNDARY_RULE:{configurable:!0},MULTIVALENT_ENDPOINT_BOUNDARY_RULE:{configurable:!0},MONOVALENT_ENDPOINT_BOUNDARY_RULE:{configurable:!0},OGC_SFS_BOUNDARY_RULE:{configurable:!0}};gt.prototype.isInBoundary=function(t){},gt.prototype.interfaces_=function(){return[]},gt.prototype.getClass=function(){return gt},dt.Mod2BoundaryNodeRule.get=function(){return yt},dt.EndPointBoundaryNodeRule.get=function(){return _t},dt.MultiValentEndPointBoundaryNodeRule.get=function(){return mt},dt.MonoValentEndPointBoundaryNodeRule.get=function(){return vt},dt.MOD2_BOUNDARY_RULE.get=function(){return new yt},dt.ENDPOINT_BOUNDARY_RULE.get=function(){return new _t},dt.MULTIVALENT_ENDPOINT_BOUNDARY_RULE.get=function(){return new mt},dt.MONOVALENT_ENDPOINT_BOUNDARY_RULE.get=function(){return new vt},dt.OGC_SFS_BOUNDARY_RULE.get=function(){return gt.MOD2_BOUNDARY_RULE},Object.defineProperties(gt,dt);var yt=function(){};yt.prototype.isInBoundary=function(t){return t%2==1},yt.prototype.interfaces_=function(){return[gt]},yt.prototype.getClass=function(){return yt};var _t=function(){};_t.prototype.isInBoundary=function(t){return t>0},_t.prototype.interfaces_=function(){return[gt]},_t.prototype.getClass=function(){return _t};var mt=function(){};mt.prototype.isInBoundary=function(t){return t>1},mt.prototype.interfaces_=function(){return[gt]},mt.prototype.getClass=function(){return mt};var vt=function(){};vt.prototype.isInBoundary=function(t){return 1===t},vt.prototype.interfaces_=function(){return[gt]},vt.prototype.getClass=function(){return vt};var It=function(){};It.prototype.add=function(){},It.prototype.addAll=function(){},It.prototype.isEmpty=function(){},It.prototype.iterator=function(){},It.prototype.size=function(){},It.prototype.toArray=function(){},It.prototype.remove=function(){},(n.prototype=new Error).name=\"IndexOutOfBoundsException\";var Et=function(){};Et.prototype.hasNext=function(){},Et.prototype.next=function(){},Et.prototype.remove=function(){};var xt=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.get=function(){},e.prototype.set=function(){},e.prototype.isEmpty=function(){},e}(It);(i.prototype=new Error).name=\"NoSuchElementException\";var Nt=function(t){function e(){t.call(this),this.array_=[],arguments[0]instanceof It&&this.addAll(arguments[0])}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.ensureCapacity=function(){},e.prototype.interfaces_=function(){return[t,It]},e.prototype.add=function(t){return 1===arguments.length?this.array_.push(t):this.array_.splice(arguments[0],arguments[1]),!0},e.prototype.clear=function(){this.array_=[]},e.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},e.prototype.set=function(t,e){var n=this.array_[t];return this.array_[t]=e,n},e.prototype.iterator=function(){return new Ct(this)},e.prototype.get=function(t){if(t<0||t>=this.size())throw new n;return this.array_[t]},e.prototype.isEmpty=function(){return 0===this.array_.length},e.prototype.size=function(){return this.array_.length},e.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},e.prototype.remove=function(t){for(var e=!1,n=0,i=this.array_.length;n<i;n++)if(this.array_[n]===t){this.array_.splice(n,1),e=!0;break}return e},e}(xt),Ct=function(t){function e(e){t.call(this),this.arrayList_=e,this.position_=0}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.next=function(){if(this.position_===this.arrayList_.size())throw new i;return this.arrayList_.get(this.position_++)},e.prototype.hasNext=function(){return this.position_<this.arrayList_.size()},e.prototype.set=function(t){return this.arrayList_.set(this.position_-1,t)},e.prototype.remove=function(){this.arrayList_.remove(this.arrayList_.get(this.position_))},e}(Et),St=function(t){function e(){if(t.call(this),0===arguments.length);else if(1===arguments.length){var e=arguments[0];this.ensureCapacity(e.length),this.add(e,!0)}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.ensureCapacity(n.length),this.add(n,i)}}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={coordArrayType:{configurable:!0}};return n.coordArrayType.get=function(){return new Array(0).fill(null)},e.prototype.getCoordinate=function(t){return this.get(t)},e.prototype.addAll=function(){if(2===arguments.length){for(var e=arguments[0],n=arguments[1],i=!1,r=e.iterator();r.hasNext();)this.add(r.next(),n),i=!0;return i}return t.prototype.addAll.apply(this,arguments)},e.prototype.clone=function(){for(var e=t.prototype.clone.call(this),n=0;n<this.size();n++)e.add(n,this.get(n).copy());return e},e.prototype.toCoordinateArray=function(){return this.toArray(e.coordArrayType)},e.prototype.add=function(){if(1===arguments.length){var e=arguments[0];t.prototype.add.call(this,e)}else if(2===arguments.length){if(arguments[0]instanceof Array&&\"boolean\"==typeof arguments[1]){var n=arguments[0],i=arguments[1];return this.add(n,i,!0),!0}if(arguments[0]instanceof C&&\"boolean\"==typeof arguments[1]){var r=arguments[0];if(!arguments[1]&&this.size()>=1){if(this.get(this.size()-1).equals2D(r))return null}t.prototype.add.call(this,r)}else if(arguments[0]instanceof Object&&\"boolean\"==typeof arguments[1]){var o=arguments[0],s=arguments[1];return this.add(o,s),!0}}else if(3===arguments.length){if(\"boolean\"==typeof arguments[2]&&arguments[0]instanceof Array&&\"boolean\"==typeof arguments[1]){var a=arguments[0],u=arguments[1];if(arguments[2])for(var l=0;l<a.length;l++)this.add(a[l],u);else for(var c=a.length-1;c>=0;c--)this.add(a[c],u);return!0}if(\"boolean\"==typeof arguments[2]&&Number.isInteger(arguments[0])&&arguments[1]instanceof C){var p=arguments[0],h=arguments[1];if(!arguments[2]){var f=this.size();if(f>0){if(p>0){if(this.get(p-1).equals2D(h))return null}if(p<f){if(this.get(p).equals2D(h))return null}}}t.prototype.add.call(this,p,h)}}else if(4===arguments.length){var g=arguments[0],d=arguments[1],y=arguments[2],_=arguments[3],m=1;y>_&&(m=-1);for(var v=y;v!==_;v+=m)this.add(g[v],d);return!0}},e.prototype.closeRing=function(){this.size()>0&&this.add(new C(this.get(0)),!1)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},Object.defineProperties(e,n),e}(Nt),Lt=function(){},bt={ForwardComparator:{configurable:!0},BidirectionalComparator:{configurable:!0},coordArrayType:{configurable:!0}};bt.ForwardComparator.get=function(){return wt},bt.BidirectionalComparator.get=function(){return Ot},bt.coordArrayType.get=function(){return new Array(0).fill(null)},Lt.prototype.interfaces_=function(){return[]},Lt.prototype.getClass=function(){return Lt},Lt.isRing=function(t){return!(t.length<4)&&!!t[0].equals2D(t[t.length-1])},Lt.ptNotInList=function(t,e){for(var n=0;n<t.length;n++){var i=t[n];if(Lt.indexOf(i,e)<0)return i}return null},Lt.scroll=function(t,e){var n=Lt.indexOf(e,t);if(n<0)return null;var i=new Array(t.length).fill(null);Y.arraycopy(t,n,i,0,t.length-n),Y.arraycopy(t,0,i,t.length-n,n),Y.arraycopy(i,0,t,0,t.length)},Lt.equals=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(t===e)return!0;if(null===t||null===e)return!1;if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(!t[n].equals(e[n]))return!1;return!0}if(3===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2];if(i===r)return!0;if(null===i||null===r)return!1;if(i.length!==r.length)return!1;for(var s=0;s<i.length;s++)if(0!==o.compare(i[s],r[s]))return!1;return!0}},Lt.intersection=function(t,e){for(var n=new St,i=0;i<t.length;i++)e.intersects(t[i])&&n.add(t[i],!0);return n.toCoordinateArray()},Lt.hasRepeatedPoints=function(t){for(var e=1;e<t.length;e++)if(t[e-1].equals(t[e]))return!0;return!1},Lt.removeRepeatedPoints=function(t){if(!Lt.hasRepeatedPoints(t))return t;return new St(t,!1).toCoordinateArray()},Lt.reverse=function(t){for(var e=t.length-1,n=Math.trunc(e/2),i=0;i<=n;i++){var r=t[i];t[i]=t[e-i],t[e-i]=r}},Lt.removeNull=function(t){for(var e=0,n=0;n<t.length;n++)null!==t[n]&&e++;var i=new Array(e).fill(null);if(0===e)return i;for(var r=0,o=0;o<t.length;o++)null!==t[o]&&(i[r++]=t[o]);return i},Lt.copyDeep=function(){if(1===arguments.length){for(var t=arguments[0],e=new Array(t.length).fill(null),n=0;n<t.length;n++)e[n]=new C(t[n]);return e}if(5===arguments.length)for(var i=arguments[0],r=arguments[1],o=arguments[2],s=arguments[3],a=arguments[4],u=0;u<a;u++)o[s+u]=new C(i[r+u])},Lt.isEqualReversed=function(t,e){for(var n=0;n<t.length;n++){var i=t[n],r=e[t.length-n-1];if(0!==i.compareTo(r))return!1}return!0},Lt.envelope=function(t){for(var e=new j,n=0;n<t.length;n++)e.expandToInclude(t[n]);return e},Lt.toCoordinateArray=function(t){return t.toArray(Lt.coordArrayType)},Lt.atLeastNCoordinatesOrNothing=function(t,e){return e.length>=t?e:[]},Lt.indexOf=function(t,e){for(var n=0;n<e.length;n++)if(t.equals(e[n]))return n;return-1},Lt.increasingDirection=function(t){for(var e=0;e<Math.trunc(t.length/2);e++){var n=t.length-1-e,i=t[e].compareTo(t[n]);if(0!==i)return i}return 1},Lt.compare=function(t,e){for(var n=0;n<t.length&&n<e.length;){var i=t[n].compareTo(e[n]);if(0!==i)return i;n++}return n<e.length?-1:n<t.length?1:0},Lt.minCoordinate=function(t){for(var e=null,n=0;n<t.length;n++)(null===e||e.compareTo(t[n])>0)&&(e=t[n]);return e},Lt.extract=function(t,e,n){e=R.clamp(e,0,t.length);var i=(n=R.clamp(n,-1,t.length))-e+1;n<0&&(i=0),e>=t.length&&(i=0),n<e&&(i=0);var r=new Array(i).fill(null);if(0===i)return r;for(var o=0,s=e;s<=n;s++)r[o++]=t[s];return r},Object.defineProperties(Lt,bt);var wt=function(){};wt.prototype.compare=function(t,e){return Lt.compare(t,e)},wt.prototype.interfaces_=function(){return[N]},wt.prototype.getClass=function(){return wt};var Ot=function(){};Ot.prototype.compare=function(t,e){var n=t,i=e;if(n.length<i.length)return-1;if(n.length>i.length)return 1;if(0===n.length)return 0;var r=Lt.compare(n,i);return Lt.isEqualReversed(n,i)?0:r},Ot.prototype.OLDcompare=function(t,e){var n=t,i=e;if(n.length<i.length)return-1;if(n.length>i.length)return 1;if(0===n.length)return 0;for(var r=Lt.increasingDirection(n),o=Lt.increasingDirection(i),s=r>0?0:n.length-1,a=o>0?0:n.length-1,u=0;u<n.length;u++){var l=n[s].compareTo(i[a]);if(0!==l)return l;s+=r,a+=o}return 0},Ot.prototype.interfaces_=function(){return[N]},Ot.prototype.getClass=function(){return Ot};var Tt=function(){};Tt.prototype.get=function(){},Tt.prototype.put=function(){},Tt.prototype.size=function(){},Tt.prototype.values=function(){},Tt.prototype.entrySet=function(){};var Rt=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(Tt);(r.prototype=new Error).name=\"OperationNotSupported\",(o.prototype=new It).contains=function(){};var Pt=function(t){function e(){t.call(this),this.array_=[],arguments[0]instanceof It&&this.addAll(arguments[0])}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.contains=function(t){for(var e=0,n=this.array_.length;e<n;e++){if(this.array_[e]===t)return!0}return!1},e.prototype.add=function(t){return!this.contains(t)&&(this.array_.push(t),!0)},e.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},e.prototype.remove=function(t){throw new Error},e.prototype.size=function(){return this.array_.length},e.prototype.isEmpty=function(){return 0===this.array_.length},e.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},e.prototype.iterator=function(){return new Dt(this)},e}(o),Dt=function(t){function e(e){t.call(this),this.hashSet_=e,this.position_=0}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.next=function(){if(this.position_===this.hashSet_.size())throw new i;return this.hashSet_.array_[this.position_++]},e.prototype.hasNext=function(){return this.position_<this.hashSet_.size()},e.prototype.remove=function(){throw new r},e}(Et),Mt=0;(p.prototype=new Rt).get=function(t){for(var e=this.root_;null!==e;){var n=t.compareTo(e.key);if(n<0)e=e.left;else{if(!(n>0))return e.value;e=e.right}}return null},p.prototype.put=function(t,e){if(null===this.root_)return this.root_={key:t,value:e,left:null,right:null,parent:null,color:Mt,getValue:function(){return this.value},getKey:function(){return this.key}},this.size_=1,null;var n,i,r=this.root_;do{if(n=r,(i=t.compareTo(r.key))<0)r=r.left;else{if(!(i>0)){var o=r.value;return r.value=e,o}r=r.right}}while(null!==r);var s={key:t,left:null,right:null,value:e,parent:n,color:Mt,getValue:function(){return this.value},getKey:function(){return this.key}};return i<0?n.left=s:n.right=s,this.fixAfterInsertion(s),this.size_++,null},p.prototype.fixAfterInsertion=function(t){for(t.color=1;null!=t&&t!==this.root_&&1===t.parent.color;)if(a(t)===l(a(a(t)))){var e=c(a(a(t)));1===s(e)?(u(a(t),Mt),u(e,Mt),u(a(a(t)),1),t=a(a(t))):(t===c(a(t))&&(t=a(t),this.rotateLeft(t)),u(a(t),Mt),u(a(a(t)),1),this.rotateRight(a(a(t))))}else{var n=l(a(a(t)));1===s(n)?(u(a(t),Mt),u(n,Mt),u(a(a(t)),1),t=a(a(t))):(t===l(a(t))&&(t=a(t),this.rotateRight(t)),u(a(t),Mt),u(a(a(t)),1),this.rotateLeft(a(a(t))))}this.root_.color=Mt},p.prototype.values=function(){var t=new Nt,e=this.getFirstEntry();if(null!==e)for(t.add(e.value);null!==(e=p.successor(e));)t.add(e.value);return t},p.prototype.entrySet=function(){var t=new Pt,e=this.getFirstEntry();if(null!==e)for(t.add(e);null!==(e=p.successor(e));)t.add(e);return t},p.prototype.rotateLeft=function(t){if(null!=t){var e=t.right;t.right=e.left,null!=e.left&&(e.left.parent=t),e.parent=t.parent,null===t.parent?this.root_=e:t.parent.left===t?t.parent.left=e:t.parent.right=e,e.left=t,t.parent=e}},p.prototype.rotateRight=function(t){if(null!=t){var e=t.left;t.left=e.right,null!=e.right&&(e.right.parent=t),e.parent=t.parent,null===t.parent?this.root_=e:t.parent.right===t?t.parent.right=e:t.parent.left=e,e.right=t,t.parent=e}},p.prototype.getFirstEntry=function(){var t=this.root_;if(null!=t)for(;null!=t.left;)t=t.left;return t},p.successor=function(t){if(null===t)return null;if(null!==t.right){for(var e=t.right;null!==e.left;)e=e.left;return e}for(var n=t.parent,i=t;null!==n&&i===n.right;)i=n,n=n.parent;return n},p.prototype.size=function(){return this.size_};var At=function(){};At.prototype.interfaces_=function(){return[]},At.prototype.getClass=function(){return At},h.prototype=new o,(f.prototype=new h).contains=function(t){for(var e=0,n=this.array_.length;e<n;e++){if(0===this.array_[e].compareTo(t))return!0}return!1},f.prototype.add=function(t){if(this.contains(t))return!1;for(var e=0,n=this.array_.length;e<n;e++){if(1===this.array_[e].compareTo(t))return this.array_.splice(e,0,t),!0}return this.array_.push(t),!0},f.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},f.prototype.remove=function(t){throw new r},f.prototype.size=function(){return this.array_.length},f.prototype.isEmpty=function(){return 0===this.array_.length},f.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},f.prototype.iterator=function(){return new Ft(this)};var Ft=function(t){this.treeSet_=t,this.position_=0};Ft.prototype.next=function(){if(this.position_===this.treeSet_.size())throw new i;return this.treeSet_.array_[this.position_++]},Ft.prototype.hasNext=function(){return this.position_<this.treeSet_.size()},Ft.prototype.remove=function(){throw new r};var Gt=function(){};Gt.sort=function(){var t,e,n,i,r=arguments[0];if(1===arguments.length)i=function(t,e){return t.compareTo(e)},r.sort(i);else if(2===arguments.length)n=arguments[1],i=function(t,e){return n.compare(t,e)},r.sort(i);else if(3===arguments.length){(e=r.slice(arguments[1],arguments[2])).sort();var o=r.slice(0,arguments[1]).concat(e,r.slice(arguments[2],r.length));for(r.splice(0,r.length),t=0;t<o.length;t++)r.push(o[t])}else if(4===arguments.length)for(e=r.slice(arguments[1],arguments[2]),n=arguments[3],i=function(t,e){return n.compare(t,e)},e.sort(i),o=r.slice(0,arguments[1]).concat(e,r.slice(arguments[2],r.length)),r.splice(0,r.length),t=0;t<o.length;t++)r.push(o[t])},Gt.asList=function(t){for(var e=new Nt,n=0,i=t.length;n<i;n++)e.add(t[n]);return e};var qt=function(){},Bt={P:{configurable:!0},L:{configurable:!0},A:{configurable:!0},FALSE:{configurable:!0},TRUE:{configurable:!0},DONTCARE:{configurable:!0},SYM_FALSE:{configurable:!0},SYM_TRUE:{configurable:!0},SYM_DONTCARE:{configurable:!0},SYM_P:{configurable:!0},SYM_L:{configurable:!0},SYM_A:{configurable:!0}};Bt.P.get=function(){return 0},Bt.L.get=function(){return 1},Bt.A.get=function(){return 2},Bt.FALSE.get=function(){return-1},Bt.TRUE.get=function(){return-2},Bt.DONTCARE.get=function(){return-3},Bt.SYM_FALSE.get=function(){return\"F\"},Bt.SYM_TRUE.get=function(){return\"T\"},Bt.SYM_DONTCARE.get=function(){return\"*\"},Bt.SYM_P.get=function(){return\"0\"},Bt.SYM_L.get=function(){return\"1\"},Bt.SYM_A.get=function(){return\"2\"},qt.prototype.interfaces_=function(){return[]},qt.prototype.getClass=function(){return qt},qt.toDimensionSymbol=function(t){switch(t){case qt.FALSE:return qt.SYM_FALSE;case qt.TRUE:return qt.SYM_TRUE;case qt.DONTCARE:return qt.SYM_DONTCARE;case qt.P:return qt.SYM_P;case qt.L:return qt.SYM_L;case qt.A:return qt.SYM_A}throw new m(\"Unknown dimension value: \"+t)},qt.toDimensionValue=function(t){switch(A.toUpperCase(t)){case qt.SYM_FALSE:return qt.FALSE;case qt.SYM_TRUE:return qt.TRUE;case qt.SYM_DONTCARE:return qt.DONTCARE;case qt.SYM_P:return qt.P;case qt.SYM_L:return qt.L;case qt.SYM_A:return qt.A}throw new m(\"Unknown dimension symbol: \"+t)},Object.defineProperties(qt,Bt);var Vt=function(){};Vt.prototype.filter=function(t){},Vt.prototype.interfaces_=function(){return[]},Vt.prototype.getClass=function(){return Vt};var Ut=function(){};Ut.prototype.filter=function(t,e){},Ut.prototype.isDone=function(){},Ut.prototype.isGeometryChanged=function(){},Ut.prototype.interfaces_=function(){return[]},Ut.prototype.getClass=function(){return Ut};var zt=function(t){function e(e,n){if(t.call(this,n),this._geometries=e||[],t.hasNullElements(this._geometries))throw new m(\"geometries must not contain null elements\")}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){for(var t=new j,e=0;e<this._geometries.length;e++)t.expandToInclude(this._geometries[e].getEnvelopeInternal());return t},e.prototype.getGeometryN=function(t){return this._geometries[t]},e.prototype.getSortIndex=function(){return t.SORTINDEX_GEOMETRYCOLLECTION},e.prototype.getCoordinates=function(){for(var t=new Array(this.getNumPoints()).fill(null),e=-1,n=0;n<this._geometries.length;n++)for(var i=this._geometries[n].getCoordinates(),r=0;r<i.length;r++)t[++e]=i[r];return t},e.prototype.getArea=function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getArea();return t},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];if(!this.isEquivalentClass(e))return!1;var i=e;if(this._geometries.length!==i._geometries.length)return!1;for(var r=0;r<this._geometries.length;r++)if(!this._geometries[r].equalsExact(i._geometries[r],n))return!1;return!0}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){for(var t=0;t<this._geometries.length;t++)this._geometries[t].normalize();Gt.sort(this._geometries)},e.prototype.getCoordinate=function(){return this.isEmpty()?null:this._geometries[0].getCoordinate()},e.prototype.getBoundaryDimension=function(){for(var t=qt.FALSE,e=0;e<this._geometries.length;e++)t=Math.max(t,this._geometries[e].getBoundaryDimension());return t},e.prototype.getDimension=function(){for(var t=qt.FALSE,e=0;e<this._geometries.length;e++)t=Math.max(t,this._geometries[e].getDimension());return t},e.prototype.getLength=function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getLength();return t},e.prototype.getNumPoints=function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getNumPoints();return t},e.prototype.getNumGeometries=function(){return this._geometries.length},e.prototype.reverse=function(){for(var t=this._geometries.length,e=new Array(t).fill(null),n=0;n<this._geometries.length;n++)e[n]=this._geometries[n].reverse();return this.getFactory().createGeometryCollection(e)},e.prototype.compareToSameClass=function(){if(1===arguments.length){var t=arguments[0],e=new f(Gt.asList(this._geometries)),n=new f(Gt.asList(t._geometries));return this.compare(e,n)}if(2===arguments.length){for(var i=arguments[0],r=arguments[1],o=i,s=this.getNumGeometries(),a=o.getNumGeometries(),u=0;u<s&&u<a;){var l=this.getGeometryN(u),c=o.getGeometryN(u),p=l.compareToSameClass(c,r);if(0!==p)return p;u++}return u<s?1:u<a?-1:0}},e.prototype.apply=function(){if(T(arguments[0],ft))for(var t=arguments[0],e=0;e<this._geometries.length;e++)this._geometries[e].apply(t);else if(T(arguments[0],Ut)){var n=arguments[0];if(0===this._geometries.length)return null;for(var i=0;i<this._geometries.length&&(this._geometries[i].apply(n),!n.isDone());i++);n.isGeometryChanged()&&this.geometryChanged()}else if(T(arguments[0],Vt)){var r=arguments[0];r.filter(this);for(var o=0;o<this._geometries.length;o++)this._geometries[o].apply(r)}else if(T(arguments[0],lt)){var s=arguments[0];s.filter(this);for(var a=0;a<this._geometries.length;a++)this._geometries[a].apply(s)}},e.prototype.getBoundary=function(){return this.checkNotGeometryCollection(this),et.shouldNeverReachHere(),null},e.prototype.clone=function(){var e=t.prototype.clone.call(this);e._geometries=new Array(this._geometries.length).fill(null);for(var n=0;n<this._geometries.length;n++)e._geometries[n]=this._geometries[n].clone();return e},e.prototype.getGeometryType=function(){return\"GeometryCollection\"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.isEmpty=function(){for(var t=0;t<this._geometries.length;t++)if(!this._geometries[t].isEmpty())return!1;return!0},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x4f07bcb1f857d800},Object.defineProperties(e,n),e}(ct),Xt=function(t){function e(){t.apply(this,arguments)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return ct.SORTINDEX_MULTILINESTRING},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&t.prototype.equalsExact.call(this,e,n)}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.getBoundaryDimension=function(){return this.isClosed()?qt.FALSE:0},e.prototype.isClosed=function(){if(this.isEmpty())return!1;for(var t=0;t<this._geometries.length;t++)if(!this._geometries[t].isClosed())return!1;return!0},e.prototype.getDimension=function(){return 1},e.prototype.reverse=function(){for(var t=this._geometries.length,e=new Array(t).fill(null),n=0;n<this._geometries.length;n++)e[t-1-n]=this._geometries[n].reverse();return this.getFactory().createMultiLineString(e)},e.prototype.getBoundary=function(){return new Yt(this).getBoundary()},e.prototype.getGeometryType=function(){return\"MultiLineString\"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.interfaces_=function(){return[At]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return 0x7155d2ab4afa8000},Object.defineProperties(e,n),e}(zt),Yt=function(){if(this._geom=null,this._geomFact=null,this._bnRule=null,this._endpointMap=null,1===arguments.length){var t=arguments[0],e=gt.MOD2_BOUNDARY_RULE;this._geom=t,this._geomFact=t.getFactory(),this._bnRule=e}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this._geom=n,this._geomFact=n.getFactory(),this._bnRule=i}};Yt.prototype.boundaryMultiLineString=function(t){if(this._geom.isEmpty())return this.getEmptyMultiPoint();var e=this.computeBoundaryCoordinates(t);return 1===e.length?this._geomFact.createPoint(e[0]):this._geomFact.createMultiPointFromCoords(e)},Yt.prototype.getBoundary=function(){return this._geom instanceof Kt?this.boundaryLineString(this._geom):this._geom instanceof Xt?this.boundaryMultiLineString(this._geom):this._geom.getBoundary()},Yt.prototype.boundaryLineString=function(t){if(this._geom.isEmpty())return this.getEmptyMultiPoint();if(t.isClosed()){return this._bnRule.isInBoundary(2)?t.getStartPoint():this._geomFact.createMultiPoint()}return this._geomFact.createMultiPoint([t.getStartPoint(),t.getEndPoint()])},Yt.prototype.getEmptyMultiPoint=function(){return this._geomFact.createMultiPoint()},Yt.prototype.computeBoundaryCoordinates=function(t){var e=new Nt;this._endpointMap=new p;for(var n=0;n<t.getNumGeometries();n++){var i=t.getGeometryN(n);0!==i.getNumPoints()&&(this.addEndpoint(i.getCoordinateN(0)),this.addEndpoint(i.getCoordinateN(i.getNumPoints()-1)))}for(var r=this._endpointMap.entrySet().iterator();r.hasNext();){var o=r.next(),s=o.getValue().count;this._bnRule.isInBoundary(s)&&e.add(o.getKey())}return Lt.toCoordinateArray(e)},Yt.prototype.addEndpoint=function(t){var e=this._endpointMap.get(t);null===e&&(e=new kt,this._endpointMap.put(t,e)),e.count++},Yt.prototype.interfaces_=function(){return[]},Yt.prototype.getClass=function(){return Yt},Yt.getBoundary=function(){if(1===arguments.length){var t=arguments[0];return new Yt(t).getBoundary()}if(2===arguments.length){var e=arguments[0],n=arguments[1];return new Yt(e,n).getBoundary()}};var kt=function(){this.count=null};kt.prototype.interfaces_=function(){return[]},kt.prototype.getClass=function(){return kt};var jt=function(){},Ht={NEWLINE:{configurable:!0},SIMPLE_ORDINATE_FORMAT:{configurable:!0}};jt.prototype.interfaces_=function(){return[]},jt.prototype.getClass=function(){return jt},jt.chars=function(t,e){for(var n=new Array(e).fill(null),i=0;i<e;i++)n[i]=t;return String(n)},jt.getStackTrace=function(){if(1===arguments.length){var t=arguments[0],e=new function(){},n=new function(){}(e);return t.printStackTrace(n),e.toString()}if(2===arguments.length){for(var i=arguments[0],r=arguments[1],o=\"\",s=new function(){}(new function(){}(jt.getStackTrace(i))),a=0;a<r;a++)try{o+=s.readLine()+jt.NEWLINE}catch(t){if(!(t instanceof g))throw t;et.shouldNeverReachHere()}return o}},jt.split=function(t,e){for(var n=e.length,i=new Nt,r=\"\"+t,o=r.indexOf(e);o>=0;){var s=r.substring(0,o);i.add(s),o=(r=r.substring(o+n)).indexOf(e)}r.length>0&&i.add(r);for(var a=new Array(i.size()).fill(null),u=0;u<a.length;u++)a[u]=i.get(u);return a},jt.toString=function(){if(1===arguments.length){var t=arguments[0];return jt.SIMPLE_ORDINATE_FORMAT.format(t)}},jt.spaces=function(t){return jt.chars(\" \",t)},Ht.NEWLINE.get=function(){return Y.getProperty(\"line.separator\")},Ht.SIMPLE_ORDINATE_FORMAT.get=function(){return new function(){}(\"0.#\")},Object.defineProperties(jt,Ht);var Wt=function(){};Wt.prototype.interfaces_=function(){return[]},Wt.prototype.getClass=function(){return Wt},Wt.copyCoord=function(t,e,n,i){for(var r=Math.min(t.getDimension(),n.getDimension()),o=0;o<r;o++)n.setOrdinate(i,o,t.getOrdinate(e,o))},Wt.isRing=function(t){var e=t.size();return 0===e||!(e<=3)&&(t.getOrdinate(0,V.X)===t.getOrdinate(e-1,V.X)&&t.getOrdinate(0,V.Y)===t.getOrdinate(e-1,V.Y))},Wt.isEqual=function(t,e){var n=t.size();if(n!==e.size())return!1;for(var i=Math.min(t.getDimension(),e.getDimension()),r=0;r<n;r++)for(var o=0;o<i;o++){var s=t.getOrdinate(r,o),a=e.getOrdinate(r,o);if(t.getOrdinate(r,o)!==e.getOrdinate(r,o)&&(!v.isNaN(s)||!v.isNaN(a)))return!1}return!0},Wt.extend=function(t,e,n){var i=t.create(n,e.getDimension()),r=e.size();if(Wt.copy(e,0,i,0,r),r>0)for(var o=r;o<n;o++)Wt.copy(e,r-1,i,o,1);return i},Wt.reverse=function(t){for(var e=t.size()-1,n=Math.trunc(e/2),i=0;i<=n;i++)Wt.swap(t,i,e-i)},Wt.swap=function(t,e,n){if(e===n)return null;for(var i=0;i<t.getDimension();i++){var r=t.getOrdinate(e,i);t.setOrdinate(e,i,t.getOrdinate(n,i)),t.setOrdinate(n,i,r)}},Wt.copy=function(t,e,n,i,r){for(var o=0;o<r;o++)Wt.copyCoord(t,e+o,n,i+o)},Wt.toString=function(){if(1===arguments.length){var t=arguments[0],e=t.size();if(0===e)return\"()\";var n=t.getDimension(),i=new D;i.append(\"(\");for(var r=0;r<e;r++){r>0&&i.append(\" \");for(var o=0;o<n;o++)o>0&&i.append(\",\"),i.append(jt.toString(t.getOrdinate(r,o)))}return i.append(\")\"),i.toString()}},Wt.ensureValidRing=function(t,e){var n=e.size();if(0===n)return e;if(n<=3)return Wt.createClosedRing(t,e,4);return e.getOrdinate(0,V.X)===e.getOrdinate(n-1,V.X)&&e.getOrdinate(0,V.Y)===e.getOrdinate(n-1,V.Y)?e:Wt.createClosedRing(t,e,n+1)},Wt.createClosedRing=function(t,e,n){var i=t.create(n,e.getDimension()),r=e.size();Wt.copy(e,0,i,0,r);for(var o=r;o<n;o++)Wt.copy(e,0,i,o,1);return i};var Kt=function(t){function e(e,n){t.call(this,n),this._points=null,this.init(e)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){return this.isEmpty()?new j:this._points.expandEnvelope(new j)},e.prototype.isRing=function(){return this.isClosed()&&this.isSimple()},e.prototype.getSortIndex=function(){return t.SORTINDEX_LINESTRING},e.prototype.getCoordinates=function(){return this._points.toCoordinateArray()},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];if(!this.isEquivalentClass(e))return!1;var i=e;if(this._points.size()!==i._points.size())return!1;for(var r=0;r<this._points.size();r++)if(!this.equal(this._points.getCoordinate(r),i._points.getCoordinate(r),n))return!1;return!0}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){for(var t=0;t<Math.trunc(this._points.size()/2);t++){var e=this._points.size()-1-t;if(!this._points.getCoordinate(t).equals(this._points.getCoordinate(e)))return this._points.getCoordinate(t).compareTo(this._points.getCoordinate(e))>0&&Wt.reverse(this._points),null}},e.prototype.getCoordinate=function(){return this.isEmpty()?null:this._points.getCoordinate(0)},e.prototype.getBoundaryDimension=function(){return this.isClosed()?qt.FALSE:0},e.prototype.isClosed=function(){return!this.isEmpty()&&this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints()-1))},e.prototype.getEndPoint=function(){return this.isEmpty()?null:this.getPointN(this.getNumPoints()-1)},e.prototype.getDimension=function(){return 1},e.prototype.getLength=function(){return at.computeLength(this._points)},e.prototype.getNumPoints=function(){return this._points.size()},e.prototype.reverse=function(){var t=this._points.copy();Wt.reverse(t);return this.getFactory().createLineString(t)},e.prototype.compareToSameClass=function(){if(1===arguments.length){for(var t=arguments[0],e=0,n=0;e<this._points.size()&&n<t._points.size();){var i=this._points.getCoordinate(e).compareTo(t._points.getCoordinate(n));if(0!==i)return i;e++,n++}return e<this._points.size()?1:n<t._points.size()?-1:0}if(2===arguments.length){var r=arguments[0];return arguments[1].compare(this._points,r._points)}},e.prototype.apply=function(){if(T(arguments[0],ft))for(var t=arguments[0],e=0;e<this._points.size();e++)t.filter(this._points.getCoordinate(e));else if(T(arguments[0],Ut)){var n=arguments[0];if(0===this._points.size())return null;for(var i=0;i<this._points.size()&&(n.filter(this._points,i),!n.isDone());i++);n.isGeometryChanged()&&this.geometryChanged()}else if(T(arguments[0],Vt)){arguments[0].filter(this)}else if(T(arguments[0],lt)){arguments[0].filter(this)}},e.prototype.getBoundary=function(){return new Yt(this).getBoundary()},e.prototype.isEquivalentClass=function(t){return t instanceof e},e.prototype.clone=function(){var e=t.prototype.clone.call(this);return e._points=this._points.clone(),e},e.prototype.getCoordinateN=function(t){return this._points.getCoordinate(t)},e.prototype.getGeometryType=function(){return\"LineString\"},e.prototype.copy=function(){return new e(this._points.copy(),this._factory)},e.prototype.getCoordinateSequence=function(){return this._points},e.prototype.isEmpty=function(){return 0===this._points.size()},e.prototype.init=function(t){if(null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),1===t.size())throw new m(\"Invalid number of points in LineString (found \"+t.size()+\" - must be 0 or >= 2)\");this._points=t},e.prototype.isCoordinate=function(t){for(var e=0;e<this._points.size();e++)if(this._points.getCoordinate(e).equals(t))return!0;return!1},e.prototype.getStartPoint=function(){return this.isEmpty()?null:this.getPointN(0)},e.prototype.getPointN=function(t){return this.getFactory().createPoint(this._points.getCoordinate(t))},e.prototype.interfaces_=function(){return[At]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return 0x2b2b51ba435c8e00},Object.defineProperties(e,n),e}(ct),Jt=function(){};Jt.prototype.interfaces_=function(){return[]},Jt.prototype.getClass=function(){return Jt};var Qt=function(t){function e(e,n){t.call(this,n),this._coordinates=e||null,this.init(this._coordinates)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){if(this.isEmpty())return new j;var t=new j;return t.expandToInclude(this._coordinates.getX(0),this._coordinates.getY(0)),t},e.prototype.getSortIndex=function(){return t.SORTINDEX_POINT},e.prototype.getCoordinates=function(){return this.isEmpty()?[]:[this.getCoordinate()]},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&(!(!this.isEmpty()||!e.isEmpty())||this.isEmpty()===e.isEmpty()&&this.equal(e.getCoordinate(),this.getCoordinate(),n))}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){},e.prototype.getCoordinate=function(){return 0!==this._coordinates.size()?this._coordinates.getCoordinate(0):null},e.prototype.getBoundaryDimension=function(){return qt.FALSE},e.prototype.getDimension=function(){return 0},e.prototype.getNumPoints=function(){return this.isEmpty()?0:1},e.prototype.reverse=function(){return this.copy()},e.prototype.getX=function(){if(null===this.getCoordinate())throw new Error(\"getX called on empty Point\");return this.getCoordinate().x},e.prototype.compareToSameClass=function(){if(1===arguments.length){var t=arguments[0];return this.getCoordinate().compareTo(t.getCoordinate())}if(2===arguments.length){var e=arguments[0];return arguments[1].compare(this._coordinates,e._coordinates)}},e.prototype.apply=function(){if(T(arguments[0],ft)){var t=arguments[0];if(this.isEmpty())return null;t.filter(this.getCoordinate())}else if(T(arguments[0],Ut)){var e=arguments[0];if(this.isEmpty())return null;e.filter(this._coordinates,0),e.isGeometryChanged()&&this.geometryChanged()}else if(T(arguments[0],Vt)){arguments[0].filter(this)}else if(T(arguments[0],lt)){arguments[0].filter(this)}},e.prototype.getBoundary=function(){return this.getFactory().createGeometryCollection(null)},e.prototype.clone=function(){var e=t.prototype.clone.call(this);return e._coordinates=this._coordinates.clone(),e},e.prototype.getGeometryType=function(){return\"Point\"},e.prototype.copy=function(){return new e(this._coordinates.copy(),this._factory)},e.prototype.getCoordinateSequence=function(){return this._coordinates},e.prototype.getY=function(){if(null===this.getCoordinate())throw new Error(\"getY called on empty Point\");return this.getCoordinate().y},e.prototype.isEmpty=function(){return 0===this._coordinates.size()},e.prototype.init=function(t){null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),et.isTrue(t.size()<=1),this._coordinates=t},e.prototype.isSimple=function(){return!0},e.prototype.interfaces_=function(){return[Jt]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return 0x44077bad161cbc00},Object.defineProperties(e,n),e}(ct),Zt=function(){};Zt.prototype.interfaces_=function(){return[]},Zt.prototype.getClass=function(){return Zt};var $t=function(t){function e(e,n,i){if(t.call(this,i),this._shell=null,this._holes=null,null===e&&(e=this.getFactory().createLinearRing()),null===n&&(n=[]),t.hasNullElements(n))throw new m(\"holes must not contain null elements\");if(e.isEmpty()&&t.hasNonEmptyElements(n))throw new m(\"shell is empty but holes are not\");this._shell=e,this._holes=n}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){return this._shell.getEnvelopeInternal()},e.prototype.getSortIndex=function(){return t.SORTINDEX_POLYGON},e.prototype.getCoordinates=function(){if(this.isEmpty())return[];for(var t=new Array(this.getNumPoints()).fill(null),e=-1,n=this._shell.getCoordinates(),i=0;i<n.length;i++)t[++e]=n[i];for(var r=0;r<this._holes.length;r++)for(var o=this._holes[r].getCoordinates(),s=0;s<o.length;s++)t[++e]=o[s];return t},e.prototype.getArea=function(){var t=0;t+=Math.abs(at.signedArea(this._shell.getCoordinateSequence()));for(var e=0;e<this._holes.length;e++)t-=Math.abs(at.signedArea(this._holes[e].getCoordinateSequence()));return t},e.prototype.isRectangle=function(){if(0!==this.getNumInteriorRing())return!1;if(null===this._shell)return!1;if(5!==this._shell.getNumPoints())return!1;for(var t=this._shell.getCoordinateSequence(),e=this.getEnvelopeInternal(),n=0;n<5;n++){var i=t.getX(n);if(i!==e.getMinX()&&i!==e.getMaxX())return!1;var r=t.getY(n);if(r!==e.getMinY()&&r!==e.getMaxY())return!1}for(var o=t.getX(0),s=t.getY(0),a=1;a<=4;a++){var u=t.getX(a),l=t.getY(a);if(u!==o===(l!==s))return!1;o=u,s=l}return!0},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];if(!this.isEquivalentClass(e))return!1;var i=e,r=this._shell,o=i._shell;if(!r.equalsExact(o,n))return!1;if(this._holes.length!==i._holes.length)return!1;for(var s=0;s<this._holes.length;s++)if(!this._holes[s].equalsExact(i._holes[s],n))return!1;return!0}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){if(0===arguments.length){this.normalize(this._shell,!0);for(var t=0;t<this._holes.length;t++)this.normalize(this._holes[t],!1);Gt.sort(this._holes)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(e.isEmpty())return null;var i=new Array(e.getCoordinates().length-1).fill(null);Y.arraycopy(e.getCoordinates(),0,i,0,i.length);var r=Lt.minCoordinate(e.getCoordinates());Lt.scroll(i,r),Y.arraycopy(i,0,e.getCoordinates(),0,i.length),e.getCoordinates()[i.length]=i[0],at.isCCW(e.getCoordinates())===n&&Lt.reverse(e.getCoordinates())}},e.prototype.getCoordinate=function(){return this._shell.getCoordinate()},e.prototype.getNumInteriorRing=function(){return this._holes.length},e.prototype.getBoundaryDimension=function(){return 1},e.prototype.getDimension=function(){return 2},e.prototype.getLength=function(){var t=0;t+=this._shell.getLength();for(var e=0;e<this._holes.length;e++)t+=this._holes[e].getLength();return t},e.prototype.getNumPoints=function(){for(var t=this._shell.getNumPoints(),e=0;e<this._holes.length;e++)t+=this._holes[e].getNumPoints();return t},e.prototype.reverse=function(){var t=this.copy();t._shell=this._shell.copy().reverse(),t._holes=new Array(this._holes.length).fill(null);for(var e=0;e<this._holes.length;e++)t._holes[e]=this._holes[e].copy().reverse();return t},e.prototype.convexHull=function(){return this.getExteriorRing().convexHull()},e.prototype.compareToSameClass=function(){if(1===arguments.length){var t=arguments[0],e=this._shell,n=t._shell;return e.compareToSameClass(n)}if(2===arguments.length){var i=arguments[0],r=arguments[1],o=i,s=this._shell,a=o._shell,u=s.compareToSameClass(a,r);if(0!==u)return u;for(var l=this.getNumInteriorRing(),c=o.getNumInteriorRing(),p=0;p<l&&p<c;){var h=this.getInteriorRingN(p),f=o.getInteriorRingN(p),g=h.compareToSameClass(f,r);if(0!==g)return g;p++}return p<l?1:p<c?-1:0}},e.prototype.apply=function(t){if(T(t,ft)){this._shell.apply(t);for(var e=0;e<this._holes.length;e++)this._holes[e].apply(t)}else if(T(t,Ut)){if(this._shell.apply(t),!t.isDone())for(var n=0;n<this._holes.length&&(this._holes[n].apply(t),!t.isDone());n++);t.isGeometryChanged()&&this.geometryChanged()}else if(T(t,Vt))t.filter(this);else if(T(t,lt)){t.filter(this),this._shell.apply(t);for(var i=0;i<this._holes.length;i++)this._holes[i].apply(t)}},e.prototype.getBoundary=function(){if(this.isEmpty())return this.getFactory().createMultiLineString();var t=new Array(this._holes.length+1).fill(null);t[0]=this._shell;for(var e=0;e<this._holes.length;e++)t[e+1]=this._holes[e];return t.length<=1?this.getFactory().createLinearRing(t[0].getCoordinateSequence()):this.getFactory().createMultiLineString(t)},e.prototype.clone=function(){var e=t.prototype.clone.call(this);e._shell=this._shell.clone(),e._holes=new Array(this._holes.length).fill(null);for(var n=0;n<this._holes.length;n++)e._holes[n]=this._holes[n].clone();return e},e.prototype.getGeometryType=function(){return\"Polygon\"},e.prototype.copy=function(){for(var t=this._shell.copy(),n=new Array(this._holes.length).fill(null),i=0;i<n.length;i++)n[i]=this._holes[i].copy();return new e(t,n,this._factory)},e.prototype.getExteriorRing=function(){return this._shell},e.prototype.isEmpty=function(){return this._shell.isEmpty()},e.prototype.getInteriorRingN=function(t){return this._holes[t]},e.prototype.interfaces_=function(){return[Zt]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x307ffefd8dc97200},Object.defineProperties(e,n),e}(ct),te=function(t){function e(){t.apply(this,arguments)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return ct.SORTINDEX_MULTIPOINT},e.prototype.isValid=function(){return!0},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&t.prototype.equalsExact.call(this,e,n)}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.getCoordinate=function(){if(1===arguments.length){var e=arguments[0];return this._geometries[e].getCoordinate()}return t.prototype.getCoordinate.apply(this,arguments)},e.prototype.getBoundaryDimension=function(){return qt.FALSE},e.prototype.getDimension=function(){return 0},e.prototype.getBoundary=function(){return this.getFactory().createGeometryCollection(null)},e.prototype.getGeometryType=function(){return\"MultiPoint\"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.interfaces_=function(){return[Jt]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x6fb1ed4162e0fc00},Object.defineProperties(e,n),e}(zt),ee=function(t){function e(e,n){e instanceof C&&n instanceof _e&&(e=n.getCoordinateSequenceFactory().create(e)),t.call(this,e,n),this.validateConstruction()}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={MINIMUM_VALID_SIZE:{configurable:!0},serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return ct.SORTINDEX_LINEARRING},e.prototype.getBoundaryDimension=function(){return qt.FALSE},e.prototype.isClosed=function(){return!!this.isEmpty()||t.prototype.isClosed.call(this)},e.prototype.reverse=function(){var t=this._points.copy();Wt.reverse(t);return this.getFactory().createLinearRing(t)},e.prototype.validateConstruction=function(){if(!this.isEmpty()&&!t.prototype.isClosed.call(this))throw new m(\"Points of LinearRing do not form a closed linestring\");if(this.getCoordinateSequence().size()>=1&&this.getCoordinateSequence().size()<e.MINIMUM_VALID_SIZE)throw new m(\"Invalid number of points in LinearRing (found \"+this.getCoordinateSequence().size()+\" - must be 0 or >= 4)\")},e.prototype.getGeometryType=function(){return\"LinearRing\"},e.prototype.copy=function(){return new e(this._points.copy(),this._factory)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},n.MINIMUM_VALID_SIZE.get=function(){return 4},n.serialVersionUID.get=function(){return-0x3b229e262367a600},Object.defineProperties(e,n),e}(Kt),ne=function(t){function e(){t.apply(this,arguments)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return ct.SORTINDEX_MULTIPOLYGON},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&t.prototype.equalsExact.call(this,e,n)}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.getBoundaryDimension=function(){return 1},e.prototype.getDimension=function(){return 2},e.prototype.reverse=function(){for(var t=this._geometries.length,e=new Array(t).fill(null),n=0;n<this._geometries.length;n++)e[n]=this._geometries[n].reverse();return this.getFactory().createMultiPolygon(e)},e.prototype.getBoundary=function(){if(this.isEmpty())return this.getFactory().createMultiLineString();for(var t=new Nt,e=0;e<this._geometries.length;e++)for(var n=this._geometries[e].getBoundary(),i=0;i<n.getNumGeometries();i++)t.add(n.getGeometryN(i));var r=new Array(t.size()).fill(null);return this.getFactory().createMultiLineString(t.toArray(r))},e.prototype.getGeometryType=function(){return\"MultiPolygon\"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.interfaces_=function(){return[Zt]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x7a5aa1369171980},Object.defineProperties(e,n),e}(zt),ie=function(t){this._factory=t||null,this._isUserDataCopied=!1},re={NoOpGeometryOperation:{configurable:!0},CoordinateOperation:{configurable:!0},CoordinateSequenceOperation:{configurable:!0}};ie.prototype.setCopyUserData=function(t){this._isUserDataCopied=t},ie.prototype.edit=function(t,e){if(null===t)return null;var n=this.editInternal(t,e);return this._isUserDataCopied&&n.setUserData(t.getUserData()),n},ie.prototype.editInternal=function(t,e){return null===this._factory&&(this._factory=t.getFactory()),t instanceof zt?this.editGeometryCollection(t,e):t instanceof $t?this.editPolygon(t,e):t instanceof Qt?e.edit(t,this._factory):t instanceof Kt?e.edit(t,this._factory):(et.shouldNeverReachHere(\"Unsupported Geometry class: \"+t.getClass().getName()),null)},ie.prototype.editGeometryCollection=function(t,e){for(var n=e.edit(t,this._factory),i=new Nt,r=0;r<n.getNumGeometries();r++){var o=this.edit(n.getGeometryN(r),e);null===o||o.isEmpty()||i.add(o)}return n.getClass()===te?this._factory.createMultiPoint(i.toArray([])):n.getClass()===Xt?this._factory.createMultiLineString(i.toArray([])):n.getClass()===ne?this._factory.createMultiPolygon(i.toArray([])):this._factory.createGeometryCollection(i.toArray([]))},ie.prototype.editPolygon=function(t,e){var n=e.edit(t,this._factory);if(null===n&&(n=this._factory.createPolygon(null)),n.isEmpty())return n;var i=this.edit(n.getExteriorRing(),e);if(null===i||i.isEmpty())return this._factory.createPolygon();for(var r=new Nt,o=0;o<n.getNumInteriorRing();o++){var s=this.edit(n.getInteriorRingN(o),e);null===s||s.isEmpty()||r.add(s)}return this._factory.createPolygon(i,r.toArray([]))},ie.prototype.interfaces_=function(){return[]},ie.prototype.getClass=function(){return ie},ie.GeometryEditorOperation=function(){},re.NoOpGeometryOperation.get=function(){return oe},re.CoordinateOperation.get=function(){return se},re.CoordinateSequenceOperation.get=function(){return ae},Object.defineProperties(ie,re);var oe=function(){};oe.prototype.edit=function(t,e){return t},oe.prototype.interfaces_=function(){return[ie.GeometryEditorOperation]},oe.prototype.getClass=function(){return oe};var se=function(){};se.prototype.edit=function(t,e){var n=this.editCoordinates(t.getCoordinates(),t);return null===n?t:t instanceof ee?e.createLinearRing(n):t instanceof Kt?e.createLineString(n):t instanceof Qt?n.length>0?e.createPoint(n[0]):e.createPoint():t},se.prototype.interfaces_=function(){return[ie.GeometryEditorOperation]},se.prototype.getClass=function(){return se};var ae=function(){};ae.prototype.edit=function(t,e){return t instanceof ee?e.createLinearRing(this.edit(t.getCoordinateSequence(),t)):t instanceof Kt?e.createLineString(this.edit(t.getCoordinateSequence(),t)):t instanceof Qt?e.createPoint(this.edit(t.getCoordinateSequence(),t)):t},ae.prototype.interfaces_=function(){return[ie.GeometryEditorOperation]},ae.prototype.getClass=function(){return ae};var ue=function(){if(this._dimension=3,this._coordinates=null,1===arguments.length){if(arguments[0]instanceof Array)this._coordinates=arguments[0],this._dimension=3;else if(Number.isInteger(arguments[0])){var t=arguments[0];this._coordinates=new Array(t).fill(null);for(var e=0;e<t;e++)this._coordinates[e]=new C}else if(T(arguments[0],V)){var n=arguments[0];if(null===n)return this._coordinates=new Array(0).fill(null),null;this._dimension=n.getDimension(),this._coordinates=new Array(n.size()).fill(null);for(var i=0;i<this._coordinates.length;i++)this._coordinates[i]=n.getCoordinateCopy(i)}}else if(2===arguments.length)if(arguments[0]instanceof Array&&Number.isInteger(arguments[1])){var r=arguments[0],o=arguments[1];this._coordinates=r,this._dimension=o,null===r&&(this._coordinates=new Array(0).fill(null))}else if(Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var s=arguments[0],a=arguments[1];this._coordinates=new Array(s).fill(null),this._dimension=a;for(var u=0;u<s;u++)this._coordinates[u]=new C}},le={serialVersionUID:{configurable:!0}};ue.prototype.setOrdinate=function(t,e,n){switch(e){case V.X:this._coordinates[t].x=n;break;case V.Y:this._coordinates[t].y=n;break;case V.Z:this._coordinates[t].z=n;break;default:throw new m(\"invalid ordinateIndex\")}},ue.prototype.size=function(){return this._coordinates.length},ue.prototype.getOrdinate=function(t,e){switch(e){case V.X:return this._coordinates[t].x;case V.Y:return this._coordinates[t].y;case V.Z:return this._coordinates[t].z}return v.NaN},ue.prototype.getCoordinate=function(){if(1===arguments.length){var t=arguments[0];return this._coordinates[t]}if(2===arguments.length){var e=arguments[0],n=arguments[1];n.x=this._coordinates[e].x,n.y=this._coordinates[e].y,n.z=this._coordinates[e].z}},ue.prototype.getCoordinateCopy=function(t){return new C(this._coordinates[t])},ue.prototype.getDimension=function(){return this._dimension},ue.prototype.getX=function(t){return this._coordinates[t].x},ue.prototype.clone=function(){for(var t=new Array(this.size()).fill(null),e=0;e<this._coordinates.length;e++)t[e]=this._coordinates[e].clone();return new ue(t,this._dimension)},ue.prototype.expandEnvelope=function(t){for(var e=0;e<this._coordinates.length;e++)t.expandToInclude(this._coordinates[e]);return t},ue.prototype.copy=function(){for(var t=new Array(this.size()).fill(null),e=0;e<this._coordinates.length;e++)t[e]=this._coordinates[e].copy();return new ue(t,this._dimension)},ue.prototype.toString=function(){if(this._coordinates.length>0){var t=new D(17*this._coordinates.length);t.append(\"(\"),t.append(this._coordinates[0]);for(var e=1;e<this._coordinates.length;e++)t.append(\", \"),t.append(this._coordinates[e]);return t.append(\")\"),t.toString()}return\"()\"},ue.prototype.getY=function(t){return this._coordinates[t].y},ue.prototype.toCoordinateArray=function(){return this._coordinates},ue.prototype.interfaces_=function(){return[V,e]},ue.prototype.getClass=function(){return ue},le.serialVersionUID.get=function(){return-0xcb44a778db18e00},Object.defineProperties(ue,le);var ce=function(){},pe={serialVersionUID:{configurable:!0},instanceObject:{configurable:!0}};ce.prototype.readResolve=function(){return ce.instance()},ce.prototype.create=function(){if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return new ue(t)}if(T(arguments[0],V)){var e=arguments[0];return new ue(e)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return i>3&&(i=3),i<2?new ue(n):new ue(n,i)}},ce.prototype.interfaces_=function(){return[b,e]},ce.prototype.getClass=function(){return ce},ce.instance=function(){return ce.instanceObject},pe.serialVersionUID.get=function(){return-0x38e49fa6cf6f2e00},pe.instanceObject.get=function(){return new ce},Object.defineProperties(ce,pe);var he=function(t){function e(){t.call(this),this.map_=new Map}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.get=function(t){return this.map_.get(t)||null},e.prototype.put=function(t,e){return this.map_.set(t,e),e},e.prototype.values=function(){for(var t=new Nt,e=this.map_.values(),n=e.next();!n.done;)t.add(n.value),n=e.next();return t},e.prototype.entrySet=function(){var t=new Pt;return this.map_.entries().forEach(function(e){return t.add(e)}),t},e.prototype.size=function(){return this.map_.size()},e}(Tt),fe=function t(){if(this._modelType=null,this._scale=null,0===arguments.length)this._modelType=t.FLOATING;else if(1===arguments.length)if(arguments[0]instanceof de){var e=arguments[0];this._modelType=e,e===t.FIXED&&this.setScale(1)}else if(\"number\"==typeof arguments[0]){var n=arguments[0];this._modelType=t.FIXED,this.setScale(n)}else if(arguments[0]instanceof t){var i=arguments[0];this._modelType=i._modelType,this._scale=i._scale}},ge={serialVersionUID:{configurable:!0},maximumPreciseValue:{configurable:!0}};fe.prototype.equals=function(t){if(!(t instanceof fe))return!1;var e=t;return this._modelType===e._modelType&&this._scale===e._scale},fe.prototype.compareTo=function(t){var e=t,n=this.getMaximumSignificantDigits(),i=e.getMaximumSignificantDigits();return new M(n).compareTo(new M(i))},fe.prototype.getScale=function(){return this._scale},fe.prototype.isFloating=function(){return this._modelType===fe.FLOATING||this._modelType===fe.FLOATING_SINGLE},fe.prototype.getType=function(){return this._modelType},fe.prototype.toString=function(){var t=\"UNKNOWN\";return this._modelType===fe.FLOATING?t=\"Floating\":this._modelType===fe.FLOATING_SINGLE?t=\"Floating-Single\":this._modelType===fe.FIXED&&(t=\"Fixed (Scale=\"+this.getScale()+\")\"),t},fe.prototype.makePrecise=function(){if(\"number\"==typeof arguments[0]){var t=arguments[0];if(v.isNaN(t))return t;if(this._modelType===fe.FLOATING_SINGLE){return t}return this._modelType===fe.FIXED?Math.round(t*this._scale)/this._scale:t}if(arguments[0]instanceof C){var e=arguments[0];if(this._modelType===fe.FLOATING)return null;e.x=this.makePrecise(e.x),e.y=this.makePrecise(e.y)}},fe.prototype.getMaximumSignificantDigits=function(){var t=16;return this._modelType===fe.FLOATING?t=16:this._modelType===fe.FLOATING_SINGLE?t=6:this._modelType===fe.FIXED&&(t=1+Math.trunc(Math.ceil(Math.log(this.getScale())/Math.log(10)))),t},fe.prototype.setScale=function(t){this._scale=Math.abs(t)},fe.prototype.interfaces_=function(){return[e,E]},fe.prototype.getClass=function(){return fe},fe.mostPrecise=function(t,e){return t.compareTo(e)>=0?t:e},ge.serialVersionUID.get=function(){return 0x6bee6404e9a25c00},ge.maximumPreciseValue.get=function(){return 9007199254740992},Object.defineProperties(fe,ge);var de=function t(e){this._name=e||null,t.nameToTypeMap.put(e,this)},ye={serialVersionUID:{configurable:!0},nameToTypeMap:{configurable:!0}};de.prototype.readResolve=function(){return de.nameToTypeMap.get(this._name)},de.prototype.toString=function(){return this._name},de.prototype.interfaces_=function(){return[e]},de.prototype.getClass=function(){return de},ye.serialVersionUID.get=function(){return-552860263173159e4},ye.nameToTypeMap.get=function(){return new he},Object.defineProperties(de,ye),fe.Type=de,fe.FIXED=new de(\"FIXED\"),fe.FLOATING=new de(\"FLOATING\"),fe.FLOATING_SINGLE=new de(\"FLOATING SINGLE\");var _e=function t(){this._precisionModel=new fe,this._SRID=0,this._coordinateSequenceFactory=t.getDefaultCoordinateSequenceFactory(),0===arguments.length||(1===arguments.length?T(arguments[0],b)?this._coordinateSequenceFactory=arguments[0]:arguments[0]instanceof fe&&(this._precisionModel=arguments[0]):2===arguments.length?(this._precisionModel=arguments[0],this._SRID=arguments[1]):3===arguments.length&&(this._precisionModel=arguments[0],this._SRID=arguments[1],this._coordinateSequenceFactory=arguments[2]))},me={serialVersionUID:{configurable:!0}};_e.prototype.toGeometry=function(t){return t.isNull()?this.createPoint(null):t.getMinX()===t.getMaxX()&&t.getMinY()===t.getMaxY()?this.createPoint(new C(t.getMinX(),t.getMinY())):t.getMinX()===t.getMaxX()||t.getMinY()===t.getMaxY()?this.createLineString([new C(t.getMinX(),t.getMinY()),new C(t.getMaxX(),t.getMaxY())]):this.createPolygon(this.createLinearRing([new C(t.getMinX(),t.getMinY()),new C(t.getMinX(),t.getMaxY()),new C(t.getMaxX(),t.getMaxY()),new C(t.getMaxX(),t.getMinY()),new C(t.getMinX(),t.getMinY())]),null)},_e.prototype.createLineString=function(t){return t?t instanceof Array?new Kt(this.getCoordinateSequenceFactory().create(t),this):T(t,V)?new Kt(t,this):void 0:new Kt(this.getCoordinateSequenceFactory().create([]),this)},_e.prototype.createMultiLineString=function(){if(0===arguments.length)return new Xt(null,this);if(1===arguments.length){var t=arguments[0];return new Xt(t,this)}},_e.prototype.buildGeometry=function(t){for(var e=null,n=!1,i=!1,r=t.iterator();r.hasNext();){var o=r.next(),s=o.getClass();null===e&&(e=s),s!==e&&(n=!0),o.isGeometryCollectionOrDerived()&&(i=!0)}if(null===e)return this.createGeometryCollection();if(n||i)return this.createGeometryCollection(_e.toGeometryArray(t));var a=t.iterator().next();if(t.size()>1){if(a instanceof $t)return this.createMultiPolygon(_e.toPolygonArray(t));if(a instanceof Kt)return this.createMultiLineString(_e.toLineStringArray(t));if(a instanceof Qt)return this.createMultiPoint(_e.toPointArray(t));et.shouldNeverReachHere(\"Unhandled class: \"+a.getClass().getName())}return a},_e.prototype.createMultiPointFromCoords=function(t){return this.createMultiPoint(null!==t?this.getCoordinateSequenceFactory().create(t):null)},_e.prototype.createPoint=function(){if(0===arguments.length)return this.createPoint(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof C){var t=arguments[0];return this.createPoint(null!==t?this.getCoordinateSequenceFactory().create([t]):null)}if(T(arguments[0],V)){var e=arguments[0];return new Qt(e,this)}}},_e.prototype.getCoordinateSequenceFactory=function(){return this._coordinateSequenceFactory},_e.prototype.createPolygon=function(){if(0===arguments.length)return new $t(null,null,this);if(1===arguments.length){if(T(arguments[0],V)){var t=arguments[0];return this.createPolygon(this.createLinearRing(t))}if(arguments[0]instanceof Array){var e=arguments[0];return this.createPolygon(this.createLinearRing(e))}if(arguments[0]instanceof ee){var n=arguments[0];return this.createPolygon(n,null)}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];return new $t(i,r,this)}},_e.prototype.getSRID=function(){return this._SRID},_e.prototype.createGeometryCollection=function(){if(0===arguments.length)return new zt(null,this);if(1===arguments.length){var t=arguments[0];return new zt(t,this)}},_e.prototype.createGeometry=function(t){return new ie(this).edit(t,{edit:function(){if(2===arguments.length){var t=arguments[0];return this._coordinateSequenceFactory.create(t)}}})},_e.prototype.getPrecisionModel=function(){return this._precisionModel},_e.prototype.createLinearRing=function(){if(0===arguments.length)return this.createLinearRing(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return this.createLinearRing(null!==t?this.getCoordinateSequenceFactory().create(t):null)}if(T(arguments[0],V)){var e=arguments[0];return new ee(e,this)}}},_e.prototype.createMultiPolygon=function(){if(0===arguments.length)return new ne(null,this);if(1===arguments.length){var t=arguments[0];return new ne(t,this)}},_e.prototype.createMultiPoint=function(){if(0===arguments.length)return new te(null,this);if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return new te(t,this)}if(arguments[0]instanceof Array){var e=arguments[0];return this.createMultiPoint(null!==e?this.getCoordinateSequenceFactory().create(e):null)}if(T(arguments[0],V)){var n=arguments[0];if(null===n)return this.createMultiPoint(new Array(0).fill(null));for(var i=new Array(n.size()).fill(null),r=0;r<n.size();r++){var o=this.getCoordinateSequenceFactory().create(1,n.getDimension());Wt.copy(n,r,o,0,1),i[r]=this.createPoint(o)}return this.createMultiPoint(i)}}},_e.prototype.interfaces_=function(){return[e]},_e.prototype.getClass=function(){return _e},_e.toMultiPolygonArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.toGeometryArray=function(t){if(null===t)return null;var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.getDefaultCoordinateSequenceFactory=function(){return ce.instance()},_e.toMultiLineStringArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.toLineStringArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.toMultiPointArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.toLinearRingArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.toPointArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.toPolygonArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.createPointFromInternalCoord=function(t,e){return e.getPrecisionModel().makePrecise(t),e.getFactory().createPoint(t)},me.serialVersionUID.get=function(){return-0x5ea75f2051eeb400},Object.defineProperties(_e,me);var ve=[\"Point\",\"MultiPoint\",\"LineString\",\"MultiLineString\",\"Polygon\",\"MultiPolygon\"],Ie=function(t){this.geometryFactory=t||new _e};Ie.prototype.read=function(t){var e,n=(e=\"string\"==typeof t?JSON.parse(t):t).type;if(!Ee[n])throw new Error(\"Unknown GeoJSON type: \"+e.type);return-1!==ve.indexOf(n)?Ee[n].apply(this,[e.coordinates]):\"GeometryCollection\"===n?Ee[n].apply(this,[e.geometries]):Ee[n].apply(this,[e])},Ie.prototype.write=function(t){var e=t.getGeometryType();if(!xe[e])throw new Error(\"Geometry is not supported\");return xe[e].apply(this,[t])};var Ee={Feature:function(t){var e={};for(var n in t)e[n]=t[n];if(t.geometry){var i=t.geometry.type;if(!Ee[i])throw new Error(\"Unknown GeoJSON type: \"+t.type);e.geometry=this.read(t.geometry)}return t.bbox&&(e.bbox=Ee.bbox.apply(this,[t.bbox])),e},FeatureCollection:function(t){var e={};if(t.features){e.features=[];for(var n=0;n<t.features.length;++n)e.features.push(this.read(t.features[n]))}return t.bbox&&(e.bbox=this.parse.bbox.apply(this,[t.bbox])),e},coordinates:function(t){for(var e=[],n=0;n<t.length;++n){var i=t[n];e.push(new C(i[0],i[1]))}return e},bbox:function(t){return this.geometryFactory.createLinearRing([new C(t[0],t[1]),new C(t[2],t[1]),new C(t[2],t[3]),new C(t[0],t[3]),new C(t[0],t[1])])},Point:function(t){var e=new C(t[0],t[1]);return this.geometryFactory.createPoint(e)},MultiPoint:function(t){for(var e=[],n=0;n<t.length;++n)e.push(Ee.Point.apply(this,[t[n]]));return this.geometryFactory.createMultiPoint(e)},LineString:function(t){var e=Ee.coordinates.apply(this,[t]);return this.geometryFactory.createLineString(e)},MultiLineString:function(t){for(var e=[],n=0;n<t.length;++n)e.push(Ee.LineString.apply(this,[t[n]]));return this.geometryFactory.createMultiLineString(e)},Polygon:function(t){for(var e=Ee.coordinates.apply(this,[t[0]]),n=this.geometryFactory.createLinearRing(e),i=[],r=1;r<t.length;++r){var o=t[r],s=Ee.coordinates.apply(this,[o]),a=this.geometryFactory.createLinearRing(s);i.push(a)}return this.geometryFactory.createPolygon(n,i)},MultiPolygon:function(t){for(var e=[],n=0;n<t.length;++n){var i=t[n];e.push(Ee.Polygon.apply(this,[i]))}return this.geometryFactory.createMultiPolygon(e)},GeometryCollection:function(t){for(var e=[],n=0;n<t.length;++n){var i=t[n];e.push(this.read(i))}return this.geometryFactory.createGeometryCollection(e)}},xe={coordinate:function(t){return[t.x,t.y]},Point:function(t){return{type:\"Point\",coordinates:xe.coordinate.apply(this,[t.getCoordinate()])}},MultiPoint:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var i=t._geometries[n],r=xe.Point.apply(this,[i]);e.push(r.coordinates)}return{type:\"MultiPoint\",coordinates:e}},LineString:function(t){for(var e=[],n=t.getCoordinates(),i=0;i<n.length;++i){var r=n[i];e.push(xe.coordinate.apply(this,[r]))}return{type:\"LineString\",coordinates:e}},MultiLineString:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var i=t._geometries[n],r=xe.LineString.apply(this,[i]);e.push(r.coordinates)}return{type:\"MultiLineString\",coordinates:e}},Polygon:function(t){var e=[],n=xe.LineString.apply(this,[t._shell]);e.push(n.coordinates);for(var i=0;i<t._holes.length;++i){var r=t._holes[i],o=xe.LineString.apply(this,[r]);e.push(o.coordinates)}return{type:\"Polygon\",coordinates:e}},MultiPolygon:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var i=t._geometries[n],r=xe.Polygon.apply(this,[i]);e.push(r.coordinates)}return{type:\"MultiPolygon\",coordinates:e}},GeometryCollection:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var i=t._geometries[n],r=i.getGeometryType();e.push(xe[r].apply(this,[i]))}return{type:\"GeometryCollection\",geometries:e}}},Ne=function(t){this.geometryFactory=t||new _e,this.precisionModel=this.geometryFactory.getPrecisionModel(),this.parser=new Ie(this.geometryFactory)};Ne.prototype.read=function(t){var e=this.parser.read(t);return this.precisionModel.getType()===fe.FIXED&&this.reducePrecision(e),e},Ne.prototype.reducePrecision=function(t){var e,n;if(t.coordinate)this.precisionModel.makePrecise(t.coordinate);else if(t.points)for(e=0,n=t.points.length;e<n;e++)this.precisionModel.makePrecise(t.points[e]);else if(t.geometries)for(e=0,n=t.geometries.length;e<n;e++)this.reducePrecision(t.geometries[e])};var Ce=function(){this.parser=new Ie(this.geometryFactory)};Ce.prototype.write=function(t){return this.parser.write(t)};var Se=function(){},Le={ON:{configurable:!0},LEFT:{configurable:!0},RIGHT:{configurable:!0}};Se.prototype.interfaces_=function(){return[]},Se.prototype.getClass=function(){return Se},Se.opposite=function(t){return t===Se.LEFT?Se.RIGHT:t===Se.RIGHT?Se.LEFT:t},Le.ON.get=function(){return 0},Le.LEFT.get=function(){return 1},Le.RIGHT.get=function(){return 2},Object.defineProperties(Se,Le),(d.prototype=new Error).name=\"EmptyStackException\",(y.prototype=new xt).add=function(t){return this.array_.push(t),!0},y.prototype.get=function(t){if(t<0||t>=this.size())throw new Error;return this.array_[t]},y.prototype.push=function(t){return this.array_.push(t),t},y.prototype.pop=function(t){if(0===this.array_.length)throw new d;return this.array_.pop()},y.prototype.peek=function(){if(0===this.array_.length)throw new d;return this.array_[this.array_.length-1]},y.prototype.empty=function(){return 0===this.array_.length},y.prototype.isEmpty=function(){return this.empty()},y.prototype.search=function(t){return this.array_.indexOf(t)},y.prototype.size=function(){return this.array_.length},y.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t};var be=function(){this._minIndex=-1,this._minCoord=null,this._minDe=null,this._orientedDe=null};be.prototype.getCoordinate=function(){return this._minCoord},be.prototype.getRightmostSide=function(t,e){var n=this.getRightmostSideOfSegment(t,e);return n<0&&(n=this.getRightmostSideOfSegment(t,e-1)),n<0&&(this._minCoord=null,this.checkForRightmostCoordinate(t)),n},be.prototype.findRightmostEdgeAtVertex=function(){var t=this._minDe.getEdge().getCoordinates();et.isTrue(this._minIndex>0&&this._minIndex<t.length,\"rightmost point expected to be interior vertex of edge\");var e=t[this._minIndex-1],n=t[this._minIndex+1],i=at.computeOrientation(this._minCoord,n,e),r=!1;e.y<this._minCoord.y&&n.y<this._minCoord.y&&i===at.COUNTERCLOCKWISE?r=!0:e.y>this._minCoord.y&&n.y>this._minCoord.y&&i===at.CLOCKWISE&&(r=!0),r&&(this._minIndex=this._minIndex-1)},be.prototype.getRightmostSideOfSegment=function(t,e){var n=t.getEdge().getCoordinates();if(e<0||e+1>=n.length)return-1;if(n[e].y===n[e+1].y)return-1;var i=Se.LEFT;return n[e].y<n[e+1].y&&(i=Se.RIGHT),i},be.prototype.getEdge=function(){return this._orientedDe},be.prototype.checkForRightmostCoordinate=function(t){for(var e=t.getEdge().getCoordinates(),n=0;n<e.length-1;n++)(null===this._minCoord||e[n].x>this._minCoord.x)&&(this._minDe=t,this._minIndex=n,this._minCoord=e[n])},be.prototype.findRightmostEdgeAtNode=function(){var t=this._minDe.getNode().getEdges();this._minDe=t.getRightmostEdge(),this._minDe.isForward()||(this._minDe=this._minDe.getSym(),this._minIndex=this._minDe.getEdge().getCoordinates().length-1)},be.prototype.findEdge=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();n.isForward()&&this.checkForRightmostCoordinate(n)}et.isTrue(0!==this._minIndex||this._minCoord.equals(this._minDe.getCoordinate()),\"inconsistency in rightmost processing\"),0===this._minIndex?this.findRightmostEdgeAtNode():this.findRightmostEdgeAtVertex(),this._orientedDe=this._minDe;this.getRightmostSide(this._minDe,this._minIndex)===Se.LEFT&&(this._orientedDe=this._minDe.getSym())},be.prototype.interfaces_=function(){return[]},be.prototype.getClass=function(){return be};var we=function(t){function e(n,i){t.call(this,e.msgWithCoord(n,i)),this.pt=i?new C(i):null,this.name=\"TopologyException\"}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.getCoordinate=function(){return this.pt},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.msgWithCoord=function(t,e){return e?t:t+\" [ \"+e+\" ]\"},e}($),Oe=function(){this.array_=[]};Oe.prototype.addLast=function(t){this.array_.push(t)},Oe.prototype.removeFirst=function(){return this.array_.shift()},Oe.prototype.isEmpty=function(){return 0===this.array_.length};var Te=function(){this._finder=null,this._dirEdgeList=new Nt,this._nodes=new Nt,this._rightMostCoord=null,this._env=null,this._finder=new be};Te.prototype.clearVisitedEdges=function(){for(var t=this._dirEdgeList.iterator();t.hasNext();){t.next().setVisited(!1)}},Te.prototype.getRightmostCoordinate=function(){return this._rightMostCoord},Te.prototype.computeNodeDepth=function(t){for(var e=null,n=t.getEdges().iterator();n.hasNext();){var i=n.next();if(i.isVisited()||i.getSym().isVisited()){e=i;break}}if(null===e)throw new we(\"unable to find edge to compute depths at \"+t.getCoordinate());t.getEdges().computeDepths(e);for(var r=t.getEdges().iterator();r.hasNext();){var o=r.next();o.setVisited(!0),this.copySymDepths(o)}},Te.prototype.computeDepth=function(t){this.clearVisitedEdges();var e=this._finder.getEdge();e.setEdgeDepths(Se.RIGHT,t),this.copySymDepths(e),this.computeDepths(e)},Te.prototype.create=function(t){this.addReachable(t),this._finder.findEdge(this._dirEdgeList),this._rightMostCoord=this._finder.getCoordinate()},Te.prototype.findResultEdges=function(){for(var t=this._dirEdgeList.iterator();t.hasNext();){var e=t.next();e.getDepth(Se.RIGHT)>=1&&e.getDepth(Se.LEFT)<=0&&!e.isInteriorAreaEdge()&&e.setInResult(!0)}},Te.prototype.computeDepths=function(t){var e=new Pt,n=new Oe,i=t.getNode();for(n.addLast(i),e.add(i),t.setVisited(!0);!n.isEmpty();){var r=n.removeFirst();e.add(r),this.computeNodeDepth(r);for(var o=r.getEdges().iterator();o.hasNext();){var s=o.next().getSym();if(!s.isVisited()){var a=s.getNode();e.contains(a)||(n.addLast(a),e.add(a))}}}},Te.prototype.compareTo=function(t){var e=t;return this._rightMostCoord.x<e._rightMostCoord.x?-1:this._rightMostCoord.x>e._rightMostCoord.x?1:0},Te.prototype.getEnvelope=function(){if(null===this._env){for(var t=new j,e=this._dirEdgeList.iterator();e.hasNext();)for(var n=e.next().getEdge().getCoordinates(),i=0;i<n.length-1;i++)t.expandToInclude(n[i]);this._env=t}return this._env},Te.prototype.addReachable=function(t){var e=new y;for(e.add(t);!e.empty();){var n=e.pop();this.add(n,e)}},Te.prototype.copySymDepths=function(t){var e=t.getSym();e.setDepth(Se.LEFT,t.getDepth(Se.RIGHT)),e.setDepth(Se.RIGHT,t.getDepth(Se.LEFT))},Te.prototype.add=function(t,e){t.setVisited(!0),this._nodes.add(t);for(var n=t.getEdges().iterator();n.hasNext();){var i=n.next();this._dirEdgeList.add(i);var r=i.getSym().getNode();r.isVisited()||e.push(r)}},Te.prototype.getNodes=function(){return this._nodes},Te.prototype.getDirectedEdges=function(){return this._dirEdgeList},Te.prototype.interfaces_=function(){return[E]},Te.prototype.getClass=function(){return Te};var Re=function t(){if(this.location=null,1===arguments.length){if(arguments[0]instanceof Array){var e=arguments[0];this.init(e.length)}else if(Number.isInteger(arguments[0])){var n=arguments[0];this.init(1),this.location[Se.ON]=n}else if(arguments[0]instanceof t){var i=arguments[0];if(this.init(i.location.length),null!==i)for(var r=0;r<this.location.length;r++)this.location[r]=i.location[r]}}else if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2];this.init(3),this.location[Se.ON]=o,this.location[Se.LEFT]=s,this.location[Se.RIGHT]=a}};Re.prototype.setAllLocations=function(t){for(var e=0;e<this.location.length;e++)this.location[e]=t},Re.prototype.isNull=function(){for(var t=0;t<this.location.length;t++)if(this.location[t]!==w.NONE)return!1;return!0},Re.prototype.setAllLocationsIfNull=function(t){for(var e=0;e<this.location.length;e++)this.location[e]===w.NONE&&(this.location[e]=t)},Re.prototype.isLine=function(){return 1===this.location.length},Re.prototype.merge=function(t){if(t.location.length>this.location.length){var e=new Array(3).fill(null);e[Se.ON]=this.location[Se.ON],e[Se.LEFT]=w.NONE,e[Se.RIGHT]=w.NONE,this.location=e}for(var n=0;n<this.location.length;n++)this.location[n]===w.NONE&&n<t.location.length&&(this.location[n]=t.location[n])},Re.prototype.getLocations=function(){return this.location},Re.prototype.flip=function(){if(this.location.length<=1)return null;var t=this.location[Se.LEFT];this.location[Se.LEFT]=this.location[Se.RIGHT],this.location[Se.RIGHT]=t},Re.prototype.toString=function(){var t=new D;return this.location.length>1&&t.append(w.toLocationSymbol(this.location[Se.LEFT])),t.append(w.toLocationSymbol(this.location[Se.ON])),this.location.length>1&&t.append(w.toLocationSymbol(this.location[Se.RIGHT])),t.toString()},Re.prototype.setLocations=function(t,e,n){this.location[Se.ON]=t,this.location[Se.LEFT]=e,this.location[Se.RIGHT]=n},Re.prototype.get=function(t){return t<this.location.length?this.location[t]:w.NONE},Re.prototype.isArea=function(){return this.location.length>1},Re.prototype.isAnyNull=function(){for(var t=0;t<this.location.length;t++)if(this.location[t]===w.NONE)return!0;return!1},Re.prototype.setLocation=function(){if(1===arguments.length){var t=arguments[0];this.setLocation(Se.ON,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.location[e]=n}},Re.prototype.init=function(t){this.location=new Array(t).fill(null),this.setAllLocations(w.NONE)},Re.prototype.isEqualOnSide=function(t,e){return this.location[e]===t.location[e]},Re.prototype.allPositionsEqual=function(t){for(var e=0;e<this.location.length;e++)if(this.location[e]!==t)return!1;return!0},Re.prototype.interfaces_=function(){return[]},Re.prototype.getClass=function(){return Re};var Pe=function t(){if(this.elt=new Array(2).fill(null),1===arguments.length){if(Number.isInteger(arguments[0])){var e=arguments[0];this.elt[0]=new Re(e),this.elt[1]=new Re(e)}else if(arguments[0]instanceof t){var n=arguments[0];this.elt[0]=new Re(n.elt[0]),this.elt[1]=new Re(n.elt[1])}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];this.elt[0]=new Re(w.NONE),this.elt[1]=new Re(w.NONE),this.elt[i].setLocation(r)}else if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2];this.elt[0]=new Re(o,s,a),this.elt[1]=new Re(o,s,a)}else if(4===arguments.length){var u=arguments[0],l=arguments[1],c=arguments[2],p=arguments[3];this.elt[0]=new Re(w.NONE,w.NONE,w.NONE),this.elt[1]=new Re(w.NONE,w.NONE,w.NONE),this.elt[u].setLocations(l,c,p)}};Pe.prototype.getGeometryCount=function(){var t=0;return this.elt[0].isNull()||t++,this.elt[1].isNull()||t++,t},Pe.prototype.setAllLocations=function(t,e){this.elt[t].setAllLocations(e)},Pe.prototype.isNull=function(t){return this.elt[t].isNull()},Pe.prototype.setAllLocationsIfNull=function(){if(1===arguments.length){var t=arguments[0];this.setAllLocationsIfNull(0,t),this.setAllLocationsIfNull(1,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.elt[e].setAllLocationsIfNull(n)}},Pe.prototype.isLine=function(t){return this.elt[t].isLine()},Pe.prototype.merge=function(t){for(var e=0;e<2;e++)null===this.elt[e]&&null!==t.elt[e]?this.elt[e]=new Re(t.elt[e]):this.elt[e].merge(t.elt[e])},Pe.prototype.flip=function(){this.elt[0].flip(),this.elt[1].flip()},Pe.prototype.getLocation=function(){if(1===arguments.length){var t=arguments[0];return this.elt[t].get(Se.ON)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return this.elt[e].get(n)}},Pe.prototype.toString=function(){var t=new D;return null!==this.elt[0]&&(t.append(\"A:\"),t.append(this.elt[0].toString())),null!==this.elt[1]&&(t.append(\" B:\"),t.append(this.elt[1].toString())),t.toString()},Pe.prototype.isArea=function(){if(0===arguments.length)return this.elt[0].isArea()||this.elt[1].isArea();if(1===arguments.length){var t=arguments[0];return this.elt[t].isArea()}},Pe.prototype.isAnyNull=function(t){return this.elt[t].isAnyNull()},Pe.prototype.setLocation=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.elt[t].setLocation(Se.ON,e)}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this.elt[n].setLocation(i,r)}},Pe.prototype.isEqualOnSide=function(t,e){return this.elt[0].isEqualOnSide(t.elt[0],e)&&this.elt[1].isEqualOnSide(t.elt[1],e)},Pe.prototype.allPositionsEqual=function(t,e){return this.elt[t].allPositionsEqual(e)},Pe.prototype.toLine=function(t){this.elt[t].isArea()&&(this.elt[t]=new Re(this.elt[t].location[0]))},Pe.prototype.interfaces_=function(){return[]},Pe.prototype.getClass=function(){return Pe},Pe.toLineLabel=function(t){for(var e=new Pe(w.NONE),n=0;n<2;n++)e.setLocation(n,t.getLocation(n));return e};var De=function(){this._startDe=null,this._maxNodeDegree=-1,this._edges=new Nt,this._pts=new Nt,this._label=new Pe(w.NONE),this._ring=null,this._isHole=null,this._shell=null,this._holes=new Nt,this._geometryFactory=null;var t=arguments[0],e=arguments[1];this._geometryFactory=e,this.computePoints(t),this.computeRing()};De.prototype.computeRing=function(){if(null!==this._ring)return null;for(var t=new Array(this._pts.size()).fill(null),e=0;e<this._pts.size();e++)t[e]=this._pts.get(e);this._ring=this._geometryFactory.createLinearRing(t),this._isHole=at.isCCW(this._ring.getCoordinates())},De.prototype.isIsolated=function(){return 1===this._label.getGeometryCount()},De.prototype.computePoints=function(t){this._startDe=t;var e=t,n=!0;do{if(null===e)throw new we(\"Found null DirectedEdge\");if(e.getEdgeRing()===this)throw new we(\"Directed Edge visited twice during ring-building at \"+e.getCoordinate());this._edges.add(e);var i=e.getLabel();et.isTrue(i.isArea()),this.mergeLabel(i),this.addPoints(e.getEdge(),e.isForward(),n),n=!1,this.setEdgeRing(e,this),e=this.getNext(e)}while(e!==this._startDe)},De.prototype.getLinearRing=function(){return this._ring},De.prototype.getCoordinate=function(t){return this._pts.get(t)},De.prototype.computeMaxNodeDegree=function(){this._maxNodeDegree=0;var t=this._startDe;do{var e=t.getNode().getEdges().getOutgoingDegree(this);e>this._maxNodeDegree&&(this._maxNodeDegree=e),t=this.getNext(t)}while(t!==this._startDe);this._maxNodeDegree*=2},De.prototype.addPoints=function(t,e,n){var i=t.getCoordinates();if(e){var r=1;n&&(r=0);for(var o=r;o<i.length;o++)this._pts.add(i[o])}else{var s=i.length-2;n&&(s=i.length-1);for(var a=s;a>=0;a--)this._pts.add(i[a])}},De.prototype.isHole=function(){return this._isHole},De.prototype.setInResult=function(){var t=this._startDe;do{t.getEdge().setInResult(!0),t=t.getNext()}while(t!==this._startDe)},De.prototype.containsPoint=function(t){var e=this.getLinearRing();if(!e.getEnvelopeInternal().contains(t))return!1;if(!at.isPointInRing(t,e.getCoordinates()))return!1;for(var n=this._holes.iterator();n.hasNext();){if(n.next().containsPoint(t))return!1}return!0},De.prototype.addHole=function(t){this._holes.add(t)},De.prototype.isShell=function(){return null===this._shell},De.prototype.getLabel=function(){return this._label},De.prototype.getEdges=function(){return this._edges},De.prototype.getMaxNodeDegree=function(){return this._maxNodeDegree<0&&this.computeMaxNodeDegree(),this._maxNodeDegree},De.prototype.getShell=function(){return this._shell},De.prototype.mergeLabel=function(){if(1===arguments.length){var t=arguments[0];this.mergeLabel(t,0),this.mergeLabel(t,1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],i=e.getLocation(n,Se.RIGHT);if(i===w.NONE)return null;if(this._label.getLocation(n)===w.NONE)return this._label.setLocation(n,i),null}},De.prototype.setShell=function(t){this._shell=t,null!==t&&t.addHole(this)},De.prototype.toPolygon=function(t){for(var e=new Array(this._holes.size()).fill(null),n=0;n<this._holes.size();n++)e[n]=this._holes.get(n).getLinearRing();return t.createPolygon(this.getLinearRing(),e)},De.prototype.interfaces_=function(){return[]},De.prototype.getClass=function(){return De};var Me=function(t){function e(){var e=arguments[0],n=arguments[1];t.call(this,e,n)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.setEdgeRing=function(t,e){t.setMinEdgeRing(e)},e.prototype.getNext=function(t){return t.getNextMin()},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(De),Ae=function(t){function e(){var e=arguments[0],n=arguments[1];t.call(this,e,n)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.buildMinimalRings=function(){var t=new Nt,e=this._startDe;do{if(null===e.getMinEdgeRing()){var n=new Me(e,this._geometryFactory);t.add(n)}e=e.getNext()}while(e!==this._startDe);return t},e.prototype.setEdgeRing=function(t,e){t.setEdgeRing(e)},e.prototype.linkDirectedEdgesForMinimalEdgeRings=function(){var t=this._startDe;do{t.getNode().getEdges().linkMinimalDirectedEdges(this),t=t.getNext()}while(t!==this._startDe)},e.prototype.getNext=function(t){return t.getNext()},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(De),Fe=function(){if(this._label=null,this._isInResult=!1,this._isCovered=!1,this._isCoveredSet=!1,this._isVisited=!1,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this._label=t}};Fe.prototype.setVisited=function(t){this._isVisited=t},Fe.prototype.setInResult=function(t){this._isInResult=t},Fe.prototype.isCovered=function(){return this._isCovered},Fe.prototype.isCoveredSet=function(){return this._isCoveredSet},Fe.prototype.setLabel=function(t){this._label=t},Fe.prototype.getLabel=function(){return this._label},Fe.prototype.setCovered=function(t){this._isCovered=t,this._isCoveredSet=!0},Fe.prototype.updateIM=function(t){et.isTrue(this._label.getGeometryCount()>=2,\"found partial label\"),this.computeIM(t)},Fe.prototype.isInResult=function(){return this._isInResult},Fe.prototype.isVisited=function(){return this._isVisited},Fe.prototype.interfaces_=function(){return[]},Fe.prototype.getClass=function(){return Fe};var Ge=function(t){function e(){t.call(this),this._coord=null,this._edges=null;var e=arguments[0],n=arguments[1];this._coord=e,this._edges=n,this._label=new Pe(0,w.NONE)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.isIncidentEdgeInResult=function(){for(var t=this.getEdges().getEdges().iterator();t.hasNext();){if(t.next().getEdge().isInResult())return!0}return!1},e.prototype.isIsolated=function(){return 1===this._label.getGeometryCount()},e.prototype.getCoordinate=function(){return this._coord},e.prototype.print=function(t){t.println(\"node \"+this._coord+\" lbl: \"+this._label)},e.prototype.computeIM=function(t){},e.prototype.computeMergedLocation=function(t,e){var n=w.NONE;if(n=this._label.getLocation(e),!t.isNull(e)){var i=t.getLocation(e);n!==w.BOUNDARY&&(n=i)}return n},e.prototype.setLabel=function(){if(2!==arguments.length)return t.prototype.setLabel.apply(this,arguments);var e=arguments[0],n=arguments[1];null===this._label?this._label=new Pe(e,n):this._label.setLocation(e,n)},e.prototype.getEdges=function(){return this._edges},e.prototype.mergeLabel=function(){if(arguments[0]instanceof e){var t=arguments[0];this.mergeLabel(t._label)}else if(arguments[0]instanceof Pe)for(var n=arguments[0],i=0;i<2;i++){var r=this.computeMergedLocation(n,i);this._label.getLocation(i)===w.NONE&&this._label.setLocation(i,r)}},e.prototype.add=function(t){this._edges.insert(t),t.setNode(this)},e.prototype.setLabelBoundary=function(t){if(null===this._label)return null;var e=w.NONE;null!==this._label&&(e=this._label.getLocation(t));var n=null;switch(e){case w.BOUNDARY:n=w.INTERIOR;break;case w.INTERIOR:default:n=w.BOUNDARY}this._label.setLocation(t,n)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Fe),qe=function(){this.nodeMap=new p,this.nodeFact=null;var t=arguments[0];this.nodeFact=t};qe.prototype.find=function(t){return this.nodeMap.get(t)},qe.prototype.addNode=function(){if(arguments[0]instanceof C){var t=arguments[0],e=this.nodeMap.get(t);return null===e&&(e=this.nodeFact.createNode(t),this.nodeMap.put(t,e)),e}if(arguments[0]instanceof Ge){var n=arguments[0],i=this.nodeMap.get(n.getCoordinate());return null===i?(this.nodeMap.put(n.getCoordinate(),n),n):(i.mergeLabel(n),i)}},qe.prototype.print=function(t){for(var e=this.iterator();e.hasNext();){e.next().print(t)}},qe.prototype.iterator=function(){return this.nodeMap.values().iterator()},qe.prototype.values=function(){return this.nodeMap.values()},qe.prototype.getBoundaryNodes=function(t){for(var e=new Nt,n=this.iterator();n.hasNext();){var i=n.next();i.getLabel().getLocation(t)===w.BOUNDARY&&e.add(i)}return e},qe.prototype.add=function(t){var e=t.getCoordinate();this.addNode(e).add(t)},qe.prototype.interfaces_=function(){return[]},qe.prototype.getClass=function(){return qe};var Be=function(){},Ve={NE:{configurable:!0},NW:{configurable:!0},SW:{configurable:!0},SE:{configurable:!0}};Be.prototype.interfaces_=function(){return[]},Be.prototype.getClass=function(){return Be},Be.isNorthern=function(t){return t===Be.NE||t===Be.NW},Be.isOpposite=function(t,e){if(t===e)return!1;return 2===(t-e+4)%4},Be.commonHalfPlane=function(t,e){if(t===e)return t;if(2===(t-e+4)%4)return-1;var n=t<e?t:e;return 0===n&&3===(t>e?t:e)?3:n},Be.isInHalfPlane=function(t,e){return e===Be.SE?t===Be.SE||t===Be.SW:t===e||t===e+1},Be.quadrant=function(){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new m(\"Cannot compute the quadrant for point ( \"+t+\", \"+e+\" )\");return t>=0?e>=0?Be.NE:Be.SE:e>=0?Be.NW:Be.SW}if(arguments[0]instanceof C&&arguments[1]instanceof C){var n=arguments[0],i=arguments[1];if(i.x===n.x&&i.y===n.y)throw new m(\"Cannot compute the quadrant for two identical points \"+n);return i.x>=n.x?i.y>=n.y?Be.NE:Be.SE:i.y>=n.y?Be.NW:Be.SW}},Ve.NE.get=function(){return 0},Ve.NW.get=function(){return 1},Ve.SW.get=function(){return 2},Ve.SE.get=function(){return 3},Object.defineProperties(Be,Ve);var Ue=function(){if(this._edge=null,this._label=null,this._node=null,this._p0=null,this._p1=null,this._dx=null,this._dy=null,this._quadrant=null,1===arguments.length){var t=arguments[0];this._edge=t}else if(3===arguments.length){var e=arguments[0],n=arguments[1],i=arguments[2];this._edge=e,this.init(n,i),this._label=null}else if(4===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3];this._edge=r,this.init(o,s),this._label=a}};Ue.prototype.compareDirection=function(t){return this._dx===t._dx&&this._dy===t._dy?0:this._quadrant>t._quadrant?1:this._quadrant<t._quadrant?-1:at.computeOrientation(t._p0,t._p1,this._p1)},Ue.prototype.getDy=function(){return this._dy},Ue.prototype.getCoordinate=function(){return this._p0},Ue.prototype.setNode=function(t){this._node=t},Ue.prototype.print=function(t){var e=Math.atan2(this._dy,this._dx),n=this.getClass().getName(),i=n.lastIndexOf(\".\"),r=n.substring(i+1);t.print(\"  \"+r+\": \"+this._p0+\" - \"+this._p1+\" \"+this._quadrant+\":\"+e+\"   \"+this._label)},Ue.prototype.compareTo=function(t){var e=t;return this.compareDirection(e)},Ue.prototype.getDirectedCoordinate=function(){return this._p1},Ue.prototype.getDx=function(){return this._dx},Ue.prototype.getLabel=function(){return this._label},Ue.prototype.getEdge=function(){return this._edge},Ue.prototype.getQuadrant=function(){return this._quadrant},Ue.prototype.getNode=function(){return this._node},Ue.prototype.toString=function(){var t=Math.atan2(this._dy,this._dx),e=this.getClass().getName(),n=e.lastIndexOf(\".\");return\"  \"+e.substring(n+1)+\": \"+this._p0+\" - \"+this._p1+\" \"+this._quadrant+\":\"+t+\"   \"+this._label},Ue.prototype.computeLabel=function(t){},Ue.prototype.init=function(t,e){this._p0=t,this._p1=e,this._dx=e.x-t.x,this._dy=e.y-t.y,this._quadrant=Be.quadrant(this._dx,this._dy),et.isTrue(!(0===this._dx&&0===this._dy),\"EdgeEnd with identical endpoints found\")},Ue.prototype.interfaces_=function(){return[E]},Ue.prototype.getClass=function(){return Ue};var ze=function(t){function e(){var e=arguments[0],n=arguments[1];if(t.call(this,e),this._isForward=null,this._isInResult=!1,this._isVisited=!1,this._sym=null,this._next=null,this._nextMin=null,this._edgeRing=null,this._minEdgeRing=null,this._depth=[0,-999,-999],this._isForward=n,n)this.init(e.getCoordinate(0),e.getCoordinate(1));else{var i=e.getNumPoints()-1;this.init(e.getCoordinate(i),e.getCoordinate(i-1))}this.computeDirectedLabel()}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.getNextMin=function(){return this._nextMin},e.prototype.getDepth=function(t){return this._depth[t]},e.prototype.setVisited=function(t){this._isVisited=t},e.prototype.computeDirectedLabel=function(){this._label=new Pe(this._edge.getLabel()),this._isForward||this._label.flip()},e.prototype.getNext=function(){return this._next},e.prototype.setDepth=function(t,e){if(-999!==this._depth[t]&&this._depth[t]!==e)throw new we(\"assigned depths do not match\",this.getCoordinate());this._depth[t]=e},e.prototype.isInteriorAreaEdge=function(){for(var t=!0,e=0;e<2;e++)this._label.isArea(e)&&this._label.getLocation(e,Se.LEFT)===w.INTERIOR&&this._label.getLocation(e,Se.RIGHT)===w.INTERIOR||(t=!1);return t},e.prototype.setNextMin=function(t){this._nextMin=t},e.prototype.print=function(e){t.prototype.print.call(this,e),e.print(\" \"+this._depth[Se.LEFT]+\"/\"+this._depth[Se.RIGHT]),e.print(\" (\"+this.getDepthDelta()+\")\"),this._isInResult&&e.print(\" inResult\")},e.prototype.setMinEdgeRing=function(t){this._minEdgeRing=t},e.prototype.isLineEdge=function(){var t=this._label.isLine(0)||this._label.isLine(1),e=!this._label.isArea(0)||this._label.allPositionsEqual(0,w.EXTERIOR),n=!this._label.isArea(1)||this._label.allPositionsEqual(1,w.EXTERIOR);return t&&e&&n},e.prototype.setEdgeRing=function(t){this._edgeRing=t},e.prototype.getMinEdgeRing=function(){return this._minEdgeRing},e.prototype.getDepthDelta=function(){var t=this._edge.getDepthDelta();return this._isForward||(t=-t),t},e.prototype.setInResult=function(t){this._isInResult=t},e.prototype.getSym=function(){return this._sym},e.prototype.isForward=function(){return this._isForward},e.prototype.getEdge=function(){return this._edge},e.prototype.printEdge=function(t){this.print(t),t.print(\" \"),this._isForward?this._edge.print(t):this._edge.printReverse(t)},e.prototype.setSym=function(t){this._sym=t},e.prototype.setVisitedEdge=function(t){this.setVisited(t),this._sym.setVisited(t)},e.prototype.setEdgeDepths=function(t,e){var n=this.getEdge().getDepthDelta();this._isForward||(n=-n);var i=1;t===Se.LEFT&&(i=-1);var r=Se.opposite(t),o=e+n*i;this.setDepth(t,e),this.setDepth(r,o)},e.prototype.getEdgeRing=function(){return this._edgeRing},e.prototype.isInResult=function(){return this._isInResult},e.prototype.setNext=function(t){this._next=t},e.prototype.isVisited=function(){return this._isVisited},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.depthFactor=function(t,e){return t===w.EXTERIOR&&e===w.INTERIOR?1:t===w.INTERIOR&&e===w.EXTERIOR?-1:0},e}(Ue),Xe=function(){};Xe.prototype.createNode=function(t){return new Ge(t,null)},Xe.prototype.interfaces_=function(){return[]},Xe.prototype.getClass=function(){return Xe};var Ye=function(){if(this._edges=new Nt,this._nodes=null,this._edgeEndList=new Nt,0===arguments.length)this._nodes=new qe(new Xe);else if(1===arguments.length){var t=arguments[0];this._nodes=new qe(t)}};Ye.prototype.printEdges=function(t){t.println(\"Edges:\");for(var e=0;e<this._edges.size();e++){t.println(\"edge \"+e+\":\");var n=this._edges.get(e);n.print(t),n.eiList.print(t)}},Ye.prototype.find=function(t){return this._nodes.find(t)},Ye.prototype.addNode=function(){if(arguments[0]instanceof Ge){var t=arguments[0];return this._nodes.addNode(t)}if(arguments[0]instanceof C){var e=arguments[0];return this._nodes.addNode(e)}},Ye.prototype.getNodeIterator=function(){return this._nodes.iterator()},Ye.prototype.linkResultDirectedEdges=function(){for(var t=this._nodes.iterator();t.hasNext();){t.next().getEdges().linkResultDirectedEdges()}},Ye.prototype.debugPrintln=function(t){Y.out.println(t)},Ye.prototype.isBoundaryNode=function(t,e){var n=this._nodes.find(e);if(null===n)return!1;var i=n.getLabel();return null!==i&&i.getLocation(t)===w.BOUNDARY},Ye.prototype.linkAllDirectedEdges=function(){for(var t=this._nodes.iterator();t.hasNext();){t.next().getEdges().linkAllDirectedEdges()}},Ye.prototype.matchInSameDirection=function(t,e,n,i){return!!t.equals(n)&&(at.computeOrientation(t,e,i)===at.COLLINEAR&&Be.quadrant(t,e)===Be.quadrant(n,i))},Ye.prototype.getEdgeEnds=function(){return this._edgeEndList},Ye.prototype.debugPrint=function(t){Y.out.print(t)},Ye.prototype.getEdgeIterator=function(){return this._edges.iterator()},Ye.prototype.findEdgeInSameDirection=function(t,e){for(var n=0;n<this._edges.size();n++){var i=this._edges.get(n),r=i.getCoordinates();if(this.matchInSameDirection(t,e,r[0],r[1]))return i;if(this.matchInSameDirection(t,e,r[r.length-1],r[r.length-2]))return i}return null},Ye.prototype.insertEdge=function(t){this._edges.add(t)},Ye.prototype.findEdgeEnd=function(t){for(var e=this.getEdgeEnds().iterator();e.hasNext();){var n=e.next();if(n.getEdge()===t)return n}return null},Ye.prototype.addEdges=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this._edges.add(n);var i=new ze(n,!0),r=new ze(n,!1);i.setSym(r),r.setSym(i),this.add(i),this.add(r)}},Ye.prototype.add=function(t){this._nodes.add(t),this._edgeEndList.add(t)},Ye.prototype.getNodes=function(){return this._nodes.values()},Ye.prototype.findEdge=function(t,e){for(var n=0;n<this._edges.size();n++){var i=this._edges.get(n),r=i.getCoordinates();if(t.equals(r[0])&&e.equals(r[1]))return i}return null},Ye.prototype.interfaces_=function(){return[]},Ye.prototype.getClass=function(){return Ye},Ye.linkResultDirectedEdges=function(t){for(var e=t.iterator();e.hasNext();){e.next().getEdges().linkResultDirectedEdges()}};var ke=function(){this._geometryFactory=null,this._shellList=new Nt;var t=arguments[0];this._geometryFactory=t};ke.prototype.sortShellsAndHoles=function(t,e,n){for(var i=t.iterator();i.hasNext();){var r=i.next();r.isHole()?n.add(r):e.add(r)}},ke.prototype.computePolygons=function(t){for(var e=new Nt,n=t.iterator();n.hasNext();){var i=n.next().toPolygon(this._geometryFactory);e.add(i)}return e},ke.prototype.placeFreeHoles=function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next();if(null===i.getShell()){var r=this.findEdgeRingContaining(i,t);if(null===r)throw new we(\"unable to assign hole to a shell\",i.getCoordinate(0));i.setShell(r)}}},ke.prototype.buildMinimalEdgeRings=function(t,e,n){for(var i=new Nt,r=t.iterator();r.hasNext();){var o=r.next();if(o.getMaxNodeDegree()>2){o.linkDirectedEdgesForMinimalEdgeRings();var s=o.buildMinimalRings(),a=this.findShell(s);null!==a?(this.placePolygonHoles(a,s),e.add(a)):n.addAll(s)}else i.add(o)}return i},ke.prototype.containsPoint=function(t){for(var e=this._shellList.iterator();e.hasNext();){if(e.next().containsPoint(t))return!0}return!1},ke.prototype.buildMaximalEdgeRings=function(t){for(var e=new Nt,n=t.iterator();n.hasNext();){var i=n.next();if(i.isInResult()&&i.getLabel().isArea()&&null===i.getEdgeRing()){var r=new Ae(i,this._geometryFactory);e.add(r),r.setInResult()}}return e},ke.prototype.placePolygonHoles=function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next();i.isHole()&&i.setShell(t)}},ke.prototype.getPolygons=function(){return this.computePolygons(this._shellList)},ke.prototype.findEdgeRingContaining=function(t,e){for(var n=t.getLinearRing(),i=n.getEnvelopeInternal(),r=n.getCoordinateN(0),o=null,s=null,a=e.iterator();a.hasNext();){var u=a.next(),l=u.getLinearRing(),c=l.getEnvelopeInternal();null!==o&&(s=o.getLinearRing().getEnvelopeInternal());var p=!1;c.contains(i)&&at.isPointInRing(r,l.getCoordinates())&&(p=!0),p&&(null===o||s.contains(c))&&(o=u)}return o},ke.prototype.findShell=function(t){for(var e=0,n=null,i=t.iterator();i.hasNext();){var r=i.next();r.isHole()||(n=r,e++)}return et.isTrue(e<=1,\"found two shells in MinimalEdgeRing list\"),n},ke.prototype.add=function(){if(1===arguments.length){var t=arguments[0];this.add(t.getEdgeEnds(),t.getNodes())}else if(2===arguments.length){var e=arguments[0],n=arguments[1];Ye.linkResultDirectedEdges(n);var i=this.buildMaximalEdgeRings(e),r=new Nt,o=this.buildMinimalEdgeRings(i,this._shellList,r);this.sortShellsAndHoles(o,this._shellList,r),this.placeFreeHoles(this._shellList,r)}},ke.prototype.interfaces_=function(){return[]},ke.prototype.getClass=function(){return ke};var je=function(){};je.prototype.getBounds=function(){},je.prototype.interfaces_=function(){return[]},je.prototype.getClass=function(){return je};var He=function(){this._bounds=null,this._item=null;var t=arguments[0],e=arguments[1];this._bounds=t,this._item=e};He.prototype.getItem=function(){return this._item},He.prototype.getBounds=function(){return this._bounds},He.prototype.interfaces_=function(){return[je,e]},He.prototype.getClass=function(){return He};var We=function(){this._size=null,this._items=null,this._size=0,this._items=new Nt,this._items.add(null)};We.prototype.poll=function(){if(this.isEmpty())return null;var t=this._items.get(1);return this._items.set(1,this._items.get(this._size)),this._size-=1,this.reorder(1),t},We.prototype.size=function(){return this._size},We.prototype.reorder=function(t){for(var e=null,n=this._items.get(t);2*t<=this._size&&((e=2*t)!==this._size&&this._items.get(e+1).compareTo(this._items.get(e))<0&&e++,this._items.get(e).compareTo(n)<0);t=e)this._items.set(t,this._items.get(e));this._items.set(t,n)},We.prototype.clear=function(){this._size=0,this._items.clear()},We.prototype.isEmpty=function(){return 0===this._size},We.prototype.add=function(t){this._items.add(null),this._size+=1;var e=this._size;for(this._items.set(0,t);t.compareTo(this._items.get(Math.trunc(e/2)))<0;e/=2)this._items.set(e,this._items.get(Math.trunc(e/2)));this._items.set(e,t)},We.prototype.interfaces_=function(){return[]},We.prototype.getClass=function(){return We};var Ke=function(){};Ke.prototype.visitItem=function(t){},Ke.prototype.interfaces_=function(){return[]},Ke.prototype.getClass=function(){return Ke};var Je=function(){};Je.prototype.insert=function(t,e){},Je.prototype.remove=function(t,e){},Je.prototype.query=function(){},Je.prototype.interfaces_=function(){return[]},Je.prototype.getClass=function(){return Je};var Qe=function(){if(this._childBoundables=new Nt,this._bounds=null,this._level=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this._level=t}},Ze={serialVersionUID:{configurable:!0}};Qe.prototype.getLevel=function(){return this._level},Qe.prototype.size=function(){return this._childBoundables.size()},Qe.prototype.getChildBoundables=function(){return this._childBoundables},Qe.prototype.addChildBoundable=function(t){et.isTrue(null===this._bounds),this._childBoundables.add(t)},Qe.prototype.isEmpty=function(){return this._childBoundables.isEmpty()},Qe.prototype.getBounds=function(){return null===this._bounds&&(this._bounds=this.computeBounds()),this._bounds},Qe.prototype.interfaces_=function(){return[je,e]},Qe.prototype.getClass=function(){return Qe},Ze.serialVersionUID.get=function(){return 0x5a1e55ec41369800},Object.defineProperties(Qe,Ze);var $e=function(){};$e.reverseOrder=function(){return{compare:function(t,e){return e.compareTo(t)}}},$e.min=function(t){return $e.sort(t),t.get(0)},$e.sort=function(t,e){var n=t.toArray();e?Gt.sort(n,e):Gt.sort(n);for(var i=t.iterator(),r=0,o=n.length;r<o;r++)i.next(),i.set(n[r])},$e.singletonList=function(t){var e=new Nt;return e.add(t),e};var tn=function(){this._boundable1=null,this._boundable2=null,this._distance=null,this._itemDistance=null;var t=arguments[0],e=arguments[1],n=arguments[2];this._boundable1=t,this._boundable2=e,this._itemDistance=n,this._distance=this.distance()};tn.prototype.expandToQueue=function(t,e){var n=tn.isComposite(this._boundable1),i=tn.isComposite(this._boundable2);if(n&&i)return tn.area(this._boundable1)>tn.area(this._boundable2)?(this.expand(this._boundable1,this._boundable2,t,e),null):(this.expand(this._boundable2,this._boundable1,t,e),null);if(n)return this.expand(this._boundable1,this._boundable2,t,e),null;if(i)return this.expand(this._boundable2,this._boundable1,t,e),null;throw new m(\"neither boundable is composite\")},tn.prototype.isLeaves=function(){return!(tn.isComposite(this._boundable1)||tn.isComposite(this._boundable2))},tn.prototype.compareTo=function(t){var e=t;return this._distance<e._distance?-1:this._distance>e._distance?1:0},tn.prototype.expand=function(t,e,n,i){for(var r=t.getChildBoundables().iterator();r.hasNext();){var o=r.next(),s=new tn(o,e,this._itemDistance);s.getDistance()<i&&n.add(s)}},tn.prototype.getBoundable=function(t){return 0===t?this._boundable1:this._boundable2},tn.prototype.getDistance=function(){return this._distance},tn.prototype.distance=function(){return this.isLeaves()?this._itemDistance.distance(this._boundable1,this._boundable2):this._boundable1.getBounds().distance(this._boundable2.getBounds())},tn.prototype.interfaces_=function(){return[E]},tn.prototype.getClass=function(){return tn},tn.area=function(t){return t.getBounds().getArea()},tn.isComposite=function(t){return t instanceof Qe};var en=function t(){if(this._root=null,this._built=!1,this._itemBoundables=new Nt,this._nodeCapacity=null,0===arguments.length){var e=t.DEFAULT_NODE_CAPACITY;this._nodeCapacity=e}else if(1===arguments.length){var n=arguments[0];et.isTrue(n>1,\"Node capacity must be greater than 1\"),this._nodeCapacity=n}},nn={IntersectsOp:{configurable:!0},serialVersionUID:{configurable:!0},DEFAULT_NODE_CAPACITY:{configurable:!0}};en.prototype.getNodeCapacity=function(){return this._nodeCapacity},en.prototype.lastNode=function(t){return t.get(t.size()-1)},en.prototype.size=function(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.size(this._root));if(1===arguments.length){for(var t=0,e=arguments[0].getChildBoundables().iterator();e.hasNext();){var n=e.next();n instanceof Qe?t+=this.size(n):n instanceof He&&(t+=1)}return t}},en.prototype.removeItem=function(t,e){for(var n=null,i=t.getChildBoundables().iterator();i.hasNext();){var r=i.next();r instanceof He&&r.getItem()===e&&(n=r)}return null!==n&&(t.getChildBoundables().remove(n),!0)},en.prototype.itemsTree=function(){if(0===arguments.length){this.build();var t=this.itemsTree(this._root);return null===t?new Nt:t}if(1===arguments.length){for(var e=arguments[0],n=new Nt,i=e.getChildBoundables().iterator();i.hasNext();){var r=i.next();if(r instanceof Qe){var o=this.itemsTree(r);null!==o&&n.add(o)}else r instanceof He?n.add(r.getItem()):et.shouldNeverReachHere()}return n.size()<=0?null:n}},en.prototype.insert=function(t,e){et.isTrue(!this._built,\"Cannot insert items into an STR packed R-tree after it has been built.\"),this._itemBoundables.add(new He(t,e))},en.prototype.boundablesAtLevel=function(){if(1===arguments.length){var t=arguments[0],e=new Nt;return this.boundablesAtLevel(t,this._root,e),e}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];if(et.isTrue(n>-2),i.getLevel()===n)return r.add(i),null;for(var o=i.getChildBoundables().iterator();o.hasNext();){var s=o.next();s instanceof Qe?this.boundablesAtLevel(n,s,r):(et.isTrue(s instanceof He),-1===n&&r.add(s))}return null}},en.prototype.query=function(){if(1===arguments.length){var t=arguments[0];this.build();var e=new Nt;return this.isEmpty()?e:(this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.query(t,this._root,e),e)}if(2===arguments.length){var n=arguments[0],i=arguments[1];if(this.build(),this.isEmpty())return null;this.getIntersectsOp().intersects(this._root.getBounds(),n)&&this.query(n,this._root,i)}else if(3===arguments.length)if(T(arguments[2],Ke)&&arguments[0]instanceof Object&&arguments[1]instanceof Qe)for(var r=arguments[0],o=arguments[1],s=arguments[2],a=o.getChildBoundables(),u=0;u<a.size();u++){var l=a.get(u);this.getIntersectsOp().intersects(l.getBounds(),r)&&(l instanceof Qe?this.query(r,l,s):l instanceof He?s.visitItem(l.getItem()):et.shouldNeverReachHere())}else if(T(arguments[2],xt)&&arguments[0]instanceof Object&&arguments[1]instanceof Qe)for(var c=arguments[0],p=arguments[1],h=arguments[2],f=p.getChildBoundables(),g=0;g<f.size();g++){var d=f.get(g);this.getIntersectsOp().intersects(d.getBounds(),c)&&(d instanceof Qe?this.query(c,d,h):d instanceof He?h.add(d.getItem()):et.shouldNeverReachHere())}},en.prototype.build=function(){if(this._built)return null;this._root=this._itemBoundables.isEmpty()?this.createNode(0):this.createHigherLevels(this._itemBoundables,-1),this._itemBoundables=null,this._built=!0},en.prototype.getRoot=function(){return this.build(),this._root},en.prototype.remove=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.build(),!!this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.remove(t,this._root,e)}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],o=this.removeItem(i,r);if(o)return!0;for(var s=null,a=i.getChildBoundables().iterator();a.hasNext();){var u=a.next();if(this.getIntersectsOp().intersects(u.getBounds(),n)&&(u instanceof Qe&&(o=this.remove(n,u,r)))){s=u;break}}return null!==s&&s.getChildBoundables().isEmpty()&&i.getChildBoundables().remove(s),o}},en.prototype.createHigherLevels=function(t,e){et.isTrue(!t.isEmpty());var n=this.createParentBoundables(t,e+1);return 1===n.size()?n.get(0):this.createHigherLevels(n,e+1)},en.prototype.depth=function(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.depth(this._root));if(1===arguments.length){for(var t=0,e=arguments[0].getChildBoundables().iterator();e.hasNext();){var n=e.next();if(n instanceof Qe){var i=this.depth(n);i>t&&(t=i)}}return t+1}},en.prototype.createParentBoundables=function(t,e){et.isTrue(!t.isEmpty());var n=new Nt;n.add(this.createNode(e));var i=new Nt(t);$e.sort(i,this.getComparator());for(var r=i.iterator();r.hasNext();){var o=r.next();this.lastNode(n).getChildBoundables().size()===this.getNodeCapacity()&&n.add(this.createNode(e)),this.lastNode(n).addChildBoundable(o)}return n},en.prototype.isEmpty=function(){return this._built?this._root.isEmpty():this._itemBoundables.isEmpty()},en.prototype.interfaces_=function(){return[e]},en.prototype.getClass=function(){return en},en.compareDoubles=function(t,e){return t>e?1:t<e?-1:0},nn.IntersectsOp.get=function(){return rn},nn.serialVersionUID.get=function(){return-0x35ef64c82d4c5400},nn.DEFAULT_NODE_CAPACITY.get=function(){return 10},Object.defineProperties(en,nn);var rn=function(){},on=function(){};on.prototype.distance=function(t,e){},on.prototype.interfaces_=function(){return[]},on.prototype.getClass=function(){return on};var sn=function(t){function n(e){e=e||n.DEFAULT_NODE_CAPACITY,t.call(this,e)}t&&(n.__proto__=t),(n.prototype=Object.create(t&&t.prototype)).constructor=n;var i={STRtreeNode:{configurable:!0},serialVersionUID:{configurable:!0},xComparator:{configurable:!0},yComparator:{configurable:!0},intersectsOp:{configurable:!0},DEFAULT_NODE_CAPACITY:{configurable:!0}};return n.prototype.createParentBoundablesFromVerticalSlices=function(t,e){et.isTrue(t.length>0);for(var n=new Nt,i=0;i<t.length;i++)n.addAll(this.createParentBoundablesFromVerticalSlice(t[i],e));return n},n.prototype.createNode=function(t){return new an(t)},n.prototype.size=function(){return 0===arguments.length?t.prototype.size.call(this):t.prototype.size.apply(this,arguments)},n.prototype.insert=function(){if(2!==arguments.length)return t.prototype.insert.apply(this,arguments);var e=arguments[0],n=arguments[1];if(e.isNull())return null;t.prototype.insert.call(this,e,n)},n.prototype.getIntersectsOp=function(){return n.intersectsOp},n.prototype.verticalSlices=function(t,e){for(var n=Math.trunc(Math.ceil(t.size()/e)),i=new Array(e).fill(null),r=t.iterator(),o=0;o<e;o++){i[o]=new Nt;for(var s=0;r.hasNext()&&s<n;){var a=r.next();i[o].add(a),s++}}return i},n.prototype.query=function(){if(1===arguments.length){var e=arguments[0];return t.prototype.query.call(this,e)}if(2===arguments.length){var n=arguments[0],i=arguments[1];t.prototype.query.call(this,n,i)}else if(3===arguments.length)if(T(arguments[2],Ke)&&arguments[0]instanceof Object&&arguments[1]instanceof Qe){var r=arguments[0],o=arguments[1],s=arguments[2];t.prototype.query.call(this,r,o,s)}else if(T(arguments[2],xt)&&arguments[0]instanceof Object&&arguments[1]instanceof Qe){var a=arguments[0],u=arguments[1],l=arguments[2];t.prototype.query.call(this,a,u,l)}},n.prototype.getComparator=function(){return n.yComparator},n.prototype.createParentBoundablesFromVerticalSlice=function(e,n){return t.prototype.createParentBoundables.call(this,e,n)},n.prototype.remove=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return t.prototype.remove.call(this,e,n)}return t.prototype.remove.apply(this,arguments)},n.prototype.depth=function(){return 0===arguments.length?t.prototype.depth.call(this):t.prototype.depth.apply(this,arguments)},n.prototype.createParentBoundables=function(t,e){et.isTrue(!t.isEmpty());var i=Math.trunc(Math.ceil(t.size()/this.getNodeCapacity())),r=new Nt(t);$e.sort(r,n.xComparator);var o=this.verticalSlices(r,Math.trunc(Math.ceil(Math.sqrt(i))));return this.createParentBoundablesFromVerticalSlices(o,e)},n.prototype.nearestNeighbour=function(){if(1===arguments.length){if(T(arguments[0],on)){var t=arguments[0],e=new tn(this.getRoot(),this.getRoot(),t);return this.nearestNeighbour(e)}if(arguments[0]instanceof tn){var i=arguments[0];return this.nearestNeighbour(i,v.POSITIVE_INFINITY)}}else if(2===arguments.length){if(arguments[0]instanceof n&&T(arguments[1],on)){var r=arguments[0],o=arguments[1],s=new tn(this.getRoot(),r.getRoot(),o);return this.nearestNeighbour(s)}if(arguments[0]instanceof tn&&\"number\"==typeof arguments[1]){var a=arguments[0],u=arguments[1],l=null,c=new We;for(c.add(a);!c.isEmpty()&&u>0;){var p=c.poll(),h=p.getDistance();if(h>=u)break;p.isLeaves()?(u=h,l=p):p.expandToQueue(c,u)}return[l.getBoundable(0).getItem(),l.getBoundable(1).getItem()]}}else if(3===arguments.length){var f=arguments[0],g=arguments[1],d=arguments[2],y=new He(f,g),_=new tn(this.getRoot(),y,d);return this.nearestNeighbour(_)[0]}},n.prototype.interfaces_=function(){return[Je,e]},n.prototype.getClass=function(){return n},n.centreX=function(t){return n.avg(t.getMinX(),t.getMaxX())},n.avg=function(t,e){return(t+e)/2},n.centreY=function(t){return n.avg(t.getMinY(),t.getMaxY())},i.STRtreeNode.get=function(){return an},i.serialVersionUID.get=function(){return 0x39920f7d5f261e0},i.xComparator.get=function(){return{interfaces_:function(){return[N]},compare:function(e,i){return t.compareDoubles(n.centreX(e.getBounds()),n.centreX(i.getBounds()))}}},i.yComparator.get=function(){return{interfaces_:function(){return[N]},compare:function(e,i){return t.compareDoubles(n.centreY(e.getBounds()),n.centreY(i.getBounds()))}}},i.intersectsOp.get=function(){return{interfaces_:function(){return[t.IntersectsOp]},intersects:function(t,e){return t.intersects(e)}}},i.DEFAULT_NODE_CAPACITY.get=function(){return 10},Object.defineProperties(n,i),n}(en),an=function(t){function e(){var e=arguments[0];t.call(this,e)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.computeBounds=function(){for(var t=null,e=this.getChildBoundables().iterator();e.hasNext();){var n=e.next();null===t?t=new j(n.getBounds()):t.expandToInclude(n.getBounds())}return t},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Qe),un=function(){};un.prototype.interfaces_=function(){return[]},un.prototype.getClass=function(){return un},un.relativeSign=function(t,e){return t<e?-1:t>e?1:0},un.compare=function(t,e,n){if(e.equals2D(n))return 0;var i=un.relativeSign(e.x,n.x),r=un.relativeSign(e.y,n.y);switch(t){case 0:return un.compareValue(i,r);case 1:return un.compareValue(r,i);case 2:return un.compareValue(r,-i);case 3:return un.compareValue(-i,r);case 4:return un.compareValue(-i,-r);case 5:return un.compareValue(-r,-i);case 6:return un.compareValue(-r,i);case 7:return un.compareValue(i,-r)}return et.shouldNeverReachHere(\"invalid octant value\"),0},un.compareValue=function(t,e){return t<0?-1:t>0?1:e<0?-1:e>0?1:0};var ln=function(){this._segString=null,this.coord=null,this.segmentIndex=null,this._segmentOctant=null,this._isInterior=null;var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this._segString=t,this.coord=new C(e),this.segmentIndex=n,this._segmentOctant=i,this._isInterior=!e.equals2D(t.getCoordinate(n))};ln.prototype.getCoordinate=function(){return this.coord},ln.prototype.print=function(t){t.print(this.coord),t.print(\" seg # = \"+this.segmentIndex)},ln.prototype.compareTo=function(t){var e=t;return this.segmentIndex<e.segmentIndex?-1:this.segmentIndex>e.segmentIndex?1:this.coord.equals2D(e.coord)?0:un.compare(this._segmentOctant,this.coord,e.coord)},ln.prototype.isEndPoint=function(t){return 0===this.segmentIndex&&!this._isInterior||this.segmentIndex===t},ln.prototype.isInterior=function(){return this._isInterior},ln.prototype.interfaces_=function(){return[E]},ln.prototype.getClass=function(){return ln};var cn=function(){this._nodeMap=new p,this._edge=null;var t=arguments[0];this._edge=t};cn.prototype.getSplitCoordinates=function(){var t=new St;this.addEndpoints();for(var e=this.iterator(),n=e.next();e.hasNext();){var i=e.next();this.addEdgeCoordinates(n,i,t),n=i}return t.toCoordinateArray()},cn.prototype.addCollapsedNodes=function(){var t=new Nt;this.findCollapsesFromInsertedNodes(t),this.findCollapsesFromExistingVertices(t);for(var e=t.iterator();e.hasNext();){var n=e.next().intValue();this.add(this._edge.getCoordinate(n),n)}},cn.prototype.print=function(t){t.println(\"Intersections:\");for(var e=this.iterator();e.hasNext();){e.next().print(t)}},cn.prototype.findCollapsesFromExistingVertices=function(t){for(var e=0;e<this._edge.size()-2;e++){var n=this._edge.getCoordinate(e),i=this._edge.getCoordinate(e+2);n.equals2D(i)&&t.add(new M(e+1))}},cn.prototype.addEdgeCoordinates=function(t,e,n){var i=this._edge.getCoordinate(e.segmentIndex),r=e.isInterior()||!e.coord.equals2D(i);n.add(new C(t.coord),!1);for(var o=t.segmentIndex+1;o<=e.segmentIndex;o++)n.add(this._edge.getCoordinate(o));r&&n.add(new C(e.coord))},cn.prototype.iterator=function(){return this._nodeMap.values().iterator()},cn.prototype.addSplitEdges=function(t){this.addEndpoints(),this.addCollapsedNodes();for(var e=this.iterator(),n=e.next();e.hasNext();){var i=e.next(),r=this.createSplitEdge(n,i);t.add(r),n=i}},cn.prototype.findCollapseIndex=function(t,e,n){if(!t.coord.equals2D(e.coord))return!1;var i=e.segmentIndex-t.segmentIndex;return e.isInterior()||i--,1===i&&(n[0]=t.segmentIndex+1,!0)},cn.prototype.findCollapsesFromInsertedNodes=function(t){for(var e=new Array(1).fill(null),n=this.iterator(),i=n.next();n.hasNext();){var r=n.next();this.findCollapseIndex(i,r,e)&&t.add(new M(e[0])),i=r}},cn.prototype.getEdge=function(){return this._edge},cn.prototype.addEndpoints=function(){var t=this._edge.size()-1;this.add(this._edge.getCoordinate(0),0),this.add(this._edge.getCoordinate(t),t)},cn.prototype.createSplitEdge=function(t,e){var n=e.segmentIndex-t.segmentIndex+2,i=this._edge.getCoordinate(e.segmentIndex),r=e.isInterior()||!e.coord.equals2D(i);r||n--;var o=new Array(n).fill(null),s=0;o[s++]=new C(t.coord);for(var a=t.segmentIndex+1;a<=e.segmentIndex;a++)o[s++]=this._edge.getCoordinate(a);return r&&(o[s]=new C(e.coord)),new gn(o,this._edge.getData())},cn.prototype.add=function(t,e){var n=new ln(this._edge,t,e,this._edge.getSegmentOctant(e)),i=this._nodeMap.get(n);return null!==i?(et.isTrue(i.coord.equals2D(t),\"Found equal nodes with different coordinates\"),i):(this._nodeMap.put(n,n),n)},cn.prototype.checkSplitEdgesCorrectness=function(t){var e=this._edge.getCoordinates(),n=t.get(0).getCoordinate(0);if(!n.equals2D(e[0]))throw new $(\"bad split edge start point at \"+n);var i=t.get(t.size()-1).getCoordinates(),r=i[i.length-1];if(!r.equals2D(e[e.length-1]))throw new $(\"bad split edge end point at \"+r)},cn.prototype.interfaces_=function(){return[]},cn.prototype.getClass=function(){return cn};var pn=function(){};pn.prototype.interfaces_=function(){return[]},pn.prototype.getClass=function(){return pn},pn.octant=function(){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new m(\"Cannot compute the octant for point ( \"+t+\", \"+e+\" )\");var n=Math.abs(t),i=Math.abs(e);return t>=0?e>=0?n>=i?0:1:n>=i?7:6:e>=0?n>=i?3:2:n>=i?4:5}if(arguments[0]instanceof C&&arguments[1]instanceof C){var r=arguments[0],o=arguments[1],s=o.x-r.x,a=o.y-r.y;if(0===s&&0===a)throw new m(\"Cannot compute the octant for two identical points \"+r);return pn.octant(s,a)}};var hn=function(){};hn.prototype.getCoordinates=function(){},hn.prototype.size=function(){},hn.prototype.getCoordinate=function(t){},hn.prototype.isClosed=function(){},hn.prototype.setData=function(t){},hn.prototype.getData=function(){},hn.prototype.interfaces_=function(){return[]},hn.prototype.getClass=function(){return hn};var fn=function(){};fn.prototype.addIntersection=function(t,e){},fn.prototype.interfaces_=function(){return[hn]},fn.prototype.getClass=function(){return fn};var gn=function(){this._nodeList=new cn(this),this._pts=null,this._data=null;var t=arguments[0],e=arguments[1];this._pts=t,this._data=e};gn.prototype.getCoordinates=function(){return this._pts},gn.prototype.size=function(){return this._pts.length},gn.prototype.getCoordinate=function(t){return this._pts[t]},gn.prototype.isClosed=function(){return this._pts[0].equals(this._pts[this._pts.length-1])},gn.prototype.getSegmentOctant=function(t){return t===this._pts.length-1?-1:this.safeOctant(this.getCoordinate(t),this.getCoordinate(t+1))},gn.prototype.setData=function(t){this._data=t},gn.prototype.safeOctant=function(t,e){return t.equals2D(e)?0:pn.octant(t,e)},gn.prototype.getData=function(){return this._data},gn.prototype.addIntersection=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.addIntersectionNode(t,e)}else if(4===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[3],o=new C(n.getIntersection(r));this.addIntersection(o,i)}},gn.prototype.toString=function(){return Z.toLineString(new ue(this._pts))},gn.prototype.getNodeList=function(){return this._nodeList},gn.prototype.addIntersectionNode=function(t,e){var n=e,i=n+1;if(i<this._pts.length){var r=this._pts[i];t.equals2D(r)&&(n=i)}return this._nodeList.add(t,n)},gn.prototype.addIntersections=function(t,e,n){for(var i=0;i<t.getIntersectionNum();i++)this.addIntersection(t,e,n,i)},gn.prototype.interfaces_=function(){return[fn]},gn.prototype.getClass=function(){return gn},gn.getNodedSubstrings=function(){if(1===arguments.length){var t=arguments[0],e=new Nt;return gn.getNodedSubstrings(t,e),e}if(2===arguments.length)for(var n=arguments[0],i=arguments[1],r=n.iterator();r.hasNext();){r.next().getNodeList().addSplitEdges(i)}};var dn=function(){if(this.p0=null,this.p1=null,0===arguments.length)this.p0=new C,this.p1=new C;else if(1===arguments.length){var t=arguments[0];this.p0=new C(t.p0),this.p1=new C(t.p1)}else if(2===arguments.length)this.p0=arguments[0],this.p1=arguments[1];else if(4===arguments.length){var e=arguments[0],n=arguments[1],i=arguments[2],r=arguments[3];this.p0=new C(e,n),this.p1=new C(i,r)}},yn={serialVersionUID:{configurable:!0}};dn.prototype.minX=function(){return Math.min(this.p0.x,this.p1.x)},dn.prototype.orientationIndex=function(){if(arguments[0]instanceof dn){var t=arguments[0],e=at.orientationIndex(this.p0,this.p1,t.p0),n=at.orientationIndex(this.p0,this.p1,t.p1);return e>=0&&n>=0?Math.max(e,n):e<=0&&n<=0?Math.max(e,n):0}if(arguments[0]instanceof C){var i=arguments[0];return at.orientationIndex(this.p0,this.p1,i)}},dn.prototype.toGeometry=function(t){return t.createLineString([this.p0,this.p1])},dn.prototype.isVertical=function(){return this.p0.x===this.p1.x},dn.prototype.equals=function(t){if(!(t instanceof dn))return!1;var e=t;return this.p0.equals(e.p0)&&this.p1.equals(e.p1)},dn.prototype.intersection=function(t){var e=new rt;return e.computeIntersection(this.p0,this.p1,t.p0,t.p1),e.hasIntersection()?e.getIntersection(0):null},dn.prototype.project=function(){if(arguments[0]instanceof C){var t=arguments[0];if(t.equals(this.p0)||t.equals(this.p1))return new C(t);var e=this.projectionFactor(t),n=new C;return n.x=this.p0.x+e*(this.p1.x-this.p0.x),n.y=this.p0.y+e*(this.p1.y-this.p0.y),n}if(arguments[0]instanceof dn){var i=arguments[0],r=this.projectionFactor(i.p0),o=this.projectionFactor(i.p1);if(r>=1&&o>=1)return null;if(r<=0&&o<=0)return null;var s=this.project(i.p0);r<0&&(s=this.p0),r>1&&(s=this.p1);var a=this.project(i.p1);return o<0&&(a=this.p0),o>1&&(a=this.p1),new dn(s,a)}},dn.prototype.normalize=function(){this.p1.compareTo(this.p0)<0&&this.reverse()},dn.prototype.angle=function(){return Math.atan2(this.p1.y-this.p0.y,this.p1.x-this.p0.x)},dn.prototype.getCoordinate=function(t){return 0===t?this.p0:this.p1},dn.prototype.distancePerpendicular=function(t){return at.distancePointLinePerpendicular(t,this.p0,this.p1)},dn.prototype.minY=function(){return Math.min(this.p0.y,this.p1.y)},dn.prototype.midPoint=function(){return dn.midPoint(this.p0,this.p1)},dn.prototype.projectionFactor=function(t){if(t.equals(this.p0))return 0;if(t.equals(this.p1))return 1;var e=this.p1.x-this.p0.x,n=this.p1.y-this.p0.y,i=e*e+n*n;if(i<=0)return v.NaN;return((t.x-this.p0.x)*e+(t.y-this.p0.y)*n)/i},dn.prototype.closestPoints=function(t){var e=this.intersection(t);if(null!==e)return[e,e];var n=new Array(2).fill(null),i=v.MAX_VALUE,r=null,o=this.closestPoint(t.p0);i=o.distance(t.p0),n[0]=o,n[1]=t.p0;var s=this.closestPoint(t.p1);(r=s.distance(t.p1))<i&&(i=r,n[0]=s,n[1]=t.p1);var a=t.closestPoint(this.p0);(r=a.distance(this.p0))<i&&(i=r,n[0]=this.p0,n[1]=a);var u=t.closestPoint(this.p1);return(r=u.distance(this.p1))<i&&(i=r,n[0]=this.p1,n[1]=u),n},dn.prototype.closestPoint=function(t){var e=this.projectionFactor(t);if(e>0&&e<1)return this.project(t);return this.p0.distance(t)<this.p1.distance(t)?this.p0:this.p1},dn.prototype.maxX=function(){return Math.max(this.p0.x,this.p1.x)},dn.prototype.getLength=function(){return this.p0.distance(this.p1)},dn.prototype.compareTo=function(t){var e=t,n=this.p0.compareTo(e.p0);return 0!==n?n:this.p1.compareTo(e.p1)},dn.prototype.reverse=function(){var t=this.p0;this.p0=this.p1,this.p1=t},dn.prototype.equalsTopo=function(t){return this.p0.equals(t.p0)&&(this.p1.equals(t.p1)||this.p0.equals(t.p1))&&this.p1.equals(t.p0)},dn.prototype.lineIntersection=function(t){try{return k.intersection(this.p0,this.p1,t.p0,t.p1)}catch(t){if(!(t instanceof X))throw t}return null},dn.prototype.maxY=function(){return Math.max(this.p0.y,this.p1.y)},dn.prototype.pointAlongOffset=function(t,e){var n=this.p0.x+t*(this.p1.x-this.p0.x),i=this.p0.y+t*(this.p1.y-this.p0.y),r=this.p1.x-this.p0.x,o=this.p1.y-this.p0.y,s=Math.sqrt(r*r+o*o),a=0,u=0;if(0!==e){if(s<=0)throw new Error(\"Cannot compute offset from zero-length line segment\");a=e*r/s,u=e*o/s}return new C(n-u,i+a)},dn.prototype.setCoordinates=function(){if(1===arguments.length){var t=arguments[0];this.setCoordinates(t.p0,t.p1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.p0.x=e.x,this.p0.y=e.y,this.p1.x=n.x,this.p1.y=n.y}},dn.prototype.segmentFraction=function(t){var e=this.projectionFactor(t);return e<0?e=0:(e>1||v.isNaN(e))&&(e=1),e},dn.prototype.toString=function(){return\"LINESTRING( \"+this.p0.x+\" \"+this.p0.y+\", \"+this.p1.x+\" \"+this.p1.y+\")\"},dn.prototype.isHorizontal=function(){return this.p0.y===this.p1.y},dn.prototype.distance=function(){if(arguments[0]instanceof dn){var t=arguments[0];return at.distanceLineLine(this.p0,this.p1,t.p0,t.p1)}if(arguments[0]instanceof C){var e=arguments[0];return at.distancePointLine(e,this.p0,this.p1)}},dn.prototype.pointAlong=function(t){var e=new C;return e.x=this.p0.x+t*(this.p1.x-this.p0.x),e.y=this.p0.y+t*(this.p1.y-this.p0.y),e},dn.prototype.hashCode=function(){var t=v.doubleToLongBits(this.p0.x);t^=31*v.doubleToLongBits(this.p0.y);var e=Math.trunc(t)^Math.trunc(t>>32),n=v.doubleToLongBits(this.p1.x);n^=31*v.doubleToLongBits(this.p1.y);return e^(Math.trunc(n)^Math.trunc(n>>32))},dn.prototype.interfaces_=function(){return[E,e]},dn.prototype.getClass=function(){return dn},dn.midPoint=function(t,e){return new C((t.x+e.x)/2,(t.y+e.y)/2)},yn.serialVersionUID.get=function(){return 0x2d2172135f411c00},Object.defineProperties(dn,yn);var _n=function(){this.tempEnv1=new j,this.tempEnv2=new j,this._overlapSeg1=new dn,this._overlapSeg2=new dn};_n.prototype.overlap=function(){if(2===arguments.length);else if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];t.getLineSegment(e,this._overlapSeg1),n.getLineSegment(i,this._overlapSeg2),this.overlap(this._overlapSeg1,this._overlapSeg2)}},_n.prototype.interfaces_=function(){return[]},_n.prototype.getClass=function(){return _n};var mn=function(){this._pts=null,this._start=null,this._end=null,this._env=null,this._context=null,this._id=null;var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this._pts=t,this._start=e,this._end=n,this._context=i};mn.prototype.getLineSegment=function(t,e){e.p0=this._pts[t],e.p1=this._pts[t+1]},mn.prototype.computeSelect=function(t,e,n,i){var r=this._pts[e],o=this._pts[n];if(i.tempEnv1.init(r,o),n-e==1)return i.select(this,e),null;if(!t.intersects(i.tempEnv1))return null;var s=Math.trunc((e+n)/2);e<s&&this.computeSelect(t,e,s,i),s<n&&this.computeSelect(t,s,n,i)},mn.prototype.getCoordinates=function(){for(var t=new Array(this._end-this._start+1).fill(null),e=0,n=this._start;n<=this._end;n++)t[e++]=this._pts[n];return t},mn.prototype.computeOverlaps=function(t,e){this.computeOverlapsInternal(this._start,this._end,t,t._start,t._end,e)},mn.prototype.setId=function(t){this._id=t},mn.prototype.select=function(t,e){this.computeSelect(t,this._start,this._end,e)},mn.prototype.getEnvelope=function(){if(null===this._env){var t=this._pts[this._start],e=this._pts[this._end];this._env=new j(t,e)}return this._env},mn.prototype.getEndIndex=function(){return this._end},mn.prototype.getStartIndex=function(){return this._start},mn.prototype.getContext=function(){return this._context},mn.prototype.getId=function(){return this._id},mn.prototype.computeOverlapsInternal=function(t,e,n,i,r,o){var s=this._pts[t],a=this._pts[e],u=n._pts[i],l=n._pts[r];if(e-t==1&&r-i==1)return o.overlap(this,t,n,i),null;if(o.tempEnv1.init(s,a),o.tempEnv2.init(u,l),!o.tempEnv1.intersects(o.tempEnv2))return null;var c=Math.trunc((t+e)/2),p=Math.trunc((i+r)/2);t<c&&(i<p&&this.computeOverlapsInternal(t,c,n,i,p,o),p<r&&this.computeOverlapsInternal(t,c,n,p,r,o)),c<e&&(i<p&&this.computeOverlapsInternal(c,e,n,i,p,o),p<r&&this.computeOverlapsInternal(c,e,n,p,r,o))},mn.prototype.interfaces_=function(){return[]},mn.prototype.getClass=function(){return mn};var vn=function(){};vn.prototype.interfaces_=function(){return[]},vn.prototype.getClass=function(){return vn},vn.getChainStartIndices=function(t){var e=0,n=new Nt;n.add(new M(e));do{var i=vn.findChainEnd(t,e);n.add(new M(i)),e=i}while(e<t.length-1);return vn.toIntArray(n)},vn.findChainEnd=function(t,e){for(var n=e;n<t.length-1&&t[n].equals2D(t[n+1]);)n++;if(n>=t.length-1)return t.length-1;for(var i=Be.quadrant(t[n],t[n+1]),r=e+1;r<t.length;){if(!t[r-1].equals2D(t[r])){if(Be.quadrant(t[r-1],t[r])!==i)break}r++}return r-1},vn.getChains=function(){if(1===arguments.length){var t=arguments[0];return vn.getChains(t,null)}if(2===arguments.length){for(var e=arguments[0],n=arguments[1],i=new Nt,r=vn.getChainStartIndices(e),o=0;o<r.length-1;o++){var s=new mn(e,r[o],r[o+1],n);i.add(s)}return i}},vn.toIntArray=function(t){for(var e=new Array(t.size()).fill(null),n=0;n<e.length;n++)e[n]=t.get(n).intValue();return e};var In=function(){};In.prototype.computeNodes=function(t){},In.prototype.getNodedSubstrings=function(){},In.prototype.interfaces_=function(){return[]},In.prototype.getClass=function(){return In};var En=function(){if(this._segInt=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.setSegmentIntersector(t)}};En.prototype.setSegmentIntersector=function(t){this._segInt=t},En.prototype.interfaces_=function(){return[In]},En.prototype.getClass=function(){return En};var xn=function(t){function e(e){e?t.call(this,e):t.call(this),this._monoChains=new Nt,this._index=new sn,this._idCounter=0,this._nodedSegStrings=null,this._nOverlaps=0}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={SegmentOverlapAction:{configurable:!0}};return e.prototype.getMonotoneChains=function(){return this._monoChains},e.prototype.getNodedSubstrings=function(){return gn.getNodedSubstrings(this._nodedSegStrings)},e.prototype.getIndex=function(){return this._index},e.prototype.add=function(t){for(var e=vn.getChains(t.getCoordinates(),t).iterator();e.hasNext();){var n=e.next();n.setId(this._idCounter++),this._index.insert(n.getEnvelope(),n),this._monoChains.add(n)}},e.prototype.computeNodes=function(t){this._nodedSegStrings=t;for(var e=t.iterator();e.hasNext();)this.add(e.next());this.intersectChains()},e.prototype.intersectChains=function(){for(var t=new Nn(this._segInt),e=this._monoChains.iterator();e.hasNext();)for(var n=e.next(),i=this._index.query(n.getEnvelope()).iterator();i.hasNext();){var r=i.next();if(r.getId()>n.getId()&&(n.computeOverlaps(r,t),this._nOverlaps++),this._segInt.isDone())return null}},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},n.SegmentOverlapAction.get=function(){return Nn},Object.defineProperties(e,n),e}(En),Nn=function(t){function e(){t.call(this),this._si=null;var e=arguments[0];this._si=e}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.overlap=function(){if(4!==arguments.length)return t.prototype.overlap.apply(this,arguments);var e=arguments[0],n=arguments[1],i=arguments[2],r=arguments[3],o=e.getContext(),s=i.getContext();this._si.processIntersections(o,n,s,r)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(_n),Cn=function t(){if(this._quadrantSegments=t.DEFAULT_QUADRANT_SEGMENTS,this._endCapStyle=t.CAP_ROUND,this._joinStyle=t.JOIN_ROUND,this._mitreLimit=t.DEFAULT_MITRE_LIMIT,this._isSingleSided=!1,this._simplifyFactor=t.DEFAULT_SIMPLIFY_FACTOR,0===arguments.length);else if(1===arguments.length){var e=arguments[0];this.setQuadrantSegments(e)}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.setQuadrantSegments(n),this.setEndCapStyle(i)}else if(4===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3];this.setQuadrantSegments(r),this.setEndCapStyle(o),this.setJoinStyle(s),this.setMitreLimit(a)}},Sn={CAP_ROUND:{configurable:!0},CAP_FLAT:{configurable:!0},CAP_SQUARE:{configurable:!0},JOIN_ROUND:{configurable:!0},JOIN_MITRE:{configurable:!0},JOIN_BEVEL:{configurable:!0},DEFAULT_QUADRANT_SEGMENTS:{configurable:!0},DEFAULT_MITRE_LIMIT:{configurable:!0},DEFAULT_SIMPLIFY_FACTOR:{configurable:!0}};Cn.prototype.getEndCapStyle=function(){return this._endCapStyle},Cn.prototype.isSingleSided=function(){return this._isSingleSided},Cn.prototype.setQuadrantSegments=function(t){this._quadrantSegments=t,0===this._quadrantSegments&&(this._joinStyle=Cn.JOIN_BEVEL),this._quadrantSegments<0&&(this._joinStyle=Cn.JOIN_MITRE,this._mitreLimit=Math.abs(this._quadrantSegments)),t<=0&&(this._quadrantSegments=1),this._joinStyle!==Cn.JOIN_ROUND&&(this._quadrantSegments=Cn.DEFAULT_QUADRANT_SEGMENTS)},Cn.prototype.getJoinStyle=function(){return this._joinStyle},Cn.prototype.setJoinStyle=function(t){this._joinStyle=t},Cn.prototype.setSimplifyFactor=function(t){this._simplifyFactor=t<0?0:t},Cn.prototype.getSimplifyFactor=function(){return this._simplifyFactor},Cn.prototype.getQuadrantSegments=function(){return this._quadrantSegments},Cn.prototype.setEndCapStyle=function(t){this._endCapStyle=t},Cn.prototype.getMitreLimit=function(){return this._mitreLimit},Cn.prototype.setMitreLimit=function(t){this._mitreLimit=t},Cn.prototype.setSingleSided=function(t){this._isSingleSided=t},Cn.prototype.interfaces_=function(){return[]},Cn.prototype.getClass=function(){return Cn},Cn.bufferDistanceError=function(t){var e=Math.PI/2/t;return 1-Math.cos(e/2)},Sn.CAP_ROUND.get=function(){return 1},Sn.CAP_FLAT.get=function(){return 2},Sn.CAP_SQUARE.get=function(){return 3},Sn.JOIN_ROUND.get=function(){return 1},Sn.JOIN_MITRE.get=function(){return 2},Sn.JOIN_BEVEL.get=function(){return 3},Sn.DEFAULT_QUADRANT_SEGMENTS.get=function(){return 8},Sn.DEFAULT_MITRE_LIMIT.get=function(){return 5},Sn.DEFAULT_SIMPLIFY_FACTOR.get=function(){return.01},Object.defineProperties(Cn,Sn);var Ln=function(t){this._distanceTol=null,this._isDeleted=null,this._angleOrientation=at.COUNTERCLOCKWISE,this._inputLine=t||null},bn={INIT:{configurable:!0},DELETE:{configurable:!0},KEEP:{configurable:!0},NUM_PTS_TO_CHECK:{configurable:!0}};Ln.prototype.isDeletable=function(t,e,n,i){var r=this._inputLine[t],o=this._inputLine[e],s=this._inputLine[n];return!!this.isConcave(r,o,s)&&(!!this.isShallow(r,o,s,i)&&this.isShallowSampled(r,o,t,n,i))},Ln.prototype.deleteShallowConcavities=function(){for(var t=1,e=this.findNextNonDeletedIndex(t),n=this.findNextNonDeletedIndex(e),i=!1;n<this._inputLine.length;){var r=!1;this.isDeletable(t,e,n,this._distanceTol)&&(this._isDeleted[e]=Ln.DELETE,r=!0,i=!0),t=r?n:e,e=this.findNextNonDeletedIndex(t),n=this.findNextNonDeletedIndex(e)}return i},Ln.prototype.isShallowConcavity=function(t,e,n,i){if(!(at.computeOrientation(t,e,n)===this._angleOrientation))return!1;return at.distancePointLine(e,t,n)<i},Ln.prototype.isShallowSampled=function(t,e,n,i,r){var o=Math.trunc((i-n)/Ln.NUM_PTS_TO_CHECK);o<=0&&(o=1);for(var s=n;s<i;s+=o)if(!this.isShallow(t,e,this._inputLine[s],r))return!1;return!0},Ln.prototype.isConcave=function(t,e,n){var i=at.computeOrientation(t,e,n)===this._angleOrientation;return i},Ln.prototype.simplify=function(t){this._distanceTol=Math.abs(t),t<0&&(this._angleOrientation=at.CLOCKWISE),this._isDeleted=new Array(this._inputLine.length).fill(null);var e=!1;do{e=this.deleteShallowConcavities()}while(e);return this.collapseLine()},Ln.prototype.findNextNonDeletedIndex=function(t){for(var e=t+1;e<this._inputLine.length&&this._isDeleted[e]===Ln.DELETE;)e++;return e},Ln.prototype.isShallow=function(t,e,n,i){return at.distancePointLine(e,t,n)<i},Ln.prototype.collapseLine=function(){for(var t=new St,e=0;e<this._inputLine.length;e++)this._isDeleted[e]!==Ln.DELETE&&t.add(this._inputLine[e]);return t.toCoordinateArray()},Ln.prototype.interfaces_=function(){return[]},Ln.prototype.getClass=function(){return Ln},Ln.simplify=function(t,e){return new Ln(t).simplify(e)},bn.INIT.get=function(){return 0},bn.DELETE.get=function(){return 1},bn.KEEP.get=function(){return 1},bn.NUM_PTS_TO_CHECK.get=function(){return 10},Object.defineProperties(Ln,bn);var wn=function(){this._ptList=null,this._precisionModel=null,this._minimimVertexDistance=0,this._ptList=new Nt},On={COORDINATE_ARRAY_TYPE:{configurable:!0}};wn.prototype.getCoordinates=function(){return this._ptList.toArray(wn.COORDINATE_ARRAY_TYPE)},wn.prototype.setPrecisionModel=function(t){this._precisionModel=t},wn.prototype.addPt=function(t){var e=new C(t);if(this._precisionModel.makePrecise(e),this.isRedundant(e))return null;this._ptList.add(e)},wn.prototype.revere=function(){},wn.prototype.addPts=function(t,e){if(e)for(var n=0;n<t.length;n++)this.addPt(t[n]);else for(var i=t.length-1;i>=0;i--)this.addPt(t[i])},wn.prototype.isRedundant=function(t){if(this._ptList.size()<1)return!1;var e=this._ptList.get(this._ptList.size()-1);return t.distance(e)<this._minimimVertexDistance},wn.prototype.toString=function(){return(new _e).createLineString(this.getCoordinates()).toString()},wn.prototype.closeRing=function(){if(this._ptList.size()<1)return null;var t=new C(this._ptList.get(0)),e=this._ptList.get(this._ptList.size()-1);if(t.equals(e))return null;this._ptList.add(t)},wn.prototype.setMinimumVertexDistance=function(t){this._minimimVertexDistance=t},wn.prototype.interfaces_=function(){return[]},wn.prototype.getClass=function(){return wn},On.COORDINATE_ARRAY_TYPE.get=function(){return new Array(0).fill(null)},Object.defineProperties(wn,On);var Tn=function(){},Rn={PI_TIMES_2:{configurable:!0},PI_OVER_2:{configurable:!0},PI_OVER_4:{configurable:!0},COUNTERCLOCKWISE:{configurable:!0},CLOCKWISE:{configurable:!0},NONE:{configurable:!0}};Tn.prototype.interfaces_=function(){return[]},Tn.prototype.getClass=function(){return Tn},Tn.toDegrees=function(t){return 180*t/Math.PI},Tn.normalize=function(t){for(;t>Math.PI;)t-=Tn.PI_TIMES_2;for(;t<=-Math.PI;)t+=Tn.PI_TIMES_2;return t},Tn.angle=function(){if(1===arguments.length){var t=arguments[0];return Math.atan2(t.y,t.x)}if(2===arguments.length){var e=arguments[0],n=arguments[1],i=n.x-e.x,r=n.y-e.y;return Math.atan2(r,i)}},Tn.isAcute=function(t,e,n){var i=t.x-e.x,r=t.y-e.y;return i*(n.x-e.x)+r*(n.y-e.y)>0},Tn.isObtuse=function(t,e,n){var i=t.x-e.x,r=t.y-e.y;return i*(n.x-e.x)+r*(n.y-e.y)<0},Tn.interiorAngle=function(t,e,n){var i=Tn.angle(e,t),r=Tn.angle(e,n);return Math.abs(r-i)},Tn.normalizePositive=function(t){if(t<0){for(;t<0;)t+=Tn.PI_TIMES_2;t>=Tn.PI_TIMES_2&&(t=0)}else{for(;t>=Tn.PI_TIMES_2;)t-=Tn.PI_TIMES_2;t<0&&(t=0)}return t},Tn.angleBetween=function(t,e,n){var i=Tn.angle(e,t),r=Tn.angle(e,n);return Tn.diff(i,r)},Tn.diff=function(t,e){var n=null;return(n=t<e?e-t:t-e)>Math.PI&&(n=2*Math.PI-n),n},Tn.toRadians=function(t){return t*Math.PI/180},Tn.getTurn=function(t,e){var n=Math.sin(e-t);return n>0?Tn.COUNTERCLOCKWISE:n<0?Tn.CLOCKWISE:Tn.NONE},Tn.angleBetweenOriented=function(t,e,n){var i=Tn.angle(e,t),r=Tn.angle(e,n)-i;return r<=-Math.PI?r+Tn.PI_TIMES_2:r>Math.PI?r-Tn.PI_TIMES_2:r},Rn.PI_TIMES_2.get=function(){return 2*Math.PI},Rn.PI_OVER_2.get=function(){return Math.PI/2},Rn.PI_OVER_4.get=function(){return Math.PI/4},Rn.COUNTERCLOCKWISE.get=function(){return at.COUNTERCLOCKWISE},Rn.CLOCKWISE.get=function(){return at.CLOCKWISE},Rn.NONE.get=function(){return at.COLLINEAR},Object.defineProperties(Tn,Rn);var Pn=function t(){this._maxCurveSegmentError=0,this._filletAngleQuantum=null,this._closingSegLengthFactor=1,this._segList=null,this._distance=0,this._precisionModel=null,this._bufParams=null,this._li=null,this._s0=null,this._s1=null,this._s2=null,this._seg0=new dn,this._seg1=new dn,this._offset0=new dn,this._offset1=new dn,this._side=0,this._hasNarrowConcaveAngle=!1;var e=arguments[0],n=arguments[1],i=arguments[2];this._precisionModel=e,this._bufParams=n,this._li=new rt,this._filletAngleQuantum=Math.PI/2/n.getQuadrantSegments(),n.getQuadrantSegments()>=8&&n.getJoinStyle()===Cn.JOIN_ROUND&&(this._closingSegLengthFactor=t.MAX_CLOSING_SEG_LEN_FACTOR),this.init(i)},Dn={OFFSET_SEGMENT_SEPARATION_FACTOR:{configurable:!0},INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR:{configurable:!0},CURVE_VERTEX_SNAP_DISTANCE_FACTOR:{configurable:!0},MAX_CLOSING_SEG_LEN_FACTOR:{configurable:!0}};Pn.prototype.addNextSegment=function(t,e){if(this._s0=this._s1,this._s1=this._s2,this._s2=t,this._seg0.setCoordinates(this._s0,this._s1),this.computeOffsetSegment(this._seg0,this._side,this._distance,this._offset0),this._seg1.setCoordinates(this._s1,this._s2),this.computeOffsetSegment(this._seg1,this._side,this._distance,this._offset1),this._s1.equals(this._s2))return null;var n=at.computeOrientation(this._s0,this._s1,this._s2),i=n===at.CLOCKWISE&&this._side===Se.LEFT||n===at.COUNTERCLOCKWISE&&this._side===Se.RIGHT;0===n?this.addCollinear(e):i?this.addOutsideTurn(n,e):this.addInsideTurn(n,e)},Pn.prototype.addLineEndCap=function(t,e){var n=new dn(t,e),i=new dn;this.computeOffsetSegment(n,Se.LEFT,this._distance,i);var r=new dn;this.computeOffsetSegment(n,Se.RIGHT,this._distance,r);var o=e.x-t.x,s=e.y-t.y,a=Math.atan2(s,o);switch(this._bufParams.getEndCapStyle()){case Cn.CAP_ROUND:this._segList.addPt(i.p1),this.addFilletArc(e,a+Math.PI/2,a-Math.PI/2,at.CLOCKWISE,this._distance),this._segList.addPt(r.p1);break;case Cn.CAP_FLAT:this._segList.addPt(i.p1),this._segList.addPt(r.p1);break;case Cn.CAP_SQUARE:var u=new C;u.x=Math.abs(this._distance)*Math.cos(a),u.y=Math.abs(this._distance)*Math.sin(a);var l=new C(i.p1.x+u.x,i.p1.y+u.y),c=new C(r.p1.x+u.x,r.p1.y+u.y);this._segList.addPt(l),this._segList.addPt(c)}},Pn.prototype.getCoordinates=function(){return this._segList.getCoordinates()},Pn.prototype.addMitreJoin=function(t,e,n,i){var r=!0,o=null;try{o=k.intersection(e.p0,e.p1,n.p0,n.p1);(i<=0?1:o.distance(t)/Math.abs(i))>this._bufParams.getMitreLimit()&&(r=!1)}catch(t){if(!(t instanceof X))throw t;o=new C(0,0),r=!1}r?this._segList.addPt(o):this.addLimitedMitreJoin(e,n,i,this._bufParams.getMitreLimit())},Pn.prototype.addFilletCorner=function(t,e,n,i,r){var o=e.x-t.x,s=e.y-t.y,a=Math.atan2(s,o),u=n.x-t.x,l=n.y-t.y,c=Math.atan2(l,u);i===at.CLOCKWISE?a<=c&&(a+=2*Math.PI):a>=c&&(a-=2*Math.PI),this._segList.addPt(e),this.addFilletArc(t,a,c,i,r),this._segList.addPt(n)},Pn.prototype.addOutsideTurn=function(t,e){if(this._offset0.p1.distance(this._offset1.p0)<this._distance*Pn.OFFSET_SEGMENT_SEPARATION_FACTOR)return this._segList.addPt(this._offset0.p1),null;this._bufParams.getJoinStyle()===Cn.JOIN_MITRE?this.addMitreJoin(this._s1,this._offset0,this._offset1,this._distance):this._bufParams.getJoinStyle()===Cn.JOIN_BEVEL?this.addBevelJoin(this._offset0,this._offset1):(e&&this._segList.addPt(this._offset0.p1),this.addFilletCorner(this._s1,this._offset0.p1,this._offset1.p0,t,this._distance),this._segList.addPt(this._offset1.p0))},Pn.prototype.createSquare=function(t){this._segList.addPt(new C(t.x+this._distance,t.y+this._distance)),this._segList.addPt(new C(t.x+this._distance,t.y-this._distance)),this._segList.addPt(new C(t.x-this._distance,t.y-this._distance)),this._segList.addPt(new C(t.x-this._distance,t.y+this._distance)),this._segList.closeRing()},Pn.prototype.addSegments=function(t,e){this._segList.addPts(t,e)},Pn.prototype.addFirstSegment=function(){this._segList.addPt(this._offset1.p0)},Pn.prototype.addLastSegment=function(){this._segList.addPt(this._offset1.p1)},Pn.prototype.initSideSegments=function(t,e,n){this._s1=t,this._s2=e,this._side=n,this._seg1.setCoordinates(t,e),this.computeOffsetSegment(this._seg1,n,this._distance,this._offset1)},Pn.prototype.addLimitedMitreJoin=function(t,e,n,i){var r=this._seg0.p1,o=Tn.angle(r,this._seg0.p0),s=Tn.angleBetweenOriented(this._seg0.p0,r,this._seg1.p1)/2,a=Tn.normalize(o+s),u=Tn.normalize(a+Math.PI),l=i*n,c=n-l*Math.abs(Math.sin(s)),p=r.x+l*Math.cos(u),h=r.y+l*Math.sin(u),f=new C(p,h),g=new dn(r,f),d=g.pointAlongOffset(1,c),y=g.pointAlongOffset(1,-c);this._side===Se.LEFT?(this._segList.addPt(d),this._segList.addPt(y)):(this._segList.addPt(y),this._segList.addPt(d))},Pn.prototype.computeOffsetSegment=function(t,e,n,i){var r=e===Se.LEFT?1:-1,o=t.p1.x-t.p0.x,s=t.p1.y-t.p0.y,a=Math.sqrt(o*o+s*s),u=r*n*o/a,l=r*n*s/a;i.p0.x=t.p0.x-l,i.p0.y=t.p0.y+u,i.p1.x=t.p1.x-l,i.p1.y=t.p1.y+u},Pn.prototype.addFilletArc=function(t,e,n,i,r){var o=i===at.CLOCKWISE?-1:1,s=Math.abs(e-n),a=Math.trunc(s/this._filletAngleQuantum+.5);if(a<1)return null;for(var u=s/a,l=0,c=new C;l<s;){var p=e+o*l;c.x=t.x+r*Math.cos(p),c.y=t.y+r*Math.sin(p),this._segList.addPt(c),l+=u}},Pn.prototype.addInsideTurn=function(t,e){if(this._li.computeIntersection(this._offset0.p0,this._offset0.p1,this._offset1.p0,this._offset1.p1),this._li.hasIntersection())this._segList.addPt(this._li.getIntersection(0));else if(this._hasNarrowConcaveAngle=!0,this._offset0.p1.distance(this._offset1.p0)<this._distance*Pn.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR)this._segList.addPt(this._offset0.p1);else{if(this._segList.addPt(this._offset0.p1),this._closingSegLengthFactor>0){var n=new C((this._closingSegLengthFactor*this._offset0.p1.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset0.p1.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(n);var i=new C((this._closingSegLengthFactor*this._offset1.p0.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset1.p0.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(i)}else this._segList.addPt(this._s1);this._segList.addPt(this._offset1.p0)}},Pn.prototype.createCircle=function(t){var e=new C(t.x+this._distance,t.y);this._segList.addPt(e),this.addFilletArc(t,0,2*Math.PI,-1,this._distance),this._segList.closeRing()},Pn.prototype.addBevelJoin=function(t,e){this._segList.addPt(t.p1),this._segList.addPt(e.p0)},Pn.prototype.init=function(t){this._distance=t,this._maxCurveSegmentError=t*(1-Math.cos(this._filletAngleQuantum/2)),this._segList=new wn,this._segList.setPrecisionModel(this._precisionModel),this._segList.setMinimumVertexDistance(t*Pn.CURVE_VERTEX_SNAP_DISTANCE_FACTOR)},Pn.prototype.addCollinear=function(t){this._li.computeIntersection(this._s0,this._s1,this._s1,this._s2);this._li.getIntersectionNum()>=2&&(this._bufParams.getJoinStyle()===Cn.JOIN_BEVEL||this._bufParams.getJoinStyle()===Cn.JOIN_MITRE?(t&&this._segList.addPt(this._offset0.p1),this._segList.addPt(this._offset1.p0)):this.addFilletCorner(this._s1,this._offset0.p1,this._offset1.p0,at.CLOCKWISE,this._distance))},Pn.prototype.closeRing=function(){this._segList.closeRing()},Pn.prototype.hasNarrowConcaveAngle=function(){return this._hasNarrowConcaveAngle},Pn.prototype.interfaces_=function(){return[]},Pn.prototype.getClass=function(){return Pn},Dn.OFFSET_SEGMENT_SEPARATION_FACTOR.get=function(){return.001},Dn.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get=function(){return.001},Dn.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get=function(){return 1e-6},Dn.MAX_CLOSING_SEG_LEN_FACTOR.get=function(){return 80},Object.defineProperties(Pn,Dn);var Mn=function(){this._distance=0,this._precisionModel=null,this._bufParams=null;var t=arguments[0],e=arguments[1];this._precisionModel=t,this._bufParams=e};Mn.prototype.getOffsetCurve=function(t,e){if(this._distance=e,0===e)return null;var n=e<0,i=Math.abs(e),r=this.getSegGen(i);t.length<=1?this.computePointCurve(t[0],r):this.computeOffsetCurve(t,n,r);var o=r.getCoordinates();return n&&Lt.reverse(o),o},Mn.prototype.computeSingleSidedBufferCurve=function(t,e,n){var i=this.simplifyTolerance(this._distance);if(e){n.addSegments(t,!0);var r=Ln.simplify(t,-i),o=r.length-1;n.initSideSegments(r[o],r[o-1],Se.LEFT),n.addFirstSegment();for(var s=o-2;s>=0;s--)n.addNextSegment(r[s],!0)}else{n.addSegments(t,!1);var a=Ln.simplify(t,i),u=a.length-1;n.initSideSegments(a[0],a[1],Se.LEFT),n.addFirstSegment();for(var l=2;l<=u;l++)n.addNextSegment(a[l],!0)}n.addLastSegment(),n.closeRing()},Mn.prototype.computeRingBufferCurve=function(t,e,n){var i=this.simplifyTolerance(this._distance);e===Se.RIGHT&&(i=-i);var r=Ln.simplify(t,i),o=r.length-1;n.initSideSegments(r[o-1],r[0],e);for(var s=1;s<=o;s++){var a=1!==s;n.addNextSegment(r[s],a)}n.closeRing()},Mn.prototype.computeLineBufferCurve=function(t,e){var n=this.simplifyTolerance(this._distance),i=Ln.simplify(t,n),r=i.length-1;e.initSideSegments(i[0],i[1],Se.LEFT);for(var o=2;o<=r;o++)e.addNextSegment(i[o],!0);e.addLastSegment(),e.addLineEndCap(i[r-1],i[r]);var s=Ln.simplify(t,-n),a=s.length-1;e.initSideSegments(s[a],s[a-1],Se.LEFT);for(var u=a-2;u>=0;u--)e.addNextSegment(s[u],!0);e.addLastSegment(),e.addLineEndCap(s[1],s[0]),e.closeRing()},Mn.prototype.computePointCurve=function(t,e){switch(this._bufParams.getEndCapStyle()){case Cn.CAP_ROUND:e.createCircle(t);break;case Cn.CAP_SQUARE:e.createSquare(t)}},Mn.prototype.getLineCurve=function(t,e){if(this._distance=e,e<0&&!this._bufParams.isSingleSided())return null;if(0===e)return null;var n=Math.abs(e),i=this.getSegGen(n);if(t.length<=1)this.computePointCurve(t[0],i);else if(this._bufParams.isSingleSided()){var r=e<0;this.computeSingleSidedBufferCurve(t,r,i)}else this.computeLineBufferCurve(t,i);return i.getCoordinates()},Mn.prototype.getBufferParameters=function(){return this._bufParams},Mn.prototype.simplifyTolerance=function(t){return t*this._bufParams.getSimplifyFactor()},Mn.prototype.getRingCurve=function(t,e,n){if(this._distance=n,t.length<=2)return this.getLineCurve(t,n);if(0===n)return Mn.copyCoordinates(t);var i=this.getSegGen(n);return this.computeRingBufferCurve(t,e,i),i.getCoordinates()},Mn.prototype.computeOffsetCurve=function(t,e,n){var i=this.simplifyTolerance(this._distance);if(e){var r=Ln.simplify(t,-i),o=r.length-1;n.initSideSegments(r[o],r[o-1],Se.LEFT),n.addFirstSegment();for(var s=o-2;s>=0;s--)n.addNextSegment(r[s],!0)}else{var a=Ln.simplify(t,i),u=a.length-1;n.initSideSegments(a[0],a[1],Se.LEFT),n.addFirstSegment();for(var l=2;l<=u;l++)n.addNextSegment(a[l],!0)}n.addLastSegment()},Mn.prototype.getSegGen=function(t){return new Pn(this._precisionModel,this._bufParams,t)},Mn.prototype.interfaces_=function(){return[]},Mn.prototype.getClass=function(){return Mn},Mn.copyCoordinates=function(t){for(var e=new Array(t.length).fill(null),n=0;n<e.length;n++)e[n]=new C(t[n]);return e};var An=function(){this._subgraphs=null,this._seg=new dn,this._cga=new at;var t=arguments[0];this._subgraphs=t},Fn={DepthSegment:{configurable:!0}};An.prototype.findStabbedSegments=function(){if(1===arguments.length){for(var t=arguments[0],e=new Nt,n=this._subgraphs.iterator();n.hasNext();){var i=n.next(),r=i.getEnvelope();t.y<r.getMinY()||t.y>r.getMaxY()||this.findStabbedSegments(t,i.getDirectedEdges(),e)}return e}if(3===arguments.length)if(T(arguments[2],xt)&&arguments[0]instanceof C&&arguments[1]instanceof ze)for(var o=arguments[0],s=arguments[1],a=arguments[2],u=s.getEdge().getCoordinates(),l=0;l<u.length-1;l++){this._seg.p0=u[l],this._seg.p1=u[l+1],this._seg.p0.y>this._seg.p1.y&&this._seg.reverse();if(!(Math.max(this._seg.p0.x,this._seg.p1.x)<o.x)&&!(this._seg.isHorizontal()||o.y<this._seg.p0.y||o.y>this._seg.p1.y||at.computeOrientation(this._seg.p0,this._seg.p1,o)===at.RIGHT)){var c=s.getDepth(Se.LEFT);this._seg.p0.equals(u[l])||(c=s.getDepth(Se.RIGHT));var p=new Gn(this._seg,c);a.add(p)}}else if(T(arguments[2],xt)&&arguments[0]instanceof C&&T(arguments[1],xt))for(var h=arguments[0],f=arguments[1],g=arguments[2],d=f.iterator();d.hasNext();){var y=d.next();y.isForward()&&this.findStabbedSegments(h,y,g)}},An.prototype.getDepth=function(t){var e=this.findStabbedSegments(t);if(0===e.size())return 0;return $e.min(e)._leftDepth},An.prototype.interfaces_=function(){return[]},An.prototype.getClass=function(){return An},Fn.DepthSegment.get=function(){return Gn},Object.defineProperties(An,Fn);var Gn=function(){this._upwardSeg=null,this._leftDepth=null;var t=arguments[0],e=arguments[1];this._upwardSeg=new dn(t),this._leftDepth=e};Gn.prototype.compareTo=function(t){var e=t;if(this._upwardSeg.minX()>=e._upwardSeg.maxX())return 1;if(this._upwardSeg.maxX()<=e._upwardSeg.minX())return-1;var n=this._upwardSeg.orientationIndex(e._upwardSeg);return 0!==n?n:0!=(n=-1*e._upwardSeg.orientationIndex(this._upwardSeg))?n:this._upwardSeg.compareTo(e._upwardSeg)},Gn.prototype.compareX=function(t,e){var n=t.p0.compareTo(e.p0);return 0!==n?n:t.p1.compareTo(e.p1)},Gn.prototype.toString=function(){return this._upwardSeg.toString()},Gn.prototype.interfaces_=function(){return[E]},Gn.prototype.getClass=function(){return Gn};var qn=function(t,e,n){this.p0=t||null,this.p1=e||null,this.p2=n||null};qn.prototype.area=function(){return qn.area(this.p0,this.p1,this.p2)},qn.prototype.signedArea=function(){return qn.signedArea(this.p0,this.p1,this.p2)},qn.prototype.interpolateZ=function(t){if(null===t)throw new m(\"Supplied point is null.\");return qn.interpolateZ(t,this.p0,this.p1,this.p2)},qn.prototype.longestSideLength=function(){return qn.longestSideLength(this.p0,this.p1,this.p2)},qn.prototype.isAcute=function(){return qn.isAcute(this.p0,this.p1,this.p2)},qn.prototype.circumcentre=function(){return qn.circumcentre(this.p0,this.p1,this.p2)},qn.prototype.area3D=function(){return qn.area3D(this.p0,this.p1,this.p2)},qn.prototype.centroid=function(){return qn.centroid(this.p0,this.p1,this.p2)},qn.prototype.inCentre=function(){return qn.inCentre(this.p0,this.p1,this.p2)},qn.prototype.interfaces_=function(){return[]},qn.prototype.getClass=function(){return qn},qn.area=function(t,e,n){return Math.abs(((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2)},qn.signedArea=function(t,e,n){return((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2},qn.det=function(t,e,n,i){return t*i-e*n},qn.interpolateZ=function(t,e,n,i){var r=e.x,o=e.y,s=n.x-r,a=i.x-r,u=n.y-o,l=i.y-o,c=s*l-a*u,p=t.x-r,h=t.y-o,f=(l*p-a*h)/c,g=(-u*p+s*h)/c;return e.z+f*(n.z-e.z)+g*(i.z-e.z)},qn.longestSideLength=function(t,e,n){var i=t.distance(e),r=e.distance(n),o=n.distance(t),s=i;return r>s&&(s=r),o>s&&(s=o),s},qn.isAcute=function(t,e,n){return!!Tn.isAcute(t,e,n)&&(!!Tn.isAcute(e,n,t)&&!!Tn.isAcute(n,t,e))},qn.circumcentre=function(t,e,n){var i=n.x,r=n.y,o=t.x-i,s=t.y-r,a=e.x-i,u=e.y-r,l=2*qn.det(o,s,a,u),c=qn.det(s,o*o+s*s,u,a*a+u*u),p=qn.det(o,o*o+s*s,a,a*a+u*u);return new C(i-c/l,r+p/l)},qn.perpendicularBisector=function(t,e){var n=e.x-t.x,i=e.y-t.y,r=new k(t.x+n/2,t.y+i/2,1),o=new k(t.x-i+n/2,t.y+n+i/2,1);return new k(r,o)},qn.angleBisector=function(t,e,n){var i=e.distance(t),r=i/(i+e.distance(n)),o=n.x-t.x,s=n.y-t.y;return new C(t.x+r*o,t.y+r*s)},qn.area3D=function(t,e,n){var i=e.x-t.x,r=e.y-t.y,o=e.z-t.z,s=n.x-t.x,a=n.y-t.y,u=n.z-t.z,l=r*u-o*a,c=o*s-i*u,p=i*a-r*s,h=l*l+c*c+p*p,f=Math.sqrt(h)/2;return f},qn.centroid=function(t,e,n){var i=(t.x+e.x+n.x)/3,r=(t.y+e.y+n.y)/3;return new C(i,r)},qn.inCentre=function(t,e,n){var i=e.distance(n),r=t.distance(n),o=t.distance(e),s=i+r+o,a=(i*t.x+r*e.x+o*n.x)/s,u=(i*t.y+r*e.y+o*n.y)/s;return new C(a,u)};var Bn=function(){this._inputGeom=null,this._distance=null,this._curveBuilder=null,this._curveList=new Nt;var t=arguments[0],e=arguments[1],n=arguments[2];this._inputGeom=t,this._distance=e,this._curveBuilder=n};Bn.prototype.addPoint=function(t){if(this._distance<=0)return null;var e=t.getCoordinates(),n=this._curveBuilder.getLineCurve(e,this._distance);this.addCurve(n,w.EXTERIOR,w.INTERIOR)},Bn.prototype.addPolygon=function(t){var e=this._distance,n=Se.LEFT;this._distance<0&&(e=-this._distance,n=Se.RIGHT);var i=t.getExteriorRing(),r=Lt.removeRepeatedPoints(i.getCoordinates());if(this._distance<0&&this.isErodedCompletely(i,this._distance))return null;if(this._distance<=0&&r.length<3)return null;this.addPolygonRing(r,e,n,w.EXTERIOR,w.INTERIOR);for(var o=0;o<t.getNumInteriorRing();o++){var s=t.getInteriorRingN(o),a=Lt.removeRepeatedPoints(s.getCoordinates());this._distance>0&&this.isErodedCompletely(s,-this._distance)||this.addPolygonRing(a,e,Se.opposite(n),w.INTERIOR,w.EXTERIOR)}},Bn.prototype.isTriangleErodedCompletely=function(t,e){var n=new qn(t[0],t[1],t[2]),i=n.inCentre();return at.distancePointLine(i,n.p0,n.p1)<Math.abs(e)},Bn.prototype.addLineString=function(t){if(this._distance<=0&&!this._curveBuilder.getBufferParameters().isSingleSided())return null;var e=Lt.removeRepeatedPoints(t.getCoordinates()),n=this._curveBuilder.getLineCurve(e,this._distance);this.addCurve(n,w.EXTERIOR,w.INTERIOR)},Bn.prototype.addCurve=function(t,e,n){if(null===t||t.length<2)return null;var i=new gn(t,new Pe(0,w.BOUNDARY,e,n));this._curveList.add(i)},Bn.prototype.getCurves=function(){return this.add(this._inputGeom),this._curveList},Bn.prototype.addPolygonRing=function(t,e,n,i,r){if(0===e&&t.length<ee.MINIMUM_VALID_SIZE)return null;var o=i,s=r;t.length>=ee.MINIMUM_VALID_SIZE&&at.isCCW(t)&&(o=r,s=i,n=Se.opposite(n));var a=this._curveBuilder.getRingCurve(t,n,e);this.addCurve(a,o,s)},Bn.prototype.add=function(t){if(t.isEmpty())return null;t instanceof $t?this.addPolygon(t):t instanceof Kt?this.addLineString(t):t instanceof Qt?this.addPoint(t):t instanceof te?this.addCollection(t):t instanceof Xt?this.addCollection(t):t instanceof ne?this.addCollection(t):t instanceof zt&&this.addCollection(t)},Bn.prototype.isErodedCompletely=function(t,e){var n=t.getCoordinates();if(n.length<4)return e<0;if(4===n.length)return this.isTriangleErodedCompletely(n,e);var i=t.getEnvelopeInternal(),r=Math.min(i.getHeight(),i.getWidth());return e<0&&2*Math.abs(e)>r},Bn.prototype.addCollection=function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);this.add(n)}},Bn.prototype.interfaces_=function(){return[]},Bn.prototype.getClass=function(){return Bn};var Vn=function(){};Vn.prototype.locate=function(t){},Vn.prototype.interfaces_=function(){return[]},Vn.prototype.getClass=function(){return Vn};var Un=function(){this._parent=null,this._atStart=null,this._max=null,this._index=null,this._subcollectionIterator=null;var t=arguments[0];this._parent=t,this._atStart=!0,this._index=0,this._max=t.getNumGeometries()};Un.prototype.next=function(){if(this._atStart)return this._atStart=!1,Un.isAtomic(this._parent)&&this._index++,this._parent;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return this._subcollectionIterator.next();this._subcollectionIterator=null}if(this._index>=this._max)throw new i;var t=this._parent.getGeometryN(this._index++);return t instanceof zt?(this._subcollectionIterator=new Un(t),this._subcollectionIterator.next()):t},Un.prototype.remove=function(){throw new Error(this.getClass().getName())},Un.prototype.hasNext=function(){if(this._atStart)return!0;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return!0;this._subcollectionIterator=null}return!(this._index>=this._max)},Un.prototype.interfaces_=function(){return[Et]},Un.prototype.getClass=function(){return Un},Un.isAtomic=function(t){return!(t instanceof zt)};var zn=function(){this._geom=null;var t=arguments[0];this._geom=t};zn.prototype.locate=function(t){return zn.locate(t,this._geom)},zn.prototype.interfaces_=function(){return[Vn]},zn.prototype.getClass=function(){return zn},zn.isPointInRing=function(t,e){return!!e.getEnvelopeInternal().intersects(t)&&at.isPointInRing(t,e.getCoordinates())},zn.containsPointInPolygon=function(t,e){if(e.isEmpty())return!1;var n=e.getExteriorRing();if(!zn.isPointInRing(t,n))return!1;for(var i=0;i<e.getNumInteriorRing();i++){var r=e.getInteriorRingN(i);if(zn.isPointInRing(t,r))return!1}return!0},zn.containsPoint=function(t,e){if(e instanceof $t)return zn.containsPointInPolygon(t,e);if(e instanceof zt)for(var n=new Un(e);n.hasNext();){var i=n.next();if(i!==e&&zn.containsPoint(t,i))return!0}return!1},zn.locate=function(t,e){return e.isEmpty()?w.EXTERIOR:zn.containsPoint(t,e)?w.INTERIOR:w.EXTERIOR};var Xn=function(){this._edgeMap=new p,this._edgeList=null,this._ptInAreaLocation=[w.NONE,w.NONE]};Xn.prototype.getNextCW=function(t){this.getEdges();var e=this._edgeList.indexOf(t),n=e-1;return 0===e&&(n=this._edgeList.size()-1),this._edgeList.get(n)},Xn.prototype.propagateSideLabels=function(t){for(var e=w.NONE,n=this.iterator();n.hasNext();){var i=n.next().getLabel();i.isArea(t)&&i.getLocation(t,Se.LEFT)!==w.NONE&&(e=i.getLocation(t,Se.LEFT))}if(e===w.NONE)return null;for(var r=e,o=this.iterator();o.hasNext();){var s=o.next(),a=s.getLabel();if(a.getLocation(t,Se.ON)===w.NONE&&a.setLocation(t,Se.ON,r),a.isArea(t)){var u=a.getLocation(t,Se.LEFT),l=a.getLocation(t,Se.RIGHT);if(l!==w.NONE){if(l!==r)throw new we(\"side location conflict\",s.getCoordinate());u===w.NONE&&et.shouldNeverReachHere(\"found single null side (at \"+s.getCoordinate()+\")\"),r=u}else et.isTrue(a.getLocation(t,Se.LEFT)===w.NONE,\"found single null side\"),a.setLocation(t,Se.RIGHT,r),a.setLocation(t,Se.LEFT,r)}}},Xn.prototype.getCoordinate=function(){var t=this.iterator();if(!t.hasNext())return null;return t.next().getCoordinate()},Xn.prototype.print=function(t){Y.out.println(\"EdgeEndStar:   \"+this.getCoordinate());for(var e=this.iterator();e.hasNext();){e.next().print(t)}},Xn.prototype.isAreaLabelsConsistent=function(t){return this.computeEdgeEndLabels(t.getBoundaryNodeRule()),this.checkAreaLabelsConsistent(0)},Xn.prototype.checkAreaLabelsConsistent=function(t){var e=this.getEdges();if(e.size()<=0)return!0;var n=e.size()-1,i=e.get(n).getLabel().getLocation(t,Se.LEFT);et.isTrue(i!==w.NONE,\"Found unlabelled area edge\");for(var r=i,o=this.iterator();o.hasNext();){var s=o.next().getLabel();et.isTrue(s.isArea(t),\"Found non-area edge\");var a=s.getLocation(t,Se.LEFT),u=s.getLocation(t,Se.RIGHT);if(a===u)return!1;if(u!==r)return!1;r=a}return!0},Xn.prototype.findIndex=function(t){this.iterator();for(var e=0;e<this._edgeList.size();e++){if(this._edgeList.get(e)===t)return e}return-1},Xn.prototype.iterator=function(){return this.getEdges().iterator()},Xn.prototype.getEdges=function(){return null===this._edgeList&&(this._edgeList=new Nt(this._edgeMap.values())),this._edgeList},Xn.prototype.getLocation=function(t,e,n){return this._ptInAreaLocation[t]===w.NONE&&(this._ptInAreaLocation[t]=zn.locate(e,n[t].getGeometry())),this._ptInAreaLocation[t]},Xn.prototype.toString=function(){var t=new D;t.append(\"EdgeEndStar:   \"+this.getCoordinate()),t.append(\"\\n\");for(var e=this.iterator();e.hasNext();){var n=e.next();t.append(n),t.append(\"\\n\")}return t.toString()},Xn.prototype.computeEdgeEndLabels=function(t){for(var e=this.iterator();e.hasNext();){e.next().computeLabel(t)}},Xn.prototype.computeLabelling=function(t){this.computeEdgeEndLabels(t[0].getBoundaryNodeRule()),this.propagateSideLabels(0),this.propagateSideLabels(1);for(var e=[!1,!1],n=this.iterator();n.hasNext();)for(var i=n.next().getLabel(),r=0;r<2;r++)i.isLine(r)&&i.getLocation(r)===w.BOUNDARY&&(e[r]=!0);for(var o=this.iterator();o.hasNext();)for(var s=o.next(),a=s.getLabel(),u=0;u<2;u++)if(a.isAnyNull(u)){var l=w.NONE;if(e[u])l=w.EXTERIOR;else{var c=s.getCoordinate();l=this.getLocation(u,c,t)}a.setAllLocationsIfNull(u,l)}},Xn.prototype.getDegree=function(){return this._edgeMap.size()},Xn.prototype.insertEdgeEnd=function(t,e){this._edgeMap.put(t,e),this._edgeList=null},Xn.prototype.interfaces_=function(){return[]},Xn.prototype.getClass=function(){return Xn};var Yn=function(t){function e(){t.call(this),this._resultAreaEdgeList=null,this._label=null,this._SCANNING_FOR_INCOMING=1,this._LINKING_TO_OUTGOING=2}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.linkResultDirectedEdges=function(){this.getResultAreaEdges();for(var t=null,e=null,n=this._SCANNING_FOR_INCOMING,i=0;i<this._resultAreaEdgeList.size();i++){var r=this._resultAreaEdgeList.get(i),o=r.getSym();if(r.getLabel().isArea())switch(null===t&&r.isInResult()&&(t=r),n){case this._SCANNING_FOR_INCOMING:if(!o.isInResult())continue;e=o,n=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(!r.isInResult())continue;e.setNext(r),n=this._SCANNING_FOR_INCOMING}}if(n===this._LINKING_TO_OUTGOING){if(null===t)throw new we(\"no outgoing dirEdge found\",this.getCoordinate());et.isTrue(t.isInResult(),\"unable to link last incoming dirEdge\"),e.setNext(t)}},e.prototype.insert=function(t){var e=t;this.insertEdgeEnd(e,e)},e.prototype.getRightmostEdge=function(){var t=this.getEdges(),e=t.size();if(e<1)return null;var n=t.get(0);if(1===e)return n;var i=t.get(e-1),r=n.getQuadrant(),o=i.getQuadrant();return Be.isNorthern(r)&&Be.isNorthern(o)?n:Be.isNorthern(r)||Be.isNorthern(o)?0!==n.getDy()?n:0!==i.getDy()?i:(et.shouldNeverReachHere(\"found two horizontal edges incident on node\"),null):i},e.prototype.print=function(t){Y.out.println(\"DirectedEdgeStar: \"+this.getCoordinate());for(var e=this.iterator();e.hasNext();){var n=e.next();t.print(\"out \"),n.print(t),t.println(),t.print(\"in \"),n.getSym().print(t),t.println()}},e.prototype.getResultAreaEdges=function(){if(null!==this._resultAreaEdgeList)return this._resultAreaEdgeList;this._resultAreaEdgeList=new Nt;for(var t=this.iterator();t.hasNext();){var e=t.next();(e.isInResult()||e.getSym().isInResult())&&this._resultAreaEdgeList.add(e)}return this._resultAreaEdgeList},e.prototype.updateLabelling=function(t){for(var e=this.iterator();e.hasNext();){var n=e.next().getLabel();n.setAllLocationsIfNull(0,t.getLocation(0)),n.setAllLocationsIfNull(1,t.getLocation(1))}},e.prototype.linkAllDirectedEdges=function(){this.getEdges();for(var t=null,e=null,n=this._edgeList.size()-1;n>=0;n--){var i=this._edgeList.get(n),r=i.getSym();null===e&&(e=r),null!==t&&r.setNext(t),t=i}e.setNext(t)},e.prototype.computeDepths=function(){if(1===arguments.length){var t=arguments[0],e=this.findIndex(t),n=t.getDepth(Se.LEFT),i=t.getDepth(Se.RIGHT),r=this.computeDepths(e+1,this._edgeList.size(),n);if(this.computeDepths(0,e,r)!==i)throw new we(\"depth mismatch at \"+t.getCoordinate())}else if(3===arguments.length){for(var o=arguments[0],s=arguments[1],a=arguments[2],u=o;u<s;u++){var l=this._edgeList.get(u);l.setEdgeDepths(Se.RIGHT,a),a=l.getDepth(Se.LEFT)}return a}},e.prototype.mergeSymLabels=function(){for(var t=this.iterator();t.hasNext();){var e=t.next();e.getLabel().merge(e.getSym().getLabel())}},e.prototype.linkMinimalDirectedEdges=function(t){for(var e=null,n=null,i=this._SCANNING_FOR_INCOMING,r=this._resultAreaEdgeList.size()-1;r>=0;r--){var o=this._resultAreaEdgeList.get(r),s=o.getSym();switch(null===e&&o.getEdgeRing()===t&&(e=o),i){case this._SCANNING_FOR_INCOMING:if(s.getEdgeRing()!==t)continue;n=s,i=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(o.getEdgeRing()!==t)continue;n.setNextMin(o),i=this._SCANNING_FOR_INCOMING}}i===this._LINKING_TO_OUTGOING&&(et.isTrue(null!==e,\"found null for first outgoing dirEdge\"),et.isTrue(e.getEdgeRing()===t,\"unable to link last incoming dirEdge\"),n.setNextMin(e))},e.prototype.getOutgoingDegree=function(){if(0===arguments.length){for(var t=0,e=this.iterator();e.hasNext();){e.next().isInResult()&&t++}return t}if(1===arguments.length){for(var n=arguments[0],i=0,r=this.iterator();r.hasNext();){r.next().getEdgeRing()===n&&i++}return i}},e.prototype.getLabel=function(){return this._label},e.prototype.findCoveredLineEdges=function(){for(var t=w.NONE,e=this.iterator();e.hasNext();){var n=e.next(),i=n.getSym();if(!n.isLineEdge()){if(n.isInResult()){t=w.INTERIOR;break}if(i.isInResult()){t=w.EXTERIOR;break}}}if(t===w.NONE)return null;for(var r=t,o=this.iterator();o.hasNext();){var s=o.next(),a=s.getSym();s.isLineEdge()?s.getEdge().setCovered(r===w.INTERIOR):(s.isInResult()&&(r=w.EXTERIOR),a.isInResult()&&(r=w.INTERIOR))}},e.prototype.computeLabelling=function(e){t.prototype.computeLabelling.call(this,e),this._label=new Pe(w.NONE);for(var n=this.iterator();n.hasNext();)for(var i=n.next().getEdge().getLabel(),r=0;r<2;r++){var o=i.getLocation(r);o!==w.INTERIOR&&o!==w.BOUNDARY||this._label.setLocation(r,w.INTERIOR)}},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Xn),kn=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.createNode=function(t){return new Ge(t,new Yn)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Xe),jn=function t(){this._pts=null,this._orientation=null;var e=arguments[0];this._pts=e,this._orientation=t.orientation(e)};jn.prototype.compareTo=function(t){var e=t;return jn.compareOriented(this._pts,this._orientation,e._pts,e._orientation)},jn.prototype.interfaces_=function(){return[E]},jn.prototype.getClass=function(){return jn},jn.orientation=function(t){return 1===Lt.increasingDirection(t)},jn.compareOriented=function(t,e,n,i){for(var r=e?1:-1,o=i?1:-1,s=e?t.length:-1,a=i?n.length:-1,u=e?0:t.length-1,l=i?0:n.length-1;;){var c=t[u].compareTo(n[l]);if(0!==c)return c;var p=(u+=r)===s,h=(l+=o)===a;if(p&&!h)return-1;if(!p&&h)return 1;if(p&&h)return 0}};var Hn=function(){this._edges=new Nt,this._ocaMap=new p};Hn.prototype.print=function(t){t.print(\"MULTILINESTRING ( \");for(var e=0;e<this._edges.size();e++){var n=this._edges.get(e);e>0&&t.print(\",\"),t.print(\"(\");for(var i=n.getCoordinates(),r=0;r<i.length;r++)r>0&&t.print(\",\"),t.print(i[r].x+\" \"+i[r].y);t.println(\")\")}t.print(\")  \")},Hn.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next())},Hn.prototype.findEdgeIndex=function(t){for(var e=0;e<this._edges.size();e++)if(this._edges.get(e).equals(t))return e;return-1},Hn.prototype.iterator=function(){return this._edges.iterator()},Hn.prototype.getEdges=function(){return this._edges},Hn.prototype.get=function(t){return this._edges.get(t)},Hn.prototype.findEqualEdge=function(t){var e=new jn(t.getCoordinates());return this._ocaMap.get(e)},Hn.prototype.add=function(t){this._edges.add(t);var e=new jn(t.getCoordinates());this._ocaMap.put(e,t)},Hn.prototype.interfaces_=function(){return[]},Hn.prototype.getClass=function(){return Hn};var Wn=function(){};Wn.prototype.processIntersections=function(t,e,n,i){},Wn.prototype.isDone=function(){},Wn.prototype.interfaces_=function(){return[]},Wn.prototype.getClass=function(){return Wn};var Kn=function(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._hasInterior=!1,this._properIntersectionPoint=null,this._li=null,this._isSelfIntersection=null,this.numIntersections=0,this.numInteriorIntersections=0,this.numProperIntersections=0,this.numTests=0;var t=arguments[0];this._li=t};Kn.prototype.isTrivialIntersection=function(t,e,n,i){if(t===n&&1===this._li.getIntersectionNum()){if(Kn.isAdjacentSegments(e,i))return!0;if(t.isClosed()){var r=t.size()-1;if(0===e&&i===r||0===i&&e===r)return!0}}return!1},Kn.prototype.getProperIntersectionPoint=function(){return this._properIntersectionPoint},Kn.prototype.hasProperInteriorIntersection=function(){return this._hasProperInterior},Kn.prototype.getLineIntersector=function(){return this._li},Kn.prototype.hasProperIntersection=function(){return this._hasProper},Kn.prototype.processIntersections=function(t,e,n,i){if(t===n&&e===i)return null;this.numTests++;var r=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[i],a=n.getCoordinates()[i+1];this._li.computeIntersection(r,o,s,a),this._li.hasIntersection()&&(this.numIntersections++,this._li.isInteriorIntersection()&&(this.numInteriorIntersections++,this._hasInterior=!0),this.isTrivialIntersection(t,e,n,i)||(this._hasIntersection=!0,t.addIntersections(this._li,e,0),n.addIntersections(this._li,i,1),this._li.isProper()&&(this.numProperIntersections++,this._hasProper=!0,this._hasProperInterior=!0)))},Kn.prototype.hasIntersection=function(){return this._hasIntersection},Kn.prototype.isDone=function(){return!1},Kn.prototype.hasInteriorIntersection=function(){return this._hasInterior},Kn.prototype.interfaces_=function(){return[Wn]},Kn.prototype.getClass=function(){return Kn},Kn.isAdjacentSegments=function(t,e){return 1===Math.abs(t-e)};var Jn=function(){this.coord=null,this.segmentIndex=null,this.dist=null;var t=arguments[0],e=arguments[1],n=arguments[2];this.coord=new C(t),this.segmentIndex=e,this.dist=n};Jn.prototype.getSegmentIndex=function(){return this.segmentIndex},Jn.prototype.getCoordinate=function(){return this.coord},Jn.prototype.print=function(t){t.print(this.coord),t.print(\" seg # = \"+this.segmentIndex),t.println(\" dist = \"+this.dist)},Jn.prototype.compareTo=function(t){var e=t;return this.compare(e.segmentIndex,e.dist)},Jn.prototype.isEndPoint=function(t){return 0===this.segmentIndex&&0===this.dist||this.segmentIndex===t},Jn.prototype.toString=function(){return this.coord+\" seg # = \"+this.segmentIndex+\" dist = \"+this.dist},Jn.prototype.getDistance=function(){return this.dist},Jn.prototype.compare=function(t,e){return this.segmentIndex<t?-1:this.segmentIndex>t?1:this.dist<e?-1:this.dist>e?1:0},Jn.prototype.interfaces_=function(){return[E]},Jn.prototype.getClass=function(){return Jn};var Qn=function(){this._nodeMap=new p,this.edge=null;var t=arguments[0];this.edge=t};Qn.prototype.print=function(t){t.println(\"Intersections:\");for(var e=this.iterator();e.hasNext();){e.next().print(t)}},Qn.prototype.iterator=function(){return this._nodeMap.values().iterator()},Qn.prototype.addSplitEdges=function(t){this.addEndpoints();for(var e=this.iterator(),n=e.next();e.hasNext();){var i=e.next(),r=this.createSplitEdge(n,i);t.add(r),n=i}},Qn.prototype.addEndpoints=function(){var t=this.edge.pts.length-1;this.add(this.edge.pts[0],0,0),this.add(this.edge.pts[t],t,0)},Qn.prototype.createSplitEdge=function(t,e){var n=e.segmentIndex-t.segmentIndex+2,i=this.edge.pts[e.segmentIndex],r=e.dist>0||!e.coord.equals2D(i);r||n--;var o=new Array(n).fill(null),s=0;o[s++]=new C(t.coord);for(var a=t.segmentIndex+1;a<=e.segmentIndex;a++)o[s++]=this.edge.pts[a];return r&&(o[s]=e.coord),new ni(o,new Pe(this.edge._label))},Qn.prototype.add=function(t,e,n){var i=new Jn(t,e,n),r=this._nodeMap.get(i);return null!==r?r:(this._nodeMap.put(i,i),i)},Qn.prototype.isIntersection=function(t){for(var e=this.iterator();e.hasNext();){if(e.next().coord.equals(t))return!0}return!1},Qn.prototype.interfaces_=function(){return[]},Qn.prototype.getClass=function(){return Qn};var Zn=function(){};Zn.prototype.getChainStartIndices=function(t){var e=0,n=new Nt;n.add(new M(e));do{var i=this.findChainEnd(t,e);n.add(new M(i)),e=i}while(e<t.length-1);return Zn.toIntArray(n)},Zn.prototype.findChainEnd=function(t,e){for(var n=Be.quadrant(t[e],t[e+1]),i=e+1;i<t.length;){if(Be.quadrant(t[i-1],t[i])!==n)break;i++}return i-1},Zn.prototype.interfaces_=function(){return[]},Zn.prototype.getClass=function(){return Zn},Zn.toIntArray=function(t){for(var e=new Array(t.size()).fill(null),n=0;n<e.length;n++)e[n]=t.get(n).intValue();return e};var $n=function(){this.e=null,this.pts=null,this.startIndex=null,this.env1=new j,this.env2=new j;var t=arguments[0];this.e=t,this.pts=t.getCoordinates();var e=new Zn;this.startIndex=e.getChainStartIndices(this.pts)};$n.prototype.getCoordinates=function(){return this.pts},$n.prototype.getMaxX=function(t){var e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e>n?e:n},$n.prototype.getMinX=function(t){var e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e<n?e:n},$n.prototype.computeIntersectsForChain=function(){if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.computeIntersectsForChain(this.startIndex[t],this.startIndex[t+1],e,e.startIndex[n],e.startIndex[n+1],i)}else if(6===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3],u=arguments[4],l=arguments[5],c=this.pts[r],p=this.pts[o],h=s.pts[a],f=s.pts[u];if(o-r==1&&u-a==1)return l.addIntersections(this.e,r,s.e,a),null;if(this.env1.init(c,p),this.env2.init(h,f),!this.env1.intersects(this.env2))return null;var g=Math.trunc((r+o)/2),d=Math.trunc((a+u)/2);r<g&&(a<d&&this.computeIntersectsForChain(r,g,s,a,d,l),d<u&&this.computeIntersectsForChain(r,g,s,d,u,l)),g<o&&(a<d&&this.computeIntersectsForChain(g,o,s,a,d,l),d<u&&this.computeIntersectsForChain(g,o,s,d,u,l))}},$n.prototype.getStartIndexes=function(){return this.startIndex},$n.prototype.computeIntersects=function(t,e){for(var n=0;n<this.startIndex.length-1;n++)for(var i=0;i<t.startIndex.length-1;i++)this.computeIntersectsForChain(n,t,i,e)},$n.prototype.interfaces_=function(){return[]},$n.prototype.getClass=function(){return $n};var ti=function t(){this._depth=Array(2).fill().map(function(){return Array(3)});for(var e=0;e<2;e++)for(var n=0;n<3;n++)this._depth[e][n]=t.NULL_VALUE},ei={NULL_VALUE:{configurable:!0}};ti.prototype.getDepth=function(t,e){return this._depth[t][e]},ti.prototype.setDepth=function(t,e,n){this._depth[t][e]=n},ti.prototype.isNull=function(){if(0===arguments.length){for(var t=0;t<2;t++)for(var e=0;e<3;e++)if(this._depth[t][e]!==ti.NULL_VALUE)return!1;return!0}if(1===arguments.length){var n=arguments[0];return this._depth[n][1]===ti.NULL_VALUE}if(2===arguments.length){var i=arguments[0],r=arguments[1];return this._depth[i][r]===ti.NULL_VALUE}},ti.prototype.normalize=function(){for(var t=0;t<2;t++)if(!this.isNull(t)){var e=this._depth[t][1];this._depth[t][2]<e&&(e=this._depth[t][2]),e<0&&(e=0);for(var n=1;n<3;n++){var i=0;this._depth[t][n]>e&&(i=1),this._depth[t][n]=i}}},ti.prototype.getDelta=function(t){return this._depth[t][Se.RIGHT]-this._depth[t][Se.LEFT]},ti.prototype.getLocation=function(t,e){return this._depth[t][e]<=0?w.EXTERIOR:w.INTERIOR},ti.prototype.toString=function(){return\"A: \"+this._depth[0][1]+\",\"+this._depth[0][2]+\" B: \"+this._depth[1][1]+\",\"+this._depth[1][2]},ti.prototype.add=function(){if(1===arguments.length)for(var t=arguments[0],e=0;e<2;e++)for(var n=1;n<3;n++){var i=t.getLocation(e,n);i!==w.EXTERIOR&&i!==w.INTERIOR||(this.isNull(e,n)?this._depth[e][n]=ti.depthAtLocation(i):this._depth[e][n]+=ti.depthAtLocation(i))}else if(3===arguments.length){var r=arguments[0],o=arguments[1];arguments[2]===w.INTERIOR&&this._depth[r][o]++}},ti.prototype.interfaces_=function(){return[]},ti.prototype.getClass=function(){return ti},ti.depthAtLocation=function(t){return t===w.EXTERIOR?0:t===w.INTERIOR?1:ti.NULL_VALUE},ei.NULL_VALUE.get=function(){return-1},Object.defineProperties(ti,ei);var ni=function(t){function e(){if(t.call(this),this.pts=null,this._env=null,this.eiList=new Qn(this),this._name=null,this._mce=null,this._isIsolated=!0,this._depth=new ti,this._depthDelta=0,1===arguments.length){var n=arguments[0];e.call(this,n,null)}else if(2===arguments.length){var i=arguments[0],r=arguments[1];this.pts=i,this._label=r}}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.getDepth=function(){return this._depth},e.prototype.getCollapsedEdge=function(){var t=new Array(2).fill(null);t[0]=this.pts[0],t[1]=this.pts[1];return new e(t,Pe.toLineLabel(this._label))},e.prototype.isIsolated=function(){return this._isIsolated},e.prototype.getCoordinates=function(){return this.pts},e.prototype.setIsolated=function(t){this._isIsolated=t},e.prototype.setName=function(t){this._name=t},e.prototype.equals=function(t){if(!(t instanceof e))return!1;var n=t;if(this.pts.length!==n.pts.length)return!1;for(var i=!0,r=!0,o=this.pts.length,s=0;s<this.pts.length;s++)if(this.pts[s].equals2D(n.pts[s])||(i=!1),this.pts[s].equals2D(n.pts[--o])||(r=!1),!i&&!r)return!1;return!0},e.prototype.getCoordinate=function(){if(0===arguments.length)return this.pts.length>0?this.pts[0]:null;if(1===arguments.length){var t=arguments[0];return this.pts[t]}},e.prototype.print=function(t){t.print(\"edge \"+this._name+\": \"),t.print(\"LINESTRING (\");for(var e=0;e<this.pts.length;e++)e>0&&t.print(\",\"),t.print(this.pts[e].x+\" \"+this.pts[e].y);t.print(\")  \"+this._label+\" \"+this._depthDelta)},e.prototype.computeIM=function(t){e.updateIM(this._label,t)},e.prototype.isCollapsed=function(){return!!this._label.isArea()&&(3===this.pts.length&&!!this.pts[0].equals(this.pts[2]))},e.prototype.isClosed=function(){return this.pts[0].equals(this.pts[this.pts.length-1])},e.prototype.getMaximumSegmentIndex=function(){return this.pts.length-1},e.prototype.getDepthDelta=function(){return this._depthDelta},e.prototype.getNumPoints=function(){return this.pts.length},e.prototype.printReverse=function(t){t.print(\"edge \"+this._name+\": \");for(var e=this.pts.length-1;e>=0;e--)t.print(this.pts[e]+\" \");t.println(\"\")},e.prototype.getMonotoneChainEdge=function(){return null===this._mce&&(this._mce=new $n(this)),this._mce},e.prototype.getEnvelope=function(){if(null===this._env){this._env=new j;for(var t=0;t<this.pts.length;t++)this._env.expandToInclude(this.pts[t])}return this._env},e.prototype.addIntersection=function(t,e,n,i){var r=new C(t.getIntersection(i)),o=e,s=t.getEdgeDistance(n,i),a=o+1;if(a<this.pts.length){var u=this.pts[a];r.equals2D(u)&&(o=a,s=0)}this.eiList.add(r,o,s)},e.prototype.toString=function(){var t=new D;t.append(\"edge \"+this._name+\": \"),t.append(\"LINESTRING (\");for(var e=0;e<this.pts.length;e++)e>0&&t.append(\",\"),t.append(this.pts[e].x+\" \"+this.pts[e].y);return t.append(\")  \"+this._label+\" \"+this._depthDelta),t.toString()},e.prototype.isPointwiseEqual=function(t){if(this.pts.length!==t.pts.length)return!1;for(var e=0;e<this.pts.length;e++)if(!this.pts[e].equals2D(t.pts[e]))return!1;return!0},e.prototype.setDepthDelta=function(t){this._depthDelta=t},e.prototype.getEdgeIntersectionList=function(){return this.eiList},e.prototype.addIntersections=function(t,e,n){for(var i=0;i<t.getIntersectionNum();i++)this.addIntersection(t,e,n,i)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.updateIM=function(){if(2!==arguments.length)return t.prototype.updateIM.apply(this,arguments);var e=arguments[0],n=arguments[1];n.setAtLeastIfValid(e.getLocation(0,Se.ON),e.getLocation(1,Se.ON),1),e.isArea()&&(n.setAtLeastIfValid(e.getLocation(0,Se.LEFT),e.getLocation(1,Se.LEFT),2),n.setAtLeastIfValid(e.getLocation(0,Se.RIGHT),e.getLocation(1,Se.RIGHT),2))},e}(Fe),ii=function(t){this._workingPrecisionModel=null,this._workingNoder=null,this._geomFact=null,this._graph=null,this._edgeList=new Hn,this._bufParams=t||null};ii.prototype.setWorkingPrecisionModel=function(t){this._workingPrecisionModel=t},ii.prototype.insertUniqueEdge=function(t){var e=this._edgeList.findEqualEdge(t);if(null!==e){var n=e.getLabel(),i=t.getLabel();e.isPointwiseEqual(t)||(i=new Pe(t.getLabel())).flip(),n.merge(i);var r=ii.depthDelta(i),o=e.getDepthDelta()+r;e.setDepthDelta(o)}else this._edgeList.add(t),t.setDepthDelta(ii.depthDelta(t.getLabel()))},ii.prototype.buildSubgraphs=function(t,e){for(var n=new Nt,i=t.iterator();i.hasNext();){var r=i.next(),o=r.getRightmostCoordinate(),s=new An(n).getDepth(o);r.computeDepth(s),r.findResultEdges(),n.add(r),e.add(r.getDirectedEdges(),r.getNodes())}},ii.prototype.createSubgraphs=function(t){for(var e=new Nt,n=t.getNodes().iterator();n.hasNext();){var i=n.next();if(!i.isVisited()){var r=new Te;r.create(i),e.add(r)}}return $e.sort(e,$e.reverseOrder()),e},ii.prototype.createEmptyResultGeometry=function(){return this._geomFact.createPolygon()},ii.prototype.getNoder=function(t){if(null!==this._workingNoder)return this._workingNoder;var e=new xn,n=new rt;return n.setPrecisionModel(t),e.setSegmentIntersector(new Kn(n)),e},ii.prototype.buffer=function(t,e){var n=this._workingPrecisionModel;null===n&&(n=t.getPrecisionModel()),this._geomFact=t.getFactory();var i=new Mn(n,this._bufParams),r=new Bn(t,e,i).getCurves();if(r.size()<=0)return this.createEmptyResultGeometry();this.computeNodedEdges(r,n),this._graph=new Ye(new kn),this._graph.addEdges(this._edgeList.getEdges());var o=this.createSubgraphs(this._graph),s=new ke(this._geomFact);this.buildSubgraphs(o,s);var a=s.getPolygons();if(a.size()<=0)return this.createEmptyResultGeometry();return this._geomFact.buildGeometry(a)},ii.prototype.computeNodedEdges=function(t,e){var n=this.getNoder(e);n.computeNodes(t);for(var i=n.getNodedSubstrings().iterator();i.hasNext();){var r=i.next(),o=r.getCoordinates();if(2!==o.length||!o[0].equals2D(o[1])){var s=r.getData(),a=new ni(r.getCoordinates(),new Pe(s));this.insertUniqueEdge(a)}}},ii.prototype.setNoder=function(t){this._workingNoder=t},ii.prototype.interfaces_=function(){return[]},ii.prototype.getClass=function(){return ii},ii.depthDelta=function(t){var e=t.getLocation(0,Se.LEFT),n=t.getLocation(0,Se.RIGHT);return e===w.INTERIOR&&n===w.EXTERIOR?1:e===w.EXTERIOR&&n===w.INTERIOR?-1:0},ii.convertSegStrings=function(t){for(var e=new _e,n=new Nt;t.hasNext();){var i=t.next(),r=e.createLineString(i.getCoordinates());n.add(r)}return e.buildGeometry(n)};var ri=function(){if(this._noder=null,this._scaleFactor=null,this._offsetX=null,this._offsetY=null,this._isScaled=!1,2===arguments.length){var t=arguments[0],e=arguments[1];this._noder=t,this._scaleFactor=e,this._offsetX=0,this._offsetY=0,this._isScaled=!this.isIntegerPrecision()}else if(4===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],o=arguments[3];this._noder=n,this._scaleFactor=i,this._offsetX=r,this._offsetY=o,this._isScaled=!this.isIntegerPrecision()}};ri.prototype.rescale=function(){if(T(arguments[0],It))for(var t=arguments[0].iterator();t.hasNext();){var e=t.next();this.rescale(e.getCoordinates())}else if(arguments[0]instanceof Array){for(var n=arguments[0],i=0;i<n.length;i++)n[i].x=n[i].x/this._scaleFactor+this._offsetX,n[i].y=n[i].y/this._scaleFactor+this._offsetY;2===n.length&&n[0].equals2D(n[1])&&Y.out.println(n)}},ri.prototype.scale=function(){if(T(arguments[0],It)){for(var t=arguments[0],e=new Nt,n=t.iterator();n.hasNext();){var i=n.next();e.add(new gn(this.scale(i.getCoordinates()),i.getData()))}return e}if(arguments[0]instanceof Array){for(var r=arguments[0],o=new Array(r.length).fill(null),s=0;s<r.length;s++)o[s]=new C(Math.round((r[s].x-this._offsetX)*this._scaleFactor),Math.round((r[s].y-this._offsetY)*this._scaleFactor),r[s].z);return Lt.removeRepeatedPoints(o)}},ri.prototype.isIntegerPrecision=function(){return 1===this._scaleFactor},ri.prototype.getNodedSubstrings=function(){var t=this._noder.getNodedSubstrings();return this._isScaled&&this.rescale(t),t},ri.prototype.computeNodes=function(t){var e=t;this._isScaled&&(e=this.scale(t)),this._noder.computeNodes(e)},ri.prototype.interfaces_=function(){return[In]},ri.prototype.getClass=function(){return ri};var oi=function(){this._li=new rt,this._segStrings=null;var t=arguments[0];this._segStrings=t},si={fact:{configurable:!0}};oi.prototype.checkEndPtVertexIntersections=function(){if(0===arguments.length)for(var t=this._segStrings.iterator();t.hasNext();){var e=t.next().getCoordinates();this.checkEndPtVertexIntersections(e[0],this._segStrings),this.checkEndPtVertexIntersections(e[e.length-1],this._segStrings)}else if(2===arguments.length)for(var n=arguments[0],i=arguments[1].iterator();i.hasNext();)for(var r=i.next().getCoordinates(),o=1;o<r.length-1;o++)if(r[o].equals(n))throw new $(\"found endpt/interior pt intersection at index \"+o+\" :pt \"+n)},oi.prototype.checkInteriorIntersections=function(){if(0===arguments.length)for(var t=this._segStrings.iterator();t.hasNext();)for(var e=t.next(),n=this._segStrings.iterator();n.hasNext();){var i=n.next();this.checkInteriorIntersections(e,i)}else if(2===arguments.length)for(var r=arguments[0],o=arguments[1],s=r.getCoordinates(),a=o.getCoordinates(),u=0;u<s.length-1;u++)for(var l=0;l<a.length-1;l++)this.checkInteriorIntersections(r,u,o,l);else if(4===arguments.length){var c=arguments[0],p=arguments[1],h=arguments[2],f=arguments[3];if(c===h&&p===f)return null;var g=c.getCoordinates()[p],d=c.getCoordinates()[p+1],y=h.getCoordinates()[f],_=h.getCoordinates()[f+1];if(this._li.computeIntersection(g,d,y,_),this._li.hasIntersection()&&(this._li.isProper()||this.hasInteriorIntersection(this._li,g,d)||this.hasInteriorIntersection(this._li,y,_)))throw new $(\"found non-noded intersection at \"+g+\"-\"+d+\" and \"+y+\"-\"+_)}},oi.prototype.checkValid=function(){this.checkEndPtVertexIntersections(),this.checkInteriorIntersections(),this.checkCollapses()},oi.prototype.checkCollapses=function(){if(0===arguments.length)for(var t=this._segStrings.iterator();t.hasNext();){var e=t.next();this.checkCollapses(e)}else if(1===arguments.length)for(var n=arguments[0].getCoordinates(),i=0;i<n.length-2;i++)this.checkCollapse(n[i],n[i+1],n[i+2])},oi.prototype.hasInteriorIntersection=function(t,e,n){for(var i=0;i<t.getIntersectionNum();i++){var r=t.getIntersection(i);if(!r.equals(e)&&!r.equals(n))return!0}return!1},oi.prototype.checkCollapse=function(t,e,n){if(t.equals(n))throw new $(\"found non-noded collapse at \"+oi.fact.createLineString([t,e,n]))},oi.prototype.interfaces_=function(){return[]},oi.prototype.getClass=function(){return oi},si.fact.get=function(){return new _e},Object.defineProperties(oi,si);var ai=function(){this._li=null,this._pt=null,this._originalPt=null,this._ptScaled=null,this._p0Scaled=null,this._p1Scaled=null,this._scaleFactor=null,this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,this._corner=new Array(4).fill(null),this._safeEnv=null;var t=arguments[0],e=arguments[1],n=arguments[2];if(this._originalPt=t,this._pt=t,this._scaleFactor=e,this._li=n,e<=0)throw new m(\"Scale factor must be non-zero\");1!==e&&(this._pt=new C(this.scale(t.x),this.scale(t.y)),this._p0Scaled=new C,this._p1Scaled=new C),this.initCorners(this._pt)},ui={SAFE_ENV_EXPANSION_FACTOR:{configurable:!0}};ai.prototype.intersectsScaled=function(t,e){var n=Math.min(t.x,e.x),i=Math.max(t.x,e.x),r=Math.min(t.y,e.y),o=Math.max(t.y,e.y),s=this._maxx<n||this._minx>i||this._maxy<r||this._miny>o;if(s)return!1;var a=this.intersectsToleranceSquare(t,e);return et.isTrue(!(s&&a),\"Found bad envelope test\"),a},ai.prototype.initCorners=function(t){this._minx=t.x-.5,this._maxx=t.x+.5,this._miny=t.y-.5,this._maxy=t.y+.5,this._corner[0]=new C(this._maxx,this._maxy),this._corner[1]=new C(this._minx,this._maxy),this._corner[2]=new C(this._minx,this._miny),this._corner[3]=new C(this._maxx,this._miny)},ai.prototype.intersects=function(t,e){return 1===this._scaleFactor?this.intersectsScaled(t,e):(this.copyScaled(t,this._p0Scaled),this.copyScaled(e,this._p1Scaled),this.intersectsScaled(this._p0Scaled,this._p1Scaled))},ai.prototype.scale=function(t){return Math.round(t*this._scaleFactor)},ai.prototype.getCoordinate=function(){return this._originalPt},ai.prototype.copyScaled=function(t,e){e.x=this.scale(t.x),e.y=this.scale(t.y)},ai.prototype.getSafeEnvelope=function(){if(null===this._safeEnv){var t=ai.SAFE_ENV_EXPANSION_FACTOR/this._scaleFactor;this._safeEnv=new j(this._originalPt.x-t,this._originalPt.x+t,this._originalPt.y-t,this._originalPt.y+t)}return this._safeEnv},ai.prototype.intersectsPixelClosure=function(t,e){return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[2],this._corner[3]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[3],this._corner[0]),!!this._li.hasIntersection())))},ai.prototype.intersectsToleranceSquare=function(t,e){var n=!1,i=!1;return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!this._li.isProper()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),!!this._li.isProper()||(this._li.hasIntersection()&&(n=!0),this._li.computeIntersection(t,e,this._corner[2],this._corner[3]),!!this._li.isProper()||(this._li.hasIntersection()&&(i=!0),this._li.computeIntersection(t,e,this._corner[3],this._corner[0]),!!this._li.isProper()||(!(!n||!i)||(!!t.equals(this._pt)||!!e.equals(this._pt))))))},ai.prototype.addSnappedNode=function(t,e){var n=t.getCoordinate(e),i=t.getCoordinate(e+1);return!!this.intersects(n,i)&&(t.addIntersection(this.getCoordinate(),e),!0)},ai.prototype.interfaces_=function(){return[]},ai.prototype.getClass=function(){return ai},ui.SAFE_ENV_EXPANSION_FACTOR.get=function(){return.75},Object.defineProperties(ai,ui);var li=function(){this.tempEnv1=new j,this.selectedSegment=new dn};li.prototype.select=function(){if(1===arguments.length);else if(2===arguments.length){var t=arguments[0],e=arguments[1];t.getLineSegment(e,this.selectedSegment),this.select(this.selectedSegment)}},li.prototype.interfaces_=function(){return[]},li.prototype.getClass=function(){return li};var ci=function(){this._index=null;var t=arguments[0];this._index=t},pi={HotPixelSnapAction:{configurable:!0}};ci.prototype.snap=function(){if(1===arguments.length){var t=arguments[0];return this.snap(t,null,-1)}if(3===arguments.length){var e=arguments[0],n=arguments[1],i=arguments[2],r=e.getSafeEnvelope(),o=new hi(e,n,i);return this._index.query(r,{interfaces_:function(){return[Ke]},visitItem:function(t){t.select(r,o)}}),o.isNodeAdded()}},ci.prototype.interfaces_=function(){return[]},ci.prototype.getClass=function(){return ci},pi.HotPixelSnapAction.get=function(){return hi},Object.defineProperties(ci,pi);var hi=function(t){function e(){t.call(this),this._hotPixel=null,this._parentEdge=null,this._hotPixelVertexIndex=null,this._isNodeAdded=!1;var e=arguments[0],n=arguments[1],i=arguments[2];this._hotPixel=e,this._parentEdge=n,this._hotPixelVertexIndex=i}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.isNodeAdded=function(){return this._isNodeAdded},e.prototype.select=function(){if(2!==arguments.length)return t.prototype.select.apply(this,arguments);var e=arguments[0],n=arguments[1],i=e.getContext();if(null!==this._parentEdge&&i===this._parentEdge&&n===this._hotPixelVertexIndex)return null;this._isNodeAdded=this._hotPixel.addSnappedNode(i,n)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(li),fi=function(){this._li=null,this._interiorIntersections=null;var t=arguments[0];this._li=t,this._interiorIntersections=new Nt};fi.prototype.processIntersections=function(t,e,n,i){if(t===n&&e===i)return null;var r=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[i],a=n.getCoordinates()[i+1];if(this._li.computeIntersection(r,o,s,a),this._li.hasIntersection()&&this._li.isInteriorIntersection()){for(var u=0;u<this._li.getIntersectionNum();u++)this._interiorIntersections.add(this._li.getIntersection(u));t.addIntersections(this._li,e,0),n.addIntersections(this._li,i,1)}},fi.prototype.isDone=function(){return!1},fi.prototype.getInteriorIntersections=function(){return this._interiorIntersections},fi.prototype.interfaces_=function(){return[Wn]},fi.prototype.getClass=function(){return fi};var gi=function(){this._pm=null,this._li=null,this._scaleFactor=null,this._noder=null,this._pointSnapper=null,this._nodedSegStrings=null;var t=arguments[0];this._pm=t,this._li=new rt,this._li.setPrecisionModel(t),this._scaleFactor=t.getScale()};gi.prototype.checkCorrectness=function(t){var e=gn.getNodedSubstrings(t),n=new oi(e);try{n.checkValid()}catch(t){if(!(t instanceof z))throw t;t.printStackTrace()}},gi.prototype.getNodedSubstrings=function(){return gn.getNodedSubstrings(this._nodedSegStrings)},gi.prototype.snapRound=function(t,e){var n=this.findInteriorIntersections(t,e);this.computeIntersectionSnaps(n),this.computeVertexSnaps(t)},gi.prototype.findInteriorIntersections=function(t,e){var n=new fi(e);return this._noder.setSegmentIntersector(n),this._noder.computeNodes(t),n.getInteriorIntersections()},gi.prototype.computeVertexSnaps=function(){if(T(arguments[0],It))for(var t=arguments[0].iterator();t.hasNext();){var e=t.next();this.computeVertexSnaps(e)}else if(arguments[0]instanceof gn)for(var n=arguments[0],i=n.getCoordinates(),r=0;r<i.length;r++){var o=new ai(i[r],this._scaleFactor,this._li);this._pointSnapper.snap(o,n,r)&&n.addIntersection(i[r],r)}},gi.prototype.computeNodes=function(t){this._nodedSegStrings=t,this._noder=new xn,this._pointSnapper=new ci(this._noder.getIndex()),this.snapRound(t,this._li)},gi.prototype.computeIntersectionSnaps=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),i=new ai(n,this._scaleFactor,this._li);this._pointSnapper.snap(i)}},gi.prototype.interfaces_=function(){return[In]},gi.prototype.getClass=function(){return gi};var di=function(){if(this._argGeom=null,this._distance=null,this._bufParams=new Cn,this._resultGeometry=null,this._saveException=null,1===arguments.length){var t=arguments[0];this._argGeom=t}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this._argGeom=e,this._bufParams=n}},yi={CAP_ROUND:{configurable:!0},CAP_BUTT:{configurable:!0},CAP_FLAT:{configurable:!0},CAP_SQUARE:{configurable:!0},MAX_PRECISION_DIGITS:{configurable:!0}};di.prototype.bufferFixedPrecision=function(t){var e=new ri(new gi(new fe(1)),t.getScale()),n=new ii(this._bufParams);n.setWorkingPrecisionModel(t),n.setNoder(e),this._resultGeometry=n.buffer(this._argGeom,this._distance)},di.prototype.bufferReducedPrecision=function(){var t=this;if(0===arguments.length){for(var e=di.MAX_PRECISION_DIGITS;e>=0;e--){try{t.bufferReducedPrecision(e)}catch(e){if(!(e instanceof we))throw e;t._saveException=e}if(null!==t._resultGeometry)return null}throw this._saveException}if(1===arguments.length){var n=arguments[0],i=di.precisionScaleFactor(this._argGeom,this._distance,n),r=new fe(i);this.bufferFixedPrecision(r)}},di.prototype.computeGeometry=function(){if(this.bufferOriginalPrecision(),null!==this._resultGeometry)return null;var t=this._argGeom.getFactory().getPrecisionModel();t.getType()===fe.FIXED?this.bufferFixedPrecision(t):this.bufferReducedPrecision()},di.prototype.setQuadrantSegments=function(t){this._bufParams.setQuadrantSegments(t)},di.prototype.bufferOriginalPrecision=function(){try{var t=new ii(this._bufParams);this._resultGeometry=t.buffer(this._argGeom,this._distance)}catch(t){if(!(t instanceof $))throw t;this._saveException=t}},di.prototype.getResultGeometry=function(t){return this._distance=t,this.computeGeometry(),this._resultGeometry},di.prototype.setEndCapStyle=function(t){this._bufParams.setEndCapStyle(t)},di.prototype.interfaces_=function(){return[]},di.prototype.getClass=function(){return di},di.bufferOp=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return new di(t).getResultGeometry(e)}if(3===arguments.length){if(Number.isInteger(arguments[2])&&arguments[0]instanceof ct&&\"number\"==typeof arguments[1]){var n=arguments[0],i=arguments[1],r=arguments[2],o=new di(n);o.setQuadrantSegments(r);return o.getResultGeometry(i)}if(arguments[2]instanceof Cn&&arguments[0]instanceof ct&&\"number\"==typeof arguments[1]){var s=arguments[0],a=arguments[1],u=arguments[2];return new di(s,u).getResultGeometry(a)}}else if(4===arguments.length){var l=arguments[0],c=arguments[1],p=arguments[2],h=arguments[3],f=new di(l);f.setQuadrantSegments(p),f.setEndCapStyle(h);return f.getResultGeometry(c)}},di.precisionScaleFactor=function(t,e,n){var i=t.getEnvelopeInternal(),r=R.max(Math.abs(i.getMaxX()),Math.abs(i.getMaxY()),Math.abs(i.getMinX()),Math.abs(i.getMinY()))+2*(e>0?e:0),o=n-Math.trunc(Math.log(r)/Math.log(10)+1);return Math.pow(10,o)},yi.CAP_ROUND.get=function(){return Cn.CAP_ROUND},yi.CAP_BUTT.get=function(){return Cn.CAP_FLAT},yi.CAP_FLAT.get=function(){return Cn.CAP_FLAT},yi.CAP_SQUARE.get=function(){return Cn.CAP_SQUARE},yi.MAX_PRECISION_DIGITS.get=function(){return 12},Object.defineProperties(di,yi);var _i=function(){this._pt=[new C,new C],this._distance=v.NaN,this._isNull=!0};_i.prototype.getCoordinates=function(){return this._pt},_i.prototype.getCoordinate=function(t){return this._pt[t]},_i.prototype.setMinimum=function(){if(1===arguments.length){var t=arguments[0];this.setMinimum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var i=e.distance(n);i<this._distance&&this.initialize(e,n,i)}},_i.prototype.initialize=function(){if(0===arguments.length)this._isNull=!0;else if(2===arguments.length){var t=arguments[0],e=arguments[1];this._pt[0].setCoordinate(t),this._pt[1].setCoordinate(e),this._distance=t.distance(e),this._isNull=!1}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this._pt[0].setCoordinate(n),this._pt[1].setCoordinate(i),this._distance=r,this._isNull=!1}},_i.prototype.getDistance=function(){return this._distance},_i.prototype.setMaximum=function(){if(1===arguments.length){var t=arguments[0];this.setMaximum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var i=e.distance(n);i>this._distance&&this.initialize(e,n,i)}},_i.prototype.interfaces_=function(){return[]},_i.prototype.getClass=function(){return _i};var mi=function(){};mi.prototype.interfaces_=function(){return[]},mi.prototype.getClass=function(){return mi},mi.computeDistance=function(){if(arguments[2]instanceof _i&&arguments[0]instanceof Kt&&arguments[1]instanceof C)for(var t=arguments[0],e=arguments[1],n=arguments[2],i=t.getCoordinates(),r=new dn,o=0;o<i.length-1;o++){r.setCoordinates(i[o],i[o+1]);var s=r.closestPoint(e);n.setMinimum(s,e)}else if(arguments[2]instanceof _i&&arguments[0]instanceof $t&&arguments[1]instanceof C){var a=arguments[0],u=arguments[1],l=arguments[2];mi.computeDistance(a.getExteriorRing(),u,l);for(var c=0;c<a.getNumInteriorRing();c++)mi.computeDistance(a.getInteriorRingN(c),u,l)}else if(arguments[2]instanceof _i&&arguments[0]instanceof ct&&arguments[1]instanceof C){var p=arguments[0],h=arguments[1],f=arguments[2];if(p instanceof Kt)mi.computeDistance(p,h,f);else if(p instanceof $t)mi.computeDistance(p,h,f);else if(p instanceof zt)for(var g=p,d=0;d<g.getNumGeometries();d++){var y=g.getGeometryN(d);mi.computeDistance(y,h,f)}else f.setMinimum(p.getCoordinate(),h)}else if(arguments[2]instanceof _i&&arguments[0]instanceof dn&&arguments[1]instanceof C){var _=arguments[0],m=arguments[1],v=arguments[2],I=_.closestPoint(m);v.setMinimum(I,m)}};var vi=function(t){this._maxPtDist=new _i,this._inputGeom=t||null},Ii={MaxPointDistanceFilter:{configurable:!0},MaxMidpointDistanceFilter:{configurable:!0}};vi.prototype.computeMaxMidpointDistance=function(t){var e=new xi(this._inputGeom);t.apply(e),this._maxPtDist.setMaximum(e.getMaxPointDistance())},vi.prototype.computeMaxVertexDistance=function(t){var e=new Ei(this._inputGeom);t.apply(e),this._maxPtDist.setMaximum(e.getMaxPointDistance())},vi.prototype.findDistance=function(t){return this.computeMaxVertexDistance(t),this.computeMaxMidpointDistance(t),this._maxPtDist.getDistance()},vi.prototype.getDistancePoints=function(){return this._maxPtDist},vi.prototype.interfaces_=function(){return[]},vi.prototype.getClass=function(){return vi},Ii.MaxPointDistanceFilter.get=function(){return Ei},Ii.MaxMidpointDistanceFilter.get=function(){return xi},Object.defineProperties(vi,Ii);var Ei=function(t){this._maxPtDist=new _i,this._minPtDist=new _i,this._geom=t||null};Ei.prototype.filter=function(t){this._minPtDist.initialize(),mi.computeDistance(this._geom,t,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)},Ei.prototype.getMaxPointDistance=function(){return this._maxPtDist},Ei.prototype.interfaces_=function(){return[ft]},Ei.prototype.getClass=function(){return Ei};var xi=function(t){this._maxPtDist=new _i,this._minPtDist=new _i,this._geom=t||null};xi.prototype.filter=function(t,e){if(0===e)return null;var n=t.getCoordinate(e-1),i=t.getCoordinate(e),r=new C((n.x+i.x)/2,(n.y+i.y)/2);this._minPtDist.initialize(),mi.computeDistance(this._geom,r,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)},xi.prototype.isDone=function(){return!1},xi.prototype.isGeometryChanged=function(){return!1},xi.prototype.getMaxPointDistance=function(){return this._maxPtDist},xi.prototype.interfaces_=function(){return[Ut]},xi.prototype.getClass=function(){return xi};var Ni=function(t){this._comps=t||null};Ni.prototype.filter=function(t){t instanceof $t&&this._comps.add(t)},Ni.prototype.interfaces_=function(){return[Vt]},Ni.prototype.getClass=function(){return Ni},Ni.getPolygons=function(){if(1===arguments.length){var t=arguments[0];return Ni.getPolygons(t,new Nt)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e instanceof $t?n.add(e):e instanceof zt&&e.apply(new Ni(n)),n}};var Ci=function(){if(this._lines=null,this._isForcedToLineString=!1,1===arguments.length){var t=arguments[0];this._lines=t}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this._lines=e,this._isForcedToLineString=n}};Ci.prototype.filter=function(t){if(this._isForcedToLineString&&t instanceof ee){var e=t.getFactory().createLineString(t.getCoordinateSequence());return this._lines.add(e),null}t instanceof Kt&&this._lines.add(t)},Ci.prototype.setForceToLineString=function(t){this._isForcedToLineString=t},Ci.prototype.interfaces_=function(){return[lt]},Ci.prototype.getClass=function(){return Ci},Ci.getGeometry=function(){if(1===arguments.length){var t=arguments[0];return t.getFactory().buildGeometry(Ci.getLines(t))}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e.getFactory().buildGeometry(Ci.getLines(e,n))}},Ci.getLines=function(){if(1===arguments.length){var t=arguments[0];return Ci.getLines(t,!1)}if(2===arguments.length){if(T(arguments[0],It)&&T(arguments[1],It)){for(var e=arguments[0],n=arguments[1],i=e.iterator();i.hasNext();){var r=i.next();Ci.getLines(r,n)}return n}if(arguments[0]instanceof ct&&\"boolean\"==typeof arguments[1]){var o=arguments[0],s=arguments[1],a=new Nt;return o.apply(new Ci(a,s)),a}if(arguments[0]instanceof ct&&T(arguments[1],It)){var u=arguments[0],l=arguments[1];return u instanceof Kt?l.add(u):u.apply(new Ci(l)),l}}else if(3===arguments.length){if(\"boolean\"==typeof arguments[2]&&T(arguments[0],It)&&T(arguments[1],It)){for(var c=arguments[0],p=arguments[1],h=arguments[2],f=c.iterator();f.hasNext();){var g=f.next();Ci.getLines(g,p,h)}return p}if(\"boolean\"==typeof arguments[2]&&arguments[0]instanceof ct&&T(arguments[1],It)){var d=arguments[0],y=arguments[1],_=arguments[2];return d.apply(new Ci(y,_)),y}}};var Si=function(){if(this._boundaryRule=gt.OGC_SFS_BOUNDARY_RULE,this._isIn=null,this._numBoundaries=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];if(null===t)throw new m(\"Rule must be non-null\");this._boundaryRule=t}};Si.prototype.locateInternal=function(){if(arguments[0]instanceof C&&arguments[1]instanceof $t){var t=arguments[0],e=arguments[1];if(e.isEmpty())return w.EXTERIOR;var n=e.getExteriorRing(),i=this.locateInPolygonRing(t,n);if(i===w.EXTERIOR)return w.EXTERIOR;if(i===w.BOUNDARY)return w.BOUNDARY;for(var r=0;r<e.getNumInteriorRing();r++){var o=e.getInteriorRingN(r),s=this.locateInPolygonRing(t,o);if(s===w.INTERIOR)return w.EXTERIOR;if(s===w.BOUNDARY)return w.BOUNDARY}return w.INTERIOR}if(arguments[0]instanceof C&&arguments[1]instanceof Kt){var a=arguments[0],u=arguments[1];if(!u.getEnvelopeInternal().intersects(a))return w.EXTERIOR;var l=u.getCoordinates();return u.isClosed()||!a.equals(l[0])&&!a.equals(l[l.length-1])?at.isOnLine(a,l)?w.INTERIOR:w.EXTERIOR:w.BOUNDARY}if(arguments[0]instanceof C&&arguments[1]instanceof Qt){var c=arguments[0];return arguments[1].getCoordinate().equals2D(c)?w.INTERIOR:w.EXTERIOR}},Si.prototype.locateInPolygonRing=function(t,e){return e.getEnvelopeInternal().intersects(t)?at.locatePointInRing(t,e.getCoordinates()):w.EXTERIOR},Si.prototype.intersects=function(t,e){return this.locate(t,e)!==w.EXTERIOR},Si.prototype.updateLocationInfo=function(t){t===w.INTERIOR&&(this._isIn=!0),t===w.BOUNDARY&&this._numBoundaries++},Si.prototype.computeLocation=function(t,e){if(e instanceof Qt&&this.updateLocationInfo(this.locateInternal(t,e)),e instanceof Kt)this.updateLocationInfo(this.locateInternal(t,e));else if(e instanceof $t)this.updateLocationInfo(this.locateInternal(t,e));else if(e instanceof Xt)for(var n=e,i=0;i<n.getNumGeometries();i++){var r=n.getGeometryN(i);this.updateLocationInfo(this.locateInternal(t,r))}else if(e instanceof ne)for(var o=e,s=0;s<o.getNumGeometries();s++){var a=o.getGeometryN(s);this.updateLocationInfo(this.locateInternal(t,a))}else if(e instanceof zt)for(var u=new Un(e);u.hasNext();){var l=u.next();l!==e&&this.computeLocation(t,l)}},Si.prototype.locate=function(t,e){return e.isEmpty()?w.EXTERIOR:e instanceof Kt?this.locateInternal(t,e):e instanceof $t?this.locateInternal(t,e):(this._isIn=!1,this._numBoundaries=0,this.computeLocation(t,e),this._boundaryRule.isInBoundary(this._numBoundaries)?w.BOUNDARY:this._numBoundaries>0||this._isIn?w.INTERIOR:w.EXTERIOR)},Si.prototype.interfaces_=function(){return[]},Si.prototype.getClass=function(){return Si};var Li=function t(){if(this._component=null,this._segIndex=null,this._pt=null,2===arguments.length){var e=arguments[0],n=arguments[1];t.call(this,e,t.INSIDE_AREA,n)}else if(3===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2];this._component=i,this._segIndex=r,this._pt=o}},bi={INSIDE_AREA:{configurable:!0}};Li.prototype.isInsideArea=function(){return this._segIndex===Li.INSIDE_AREA},Li.prototype.getCoordinate=function(){return this._pt},Li.prototype.getGeometryComponent=function(){return this._component},Li.prototype.getSegmentIndex=function(){return this._segIndex},Li.prototype.interfaces_=function(){return[]},Li.prototype.getClass=function(){return Li},bi.INSIDE_AREA.get=function(){return-1},Object.defineProperties(Li,bi);var wi=function(t){this._pts=t||null};wi.prototype.filter=function(t){t instanceof Qt&&this._pts.add(t)},wi.prototype.interfaces_=function(){return[Vt]},wi.prototype.getClass=function(){return wi},wi.getPoints=function(){if(1===arguments.length){var t=arguments[0];return t instanceof Qt?$e.singletonList(t):wi.getPoints(t,new Nt)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e instanceof Qt?n.add(e):e instanceof zt&&e.apply(new wi(n)),n}};var Oi=function(){this._locations=null;var t=arguments[0];this._locations=t};Oi.prototype.filter=function(t){(t instanceof Qt||t instanceof Kt||t instanceof $t)&&this._locations.add(new Li(t,0,t.getCoordinate()))},Oi.prototype.interfaces_=function(){return[Vt]},Oi.prototype.getClass=function(){return Oi},Oi.getLocations=function(t){var e=new Nt;return t.apply(new Oi(e)),e};var Ti=function(){if(this._geom=null,this._terminateDistance=0,this._ptLocator=new Si,this._minDistanceLocation=null,this._minDistance=v.MAX_VALUE,2===arguments.length){var t=arguments[0],e=arguments[1];this._geom=[t,e],this._terminateDistance=0}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this._geom=new Array(2).fill(null),this._geom[0]=n,this._geom[1]=i,this._terminateDistance=r}};Ti.prototype.computeContainmentDistance=function(){if(0===arguments.length){var t=new Array(2).fill(null);if(this.computeContainmentDistance(0,t),this._minDistance<=this._terminateDistance)return null;this.computeContainmentDistance(1,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],i=1-e,r=Ni.getPolygons(this._geom[e]);if(r.size()>0){var o=Oi.getLocations(this._geom[i]);if(this.computeContainmentDistance(o,r,n),this._minDistance<=this._terminateDistance)return this._minDistanceLocation[i]=n[0],this._minDistanceLocation[e]=n[1],null}}else if(3===arguments.length)if(arguments[2]instanceof Array&&T(arguments[0],xt)&&T(arguments[1],xt)){for(var s=arguments[0],a=arguments[1],u=arguments[2],l=0;l<s.size();l++)for(var c=s.get(l),p=0;p<a.size();p++)if(this.computeContainmentDistance(c,a.get(p),u),this._minDistance<=this._terminateDistance)return null}else if(arguments[2]instanceof Array&&arguments[0]instanceof Li&&arguments[1]instanceof $t){var h=arguments[0],f=arguments[1],g=arguments[2],d=h.getCoordinate();if(w.EXTERIOR!==this._ptLocator.locate(d,f))return this._minDistance=0,g[0]=h,g[1]=new Li(f,d),null}},Ti.prototype.computeMinDistanceLinesPoints=function(t,e,n){for(var i=0;i<t.size();i++)for(var r=t.get(i),o=0;o<e.size();o++){var s=e.get(o);if(this.computeMinDistance(r,s,n),this._minDistance<=this._terminateDistance)return null}},Ti.prototype.computeFacetDistance=function(){var t=new Array(2).fill(null),e=Ci.getLines(this._geom[0]),n=Ci.getLines(this._geom[1]),i=wi.getPoints(this._geom[0]),r=wi.getPoints(this._geom[1]);return this.computeMinDistanceLines(e,n,t),this.updateMinDistance(t,!1),this._minDistance<=this._terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistanceLinesPoints(e,r,t),this.updateMinDistance(t,!1),this._minDistance<=this._terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistanceLinesPoints(n,i,t),this.updateMinDistance(t,!0),this._minDistance<=this._terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistancePoints(i,r,t),void this.updateMinDistance(t,!1))))},Ti.prototype.nearestLocations=function(){return this.computeMinDistance(),this._minDistanceLocation},Ti.prototype.updateMinDistance=function(t,e){if(null===t[0])return null;e?(this._minDistanceLocation[0]=t[1],this._minDistanceLocation[1]=t[0]):(this._minDistanceLocation[0]=t[0],this._minDistanceLocation[1]=t[1])},Ti.prototype.nearestPoints=function(){this.computeMinDistance();return[this._minDistanceLocation[0].getCoordinate(),this._minDistanceLocation[1].getCoordinate()]},Ti.prototype.computeMinDistance=function(){if(0===arguments.length){if(null!==this._minDistanceLocation)return null;if(this._minDistanceLocation=new Array(2).fill(null),this.computeContainmentDistance(),this._minDistance<=this._terminateDistance)return null;this.computeFacetDistance()}else if(3===arguments.length)if(arguments[2]instanceof Array&&arguments[0]instanceof Kt&&arguments[1]instanceof Qt){var t=arguments[0],e=arguments[1],n=arguments[2];if(t.getEnvelopeInternal().distance(e.getEnvelopeInternal())>this._minDistance)return null;for(var i=t.getCoordinates(),r=e.getCoordinate(),o=0;o<i.length-1;o++){var s=at.distancePointLine(r,i[o],i[o+1]);if(s<this._minDistance){this._minDistance=s;var a=new dn(i[o],i[o+1]).closestPoint(r);n[0]=new Li(t,o,a),n[1]=new Li(e,0,r)}if(this._minDistance<=this._terminateDistance)return null}}else if(arguments[2]instanceof Array&&arguments[0]instanceof Kt&&arguments[1]instanceof Kt){var u=arguments[0],l=arguments[1],c=arguments[2];if(u.getEnvelopeInternal().distance(l.getEnvelopeInternal())>this._minDistance)return null;for(var p=u.getCoordinates(),h=l.getCoordinates(),f=0;f<p.length-1;f++)for(var g=0;g<h.length-1;g++){var d=at.distanceLineLine(p[f],p[f+1],h[g],h[g+1]);if(d<this._minDistance){this._minDistance=d;var y=new dn(p[f],p[f+1]),_=new dn(h[g],h[g+1]),m=y.closestPoints(_);c[0]=new Li(u,f,m[0]),c[1]=new Li(l,g,m[1])}if(this._minDistance<=this._terminateDistance)return null}}},Ti.prototype.computeMinDistancePoints=function(t,e,n){for(var i=0;i<t.size();i++)for(var r=t.get(i),o=0;o<e.size();o++){var s=e.get(o),a=r.getCoordinate().distance(s.getCoordinate());if(a<this._minDistance&&(this._minDistance=a,n[0]=new Li(r,0,r.getCoordinate()),n[1]=new Li(s,0,s.getCoordinate())),this._minDistance<=this._terminateDistance)return null}},Ti.prototype.distance=function(){if(null===this._geom[0]||null===this._geom[1])throw new m(\"null geometries are not supported\");return this._geom[0].isEmpty()||this._geom[1].isEmpty()?0:(this.computeMinDistance(),this._minDistance)},Ti.prototype.computeMinDistanceLines=function(t,e,n){for(var i=0;i<t.size();i++)for(var r=t.get(i),o=0;o<e.size();o++){var s=e.get(o);if(this.computeMinDistance(r,s,n),this._minDistance<=this._terminateDistance)return null}},Ti.prototype.interfaces_=function(){return[]},Ti.prototype.getClass=function(){return Ti},Ti.distance=function(t,e){return new Ti(t,e).distance()},Ti.isWithinDistance=function(t,e,n){return new Ti(t,e,n).distance()<=n},Ti.nearestPoints=function(t,e){return new Ti(t,e).nearestPoints()};var Ri=function(){this._pt=[new C,new C],this._distance=v.NaN,this._isNull=!0};Ri.prototype.getCoordinates=function(){return this._pt},Ri.prototype.getCoordinate=function(t){return this._pt[t]},Ri.prototype.setMinimum=function(){if(1===arguments.length){var t=arguments[0];this.setMinimum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var i=e.distance(n);i<this._distance&&this.initialize(e,n,i)}},Ri.prototype.initialize=function(){if(0===arguments.length)this._isNull=!0;else if(2===arguments.length){var t=arguments[0],e=arguments[1];this._pt[0].setCoordinate(t),this._pt[1].setCoordinate(e),this._distance=t.distance(e),this._isNull=!1}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this._pt[0].setCoordinate(n),this._pt[1].setCoordinate(i),this._distance=r,this._isNull=!1}},Ri.prototype.toString=function(){return Z.toLineString(this._pt[0],this._pt[1])},Ri.prototype.getDistance=function(){return this._distance},Ri.prototype.setMaximum=function(){if(1===arguments.length){var t=arguments[0];this.setMaximum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var i=e.distance(n);i>this._distance&&this.initialize(e,n,i)}},Ri.prototype.interfaces_=function(){return[]},Ri.prototype.getClass=function(){return Ri};var Pi=function(){};Pi.prototype.interfaces_=function(){return[]},Pi.prototype.getClass=function(){return Pi},Pi.computeDistance=function(){if(arguments[2]instanceof Ri&&arguments[0]instanceof Kt&&arguments[1]instanceof C)for(var t=arguments[0],e=arguments[1],n=arguments[2],i=new dn,r=t.getCoordinates(),o=0;o<r.length-1;o++){i.setCoordinates(r[o],r[o+1]);var s=i.closestPoint(e);n.setMinimum(s,e)}else if(arguments[2]instanceof Ri&&arguments[0]instanceof $t&&arguments[1]instanceof C){var a=arguments[0],u=arguments[1],l=arguments[2];Pi.computeDistance(a.getExteriorRing(),u,l);for(var c=0;c<a.getNumInteriorRing();c++)Pi.computeDistance(a.getInteriorRingN(c),u,l)}else if(arguments[2]instanceof Ri&&arguments[0]instanceof ct&&arguments[1]instanceof C){var p=arguments[0],h=arguments[1],f=arguments[2];if(p instanceof Kt)Pi.computeDistance(p,h,f);else if(p instanceof $t)Pi.computeDistance(p,h,f);else if(p instanceof zt)for(var g=p,d=0;d<g.getNumGeometries();d++){var y=g.getGeometryN(d);Pi.computeDistance(y,h,f)}else f.setMinimum(p.getCoordinate(),h)}else if(arguments[2]instanceof Ri&&arguments[0]instanceof dn&&arguments[1]instanceof C){var _=arguments[0],m=arguments[1],v=arguments[2],I=_.closestPoint(m);v.setMinimum(I,m)}};var Di=function(){this._g0=null,this._g1=null,this._ptDist=new Ri,this._densifyFrac=0;var t=arguments[0],e=arguments[1];this._g0=t,this._g1=e},Mi={MaxPointDistanceFilter:{configurable:!0},MaxDensifiedByFractionDistanceFilter:{configurable:!0}};Di.prototype.getCoordinates=function(){return this._ptDist.getCoordinates()},Di.prototype.setDensifyFraction=function(t){if(t>1||t<=0)throw new m(\"Fraction is not in range (0.0 - 1.0]\");this._densifyFrac=t},Di.prototype.compute=function(t,e){this.computeOrientedDistance(t,e,this._ptDist),this.computeOrientedDistance(e,t,this._ptDist)},Di.prototype.distance=function(){return this.compute(this._g0,this._g1),this._ptDist.getDistance()},Di.prototype.computeOrientedDistance=function(t,e,n){var i=new Ai(e);if(t.apply(i),n.setMaximum(i.getMaxPointDistance()),this._densifyFrac>0){var r=new Fi(e,this._densifyFrac);t.apply(r),n.setMaximum(r.getMaxPointDistance())}},Di.prototype.orientedDistance=function(){return this.computeOrientedDistance(this._g0,this._g1,this._ptDist),this._ptDist.getDistance()},Di.prototype.interfaces_=function(){return[]},Di.prototype.getClass=function(){return Di},Di.distance=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return new Di(t,e).distance()}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],o=new Di(n,i);return o.setDensifyFraction(r),o.distance()}},Mi.MaxPointDistanceFilter.get=function(){return Ai},Mi.MaxDensifiedByFractionDistanceFilter.get=function(){return Fi},Object.defineProperties(Di,Mi);var Ai=function(){this._maxPtDist=new Ri,this._minPtDist=new Ri,this._euclideanDist=new Pi,this._geom=null;var t=arguments[0];this._geom=t};Ai.prototype.filter=function(t){this._minPtDist.initialize(),Pi.computeDistance(this._geom,t,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)},Ai.prototype.getMaxPointDistance=function(){return this._maxPtDist},Ai.prototype.interfaces_=function(){return[ft]},Ai.prototype.getClass=function(){return Ai};var Fi=function(){this._maxPtDist=new Ri,this._minPtDist=new Ri,this._geom=null,this._numSubSegs=0;var t=arguments[0],e=arguments[1];this._geom=t,this._numSubSegs=Math.trunc(Math.round(1/e))};Fi.prototype.filter=function(t,e){if(0===e)return null;for(var n=t.getCoordinate(e-1),i=t.getCoordinate(e),r=(i.x-n.x)/this._numSubSegs,o=(i.y-n.y)/this._numSubSegs,s=0;s<this._numSubSegs;s++){var a=n.x+s*r,u=n.y+s*o,l=new C(a,u);this._minPtDist.initialize(),Pi.computeDistance(this._geom,l,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)}},Fi.prototype.isDone=function(){return!1},Fi.prototype.isGeometryChanged=function(){return!1},Fi.prototype.getMaxPointDistance=function(){return this._maxPtDist},Fi.prototype.interfaces_=function(){return[Ut]},Fi.prototype.getClass=function(){return Fi};var Gi=function(t,e,n){this._minValidDistance=null,this._maxValidDistance=null,this._minDistanceFound=null,this._maxDistanceFound=null,this._isValid=!0,this._errMsg=null,this._errorLocation=null,this._errorIndicator=null,this._input=t||null,this._bufDistance=e||null,this._result=n||null},qi={VERBOSE:{configurable:!0},MAX_DISTANCE_DIFF_FRAC:{configurable:!0}};Gi.prototype.checkMaximumDistance=function(t,e,n){var i=new Di(e,t);if(i.setDensifyFraction(.25),this._maxDistanceFound=i.orientedDistance(),this._maxDistanceFound>n){this._isValid=!1;var r=i.getCoordinates();this._errorLocation=r[1],this._errorIndicator=t.getFactory().createLineString(r),this._errMsg=\"Distance between buffer curve and input is too large (\"+this._maxDistanceFound+\" at \"+Z.toLineString(r[0],r[1])+\")\"}},Gi.prototype.isValid=function(){var t=Math.abs(this._bufDistance),e=Gi.MAX_DISTANCE_DIFF_FRAC*t;return this._minValidDistance=t-e,this._maxValidDistance=t+e,!(!this._input.isEmpty()&&!this._result.isEmpty())||(this._bufDistance>0?this.checkPositiveValid():this.checkNegativeValid(),Gi.VERBOSE&&Y.out.println(\"Min Dist= \"+this._minDistanceFound+\"  err= \"+(1-this._minDistanceFound/this._bufDistance)+\"  Max Dist= \"+this._maxDistanceFound+\"  err= \"+(this._maxDistanceFound/this._bufDistance-1)),this._isValid)},Gi.prototype.checkNegativeValid=function(){if(!(this._input instanceof $t||this._input instanceof ne||this._input instanceof zt))return null;var t=this.getPolygonLines(this._input);if(this.checkMinimumDistance(t,this._result,this._minValidDistance),!this._isValid)return null;this.checkMaximumDistance(t,this._result,this._maxValidDistance)},Gi.prototype.getErrorIndicator=function(){return this._errorIndicator},Gi.prototype.checkMinimumDistance=function(t,e,n){var i=new Ti(t,e,n);if(this._minDistanceFound=i.distance(),this._minDistanceFound<n){this._isValid=!1;var r=i.nearestPoints();this._errorLocation=i.nearestPoints()[1],this._errorIndicator=t.getFactory().createLineString(r),this._errMsg=\"Distance between buffer curve and input is too small (\"+this._minDistanceFound+\" at \"+Z.toLineString(r[0],r[1])+\" )\"}},Gi.prototype.checkPositiveValid=function(){var t=this._result.getBoundary();if(this.checkMinimumDistance(this._input,t,this._minValidDistance),!this._isValid)return null;this.checkMaximumDistance(this._input,t,this._maxValidDistance)},Gi.prototype.getErrorLocation=function(){return this._errorLocation},Gi.prototype.getPolygonLines=function(t){for(var e=new Nt,n=new Ci(e),i=Ni.getPolygons(t).iterator();i.hasNext();){i.next().apply(n)}return t.getFactory().buildGeometry(e)},Gi.prototype.getErrorMessage=function(){return this._errMsg},Gi.prototype.interfaces_=function(){return[]},Gi.prototype.getClass=function(){return Gi},qi.VERBOSE.get=function(){return!1},qi.MAX_DISTANCE_DIFF_FRAC.get=function(){return.012},Object.defineProperties(Gi,qi);var Bi=function(t,e,n){this._isValid=!0,this._errorMsg=null,this._errorLocation=null,this._errorIndicator=null,this._input=t||null,this._distance=e||null,this._result=n||null},Vi={VERBOSE:{configurable:!0},MAX_ENV_DIFF_FRAC:{configurable:!0}};Bi.prototype.isValid=function(){return this.checkPolygonal(),this._isValid?(this.checkExpectedEmpty(),this._isValid?(this.checkEnvelope(),this._isValid?(this.checkArea(),this._isValid?(this.checkDistance(),this._isValid):this._isValid):this._isValid):this._isValid):this._isValid},Bi.prototype.checkEnvelope=function(){if(this._distance<0)return null;var t=this._distance*Bi.MAX_ENV_DIFF_FRAC;0===t&&(t=.001);var e=new j(this._input.getEnvelopeInternal());e.expandBy(this._distance);var n=new j(this._result.getEnvelopeInternal());n.expandBy(t),n.contains(e)||(this._isValid=!1,this._errorMsg=\"Buffer envelope is incorrect\",this._errorIndicator=this._input.getFactory().toGeometry(n)),this.report(\"Envelope\")},Bi.prototype.checkDistance=function(){var t=new Gi(this._input,this._distance,this._result);t.isValid()||(this._isValid=!1,this._errorMsg=t.getErrorMessage(),this._errorLocation=t.getErrorLocation(),this._errorIndicator=t.getErrorIndicator()),this.report(\"Distance\")},Bi.prototype.checkArea=function(){var t=this._input.getArea(),e=this._result.getArea();this._distance>0&&t>e&&(this._isValid=!1,this._errorMsg=\"Area of positive buffer is smaller than input\",this._errorIndicator=this._result),this._distance<0&&t<e&&(this._isValid=!1,this._errorMsg=\"Area of negative buffer is larger than input\",this._errorIndicator=this._result),this.report(\"Area\")},Bi.prototype.checkPolygonal=function(){this._result instanceof $t||this._result instanceof ne||(this._isValid=!1),this._errorMsg=\"Result is not polygonal\",this._errorIndicator=this._result,this.report(\"Polygonal\")},Bi.prototype.getErrorIndicator=function(){return this._errorIndicator},Bi.prototype.getErrorLocation=function(){return this._errorLocation},Bi.prototype.checkExpectedEmpty=function(){return this._input.getDimension()>=2?null:this._distance>0?null:(this._result.isEmpty()||(this._isValid=!1,this._errorMsg=\"Result is non-empty\",this._errorIndicator=this._result),void this.report(\"ExpectedEmpty\"))},Bi.prototype.report=function(t){if(!Bi.VERBOSE)return null;Y.out.println(\"Check \"+t+\": \"+(this._isValid?\"passed\":\"FAILED\"))},Bi.prototype.getErrorMessage=function(){return this._errorMsg},Bi.prototype.interfaces_=function(){return[]},Bi.prototype.getClass=function(){return Bi},Bi.isValidMsg=function(t,e,n){var i=new Bi(t,e,n);return i.isValid()?null:i.getErrorMessage()},Bi.isValid=function(t,e,n){return!!new Bi(t,e,n).isValid()},Vi.VERBOSE.get=function(){return!1},Vi.MAX_ENV_DIFF_FRAC.get=function(){return.012},Object.defineProperties(Bi,Vi);var Ui=function(){this._pts=null,this._data=null;var t=arguments[0],e=arguments[1];this._pts=t,this._data=e};Ui.prototype.getCoordinates=function(){return this._pts},Ui.prototype.size=function(){return this._pts.length},Ui.prototype.getCoordinate=function(t){return this._pts[t]},Ui.prototype.isClosed=function(){return this._pts[0].equals(this._pts[this._pts.length-1])},Ui.prototype.getSegmentOctant=function(t){return t===this._pts.length-1?-1:pn.octant(this.getCoordinate(t),this.getCoordinate(t+1))},Ui.prototype.setData=function(t){this._data=t},Ui.prototype.getData=function(){return this._data},Ui.prototype.toString=function(){return Z.toLineString(new ue(this._pts))},Ui.prototype.interfaces_=function(){return[hn]},Ui.prototype.getClass=function(){return Ui};var zi=function(){this._findAllIntersections=!1,this._isCheckEndSegmentsOnly=!1,this._li=null,this._interiorIntersection=null,this._intSegments=null,this._intersections=new Nt,this._intersectionCount=0,this._keepIntersections=!0;var t=arguments[0];this._li=t,this._interiorIntersection=null};zi.prototype.getInteriorIntersection=function(){return this._interiorIntersection},zi.prototype.setCheckEndSegmentsOnly=function(t){this._isCheckEndSegmentsOnly=t},zi.prototype.getIntersectionSegments=function(){return this._intSegments},zi.prototype.count=function(){return this._intersectionCount},zi.prototype.getIntersections=function(){return this._intersections},zi.prototype.setFindAllIntersections=function(t){this._findAllIntersections=t},zi.prototype.setKeepIntersections=function(t){this._keepIntersections=t},zi.prototype.processIntersections=function(t,e,n,i){if(!this._findAllIntersections&&this.hasIntersection())return null;if(t===n&&e===i)return null;if(this._isCheckEndSegmentsOnly){if(!(this.isEndSegment(t,e)||this.isEndSegment(n,i)))return null}var r=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[i],a=n.getCoordinates()[i+1];this._li.computeIntersection(r,o,s,a),this._li.hasIntersection()&&this._li.isInteriorIntersection()&&(this._intSegments=new Array(4).fill(null),this._intSegments[0]=r,this._intSegments[1]=o,this._intSegments[2]=s,this._intSegments[3]=a,this._interiorIntersection=this._li.getIntersection(0),this._keepIntersections&&this._intersections.add(this._interiorIntersection),this._intersectionCount++)},zi.prototype.isEndSegment=function(t,e){return 0===e||e>=t.size()-2},zi.prototype.hasIntersection=function(){return null!==this._interiorIntersection},zi.prototype.isDone=function(){return!this._findAllIntersections&&null!==this._interiorIntersection},zi.prototype.interfaces_=function(){return[Wn]},zi.prototype.getClass=function(){return zi},zi.createAllIntersectionsFinder=function(t){var e=new zi(t);return e.setFindAllIntersections(!0),e},zi.createAnyIntersectionFinder=function(t){return new zi(t)},zi.createIntersectionCounter=function(t){var e=new zi(t);return e.setFindAllIntersections(!0),e.setKeepIntersections(!1),e};var Xi=function(){this._li=new rt,this._segStrings=null,this._findAllIntersections=!1,this._segInt=null,this._isValid=!0;var t=arguments[0];this._segStrings=t};Xi.prototype.execute=function(){if(null!==this._segInt)return null;this.checkInteriorIntersections()},Xi.prototype.getIntersections=function(){return this._segInt.getIntersections()},Xi.prototype.isValid=function(){return this.execute(),this._isValid},Xi.prototype.setFindAllIntersections=function(t){this._findAllIntersections=t},Xi.prototype.checkInteriorIntersections=function(){this._isValid=!0,this._segInt=new zi(this._li),this._segInt.setFindAllIntersections(this._findAllIntersections);var t=new xn;if(t.setSegmentIntersector(this._segInt),t.computeNodes(this._segStrings),this._segInt.hasIntersection())return this._isValid=!1,null},Xi.prototype.checkValid=function(){if(this.execute(),!this._isValid)throw new we(this.getErrorMessage(),this._segInt.getInteriorIntersection())},Xi.prototype.getErrorMessage=function(){if(this._isValid)return\"no intersections found\";var t=this._segInt.getIntersectionSegments();return\"found non-noded intersection between \"+Z.toLineString(t[0],t[1])+\" and \"+Z.toLineString(t[2],t[3])},Xi.prototype.interfaces_=function(){return[]},Xi.prototype.getClass=function(){return Xi},Xi.computeIntersections=function(t){var e=new Xi(t);return e.setFindAllIntersections(!0),e.isValid(),e.getIntersections()};var Yi=function t(){this._nv=null;var e=arguments[0];this._nv=new Xi(t.toSegmentStrings(e))};Yi.prototype.checkValid=function(){this._nv.checkValid()},Yi.prototype.interfaces_=function(){return[]},Yi.prototype.getClass=function(){return Yi},Yi.toSegmentStrings=function(t){for(var e=new Nt,n=t.iterator();n.hasNext();){var i=n.next();e.add(new Ui(i.getCoordinates(),i))}return e},Yi.checkValid=function(t){new Yi(t).checkValid()};var ki=function(t){this._mapOp=t};ki.prototype.map=function(t){for(var e=new Nt,n=0;n<t.getNumGeometries();n++){var i=this._mapOp.map(t.getGeometryN(n));i.isEmpty()||e.add(i)}return t.getFactory().createGeometryCollection(_e.toGeometryArray(e))},ki.prototype.interfaces_=function(){return[]},ki.prototype.getClass=function(){return ki},ki.map=function(t,e){return new ki(e).map(t)};var ji=function(){this._op=null,this._geometryFactory=null,this._ptLocator=null,this._lineEdgesList=new Nt,this._resultLineList=new Nt;var t=arguments[0],e=arguments[1],n=arguments[2];this._op=t,this._geometryFactory=e,this._ptLocator=n};ji.prototype.collectLines=function(t){for(var e=this._op.getGraph().getEdgeEnds().iterator();e.hasNext();){var n=e.next();this.collectLineEdge(n,t,this._lineEdgesList),this.collectBoundaryTouchEdge(n,t,this._lineEdgesList)}},ji.prototype.labelIsolatedLine=function(t,e){var n=this._ptLocator.locate(t.getCoordinate(),this._op.getArgGeometry(e));t.getLabel().setLocation(e,n)},ji.prototype.build=function(t){return this.findCoveredLineEdges(),this.collectLines(t),this.buildLines(t),this._resultLineList},ji.prototype.collectLineEdge=function(t,e,n){var i=t.getLabel(),r=t.getEdge();t.isLineEdge()&&(t.isVisited()||!Lr.isResultOfOp(i,e)||r.isCovered()||(n.add(r),t.setVisitedEdge(!0)))},ji.prototype.findCoveredLineEdges=function(){for(var t=this._op.getGraph().getNodes().iterator();t.hasNext();){t.next().getEdges().findCoveredLineEdges()}for(var e=this._op.getGraph().getEdgeEnds().iterator();e.hasNext();){var n=e.next(),i=n.getEdge();if(n.isLineEdge()&&!i.isCoveredSet()){var r=this._op.isCoveredByA(n.getCoordinate());i.setCovered(r)}}},ji.prototype.labelIsolatedLines=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),i=n.getLabel();n.isIsolated()&&(i.isNull(0)?this.labelIsolatedLine(n,0):this.labelIsolatedLine(n,1))}},ji.prototype.buildLines=function(t){for(var e=this._lineEdgesList.iterator();e.hasNext();){var n=e.next(),i=this._geometryFactory.createLineString(n.getCoordinates());this._resultLineList.add(i),n.setInResult(!0)}},ji.prototype.collectBoundaryTouchEdge=function(t,e,n){var i=t.getLabel();return t.isLineEdge()?null:t.isVisited()?null:t.isInteriorAreaEdge()?null:t.getEdge().isInResult()?null:(et.isTrue(!(t.isInResult()||t.getSym().isInResult())||!t.getEdge().isInResult()),void(Lr.isResultOfOp(i,e)&&e===Lr.INTERSECTION&&(n.add(t.getEdge()),t.setVisitedEdge(!0))))},ji.prototype.interfaces_=function(){return[]},ji.prototype.getClass=function(){return ji};var Hi=function(){this._op=null,this._geometryFactory=null,this._resultPointList=new Nt;var t=arguments[0],e=arguments[1];this._op=t,this._geometryFactory=e};Hi.prototype.filterCoveredNodeToPoint=function(t){var e=t.getCoordinate();if(!this._op.isCoveredByLA(e)){var n=this._geometryFactory.createPoint(e);this._resultPointList.add(n)}},Hi.prototype.extractNonCoveredResultNodes=function(t){for(var e=this._op.getGraph().getNodes().iterator();e.hasNext();){var n=e.next();if(!n.isInResult()&&(!n.isIncidentEdgeInResult()&&(0===n.getEdges().getDegree()||t===Lr.INTERSECTION))){var i=n.getLabel();Lr.isResultOfOp(i,t)&&this.filterCoveredNodeToPoint(n)}}},Hi.prototype.build=function(t){return this.extractNonCoveredResultNodes(t),this._resultPointList},Hi.prototype.interfaces_=function(){return[]},Hi.prototype.getClass=function(){return Hi};var Wi=function(){this._inputGeom=null,this._factory=null,this._pruneEmptyGeometry=!0,this._preserveGeometryCollectionType=!0,this._preserveCollections=!1,this._preserveType=!1};Wi.prototype.transformPoint=function(t,e){return this._factory.createPoint(this.transformCoordinates(t.getCoordinateSequence(),t))},Wi.prototype.transformPolygon=function(t,e){var n=!0,i=this.transformLinearRing(t.getExteriorRing(),t);null!==i&&i instanceof ee&&!i.isEmpty()||(n=!1);for(var r=new Nt,o=0;o<t.getNumInteriorRing();o++){var s=this.transformLinearRing(t.getInteriorRingN(o),t);null===s||s.isEmpty()||(s instanceof ee||(n=!1),r.add(s))}if(n)return this._factory.createPolygon(i,r.toArray([]));var a=new Nt;return null!==i&&a.add(i),a.addAll(r),this._factory.buildGeometry(a)},Wi.prototype.createCoordinateSequence=function(t){return this._factory.getCoordinateSequenceFactory().create(t)},Wi.prototype.getInputGeometry=function(){return this._inputGeom},Wi.prototype.transformMultiLineString=function(t,e){for(var n=new Nt,i=0;i<t.getNumGeometries();i++){var r=this.transformLineString(t.getGeometryN(i),t);null!==r&&(r.isEmpty()||n.add(r))}return this._factory.buildGeometry(n)},Wi.prototype.transformCoordinates=function(t,e){return this.copy(t)},Wi.prototype.transformLineString=function(t,e){return this._factory.createLineString(this.transformCoordinates(t.getCoordinateSequence(),t))},Wi.prototype.transformMultiPoint=function(t,e){for(var n=new Nt,i=0;i<t.getNumGeometries();i++){var r=this.transformPoint(t.getGeometryN(i),t);null!==r&&(r.isEmpty()||n.add(r))}return this._factory.buildGeometry(n)},Wi.prototype.transformMultiPolygon=function(t,e){for(var n=new Nt,i=0;i<t.getNumGeometries();i++){var r=this.transformPolygon(t.getGeometryN(i),t);null!==r&&(r.isEmpty()||n.add(r))}return this._factory.buildGeometry(n)},Wi.prototype.copy=function(t){return t.copy()},Wi.prototype.transformGeometryCollection=function(t,e){for(var n=new Nt,i=0;i<t.getNumGeometries();i++){var r=this.transform(t.getGeometryN(i));null!==r&&(this._pruneEmptyGeometry&&r.isEmpty()||n.add(r))}return this._preserveGeometryCollectionType?this._factory.createGeometryCollection(_e.toGeometryArray(n)):this._factory.buildGeometry(n)},Wi.prototype.transform=function(t){if(this._inputGeom=t,this._factory=t.getFactory(),t instanceof Qt)return this.transformPoint(t,null);if(t instanceof te)return this.transformMultiPoint(t,null);if(t instanceof ee)return this.transformLinearRing(t,null);if(t instanceof Kt)return this.transformLineString(t,null);if(t instanceof Xt)return this.transformMultiLineString(t,null);if(t instanceof $t)return this.transformPolygon(t,null);if(t instanceof ne)return this.transformMultiPolygon(t,null);if(t instanceof zt)return this.transformGeometryCollection(t,null);throw new m(\"Unknown Geometry subtype: \"+t.getClass().getName())},Wi.prototype.transformLinearRing=function(t,e){var n=this.transformCoordinates(t.getCoordinateSequence(),t);if(null===n)return this._factory.createLinearRing(null);var i=n.size();return i>0&&i<4&&!this._preserveType?this._factory.createLineString(n):this._factory.createLinearRing(n)},Wi.prototype.interfaces_=function(){return[]},Wi.prototype.getClass=function(){return Wi};var Ki=function t(){if(this._snapTolerance=0,this._srcPts=null,this._seg=new dn,this._allowSnappingToSourceVertices=!1,this._isClosed=!1,arguments[0]instanceof Kt&&\"number\"==typeof arguments[1]){var e=arguments[0],n=arguments[1];t.call(this,e.getCoordinates(),n)}else if(arguments[0]instanceof Array&&\"number\"==typeof arguments[1]){var i=arguments[0],r=arguments[1];this._srcPts=i,this._isClosed=t.isClosed(i),this._snapTolerance=r}};Ki.prototype.snapVertices=function(t,e){for(var n=this._isClosed?t.size()-1:t.size(),i=0;i<n;i++){var r=t.get(i),o=this.findSnapForVertex(r,e);null!==o&&(t.set(i,new C(o)),0===i&&this._isClosed&&t.set(t.size()-1,new C(o)))}},Ki.prototype.findSnapForVertex=function(t,e){for(var n=0;n<e.length;n++){if(t.equals2D(e[n]))return null;if(t.distance(e[n])<this._snapTolerance)return e[n]}return null},Ki.prototype.snapTo=function(t){var e=new St(this._srcPts);this.snapVertices(e,t),this.snapSegments(e,t);return e.toCoordinateArray()},Ki.prototype.snapSegments=function(t,e){if(0===e.length)return null;var n=e.length;e[0].equals2D(e[e.length-1])&&(n=e.length-1);for(var i=0;i<n;i++){var r=e[i],o=this.findSegmentIndexToSnap(r,t);o>=0&&t.add(o+1,new C(r),!1)}},Ki.prototype.findSegmentIndexToSnap=function(t,e){for(var n=v.MAX_VALUE,i=-1,r=0;r<e.size()-1;r++){if(this._seg.p0=e.get(r),this._seg.p1=e.get(r+1),this._seg.p0.equals2D(t)||this._seg.p1.equals2D(t)){if(this._allowSnappingToSourceVertices)continue;return-1}var o=this._seg.distance(t);o<this._snapTolerance&&o<n&&(n=o,i=r)}return i},Ki.prototype.setAllowSnappingToSourceVertices=function(t){this._allowSnappingToSourceVertices=t},Ki.prototype.interfaces_=function(){return[]},Ki.prototype.getClass=function(){return Ki},Ki.isClosed=function(t){return!(t.length<=1)&&t[0].equals2D(t[t.length-1])};var Ji=function(t){this._srcGeom=t||null},Qi={SNAP_PRECISION_FACTOR:{configurable:!0}};Ji.prototype.snapTo=function(t,e){var n=this.extractTargetCoordinates(t);return new Zi(e,n).transform(this._srcGeom)},Ji.prototype.snapToSelf=function(t,e){var n=this.extractTargetCoordinates(this._srcGeom),i=new Zi(t,n,!0).transform(this._srcGeom),r=i;return e&&T(r,Zt)&&(r=i.buffer(0)),r},Ji.prototype.computeSnapTolerance=function(t){return this.computeMinimumSegmentLength(t)/10},Ji.prototype.extractTargetCoordinates=function(t){for(var e=new f,n=t.getCoordinates(),i=0;i<n.length;i++)e.add(n[i]);return e.toArray(new Array(0).fill(null))},Ji.prototype.computeMinimumSegmentLength=function(t){for(var e=v.MAX_VALUE,n=0;n<t.length-1;n++){var i=t[n].distance(t[n+1]);i<e&&(e=i)}return e},Ji.prototype.interfaces_=function(){return[]},Ji.prototype.getClass=function(){return Ji},Ji.snap=function(t,e,n){var i=new Array(2).fill(null),r=new Ji(t);i[0]=r.snapTo(e,n);var o=new Ji(e);return i[1]=o.snapTo(i[0],n),i},Ji.computeOverlaySnapTolerance=function(){if(1===arguments.length){var t=arguments[0],e=Ji.computeSizeBasedSnapTolerance(t),n=t.getPrecisionModel();if(n.getType()===fe.FIXED){var i=1/n.getScale()*2/1.415;i>e&&(e=i)}return e}if(2===arguments.length){var r=arguments[0],o=arguments[1];return Math.min(Ji.computeOverlaySnapTolerance(r),Ji.computeOverlaySnapTolerance(o))}},Ji.computeSizeBasedSnapTolerance=function(t){var e=t.getEnvelopeInternal();return Math.min(e.getHeight(),e.getWidth())*Ji.SNAP_PRECISION_FACTOR},Ji.snapToSelf=function(t,e,n){return new Ji(t).snapToSelf(e,n)},Qi.SNAP_PRECISION_FACTOR.get=function(){return 1e-9},Object.defineProperties(Ji,Qi);var Zi=function(t){function e(e,n,i){t.call(this),this._snapTolerance=e||null,this._snapPts=n||null,this._isSelfSnap=void 0!==i&&i}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.snapLine=function(t,e){var n=new Ki(t,this._snapTolerance);return n.setAllowSnappingToSourceVertices(this._isSelfSnap),n.snapTo(e)},e.prototype.transformCoordinates=function(t,e){var n=t.toCoordinateArray(),i=this.snapLine(n,this._snapPts);return this._factory.getCoordinateSequenceFactory().create(i)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Wi),$i=function(){this._isFirst=!0,this._commonMantissaBitsCount=53,this._commonBits=0,this._commonSignExp=null};$i.prototype.getCommon=function(){return v.longBitsToDouble(this._commonBits)},$i.prototype.add=function(t){var e=v.doubleToLongBits(t);if(this._isFirst)return this._commonBits=e,this._commonSignExp=$i.signExpBits(this._commonBits),this._isFirst=!1,null;if($i.signExpBits(e)!==this._commonSignExp)return this._commonBits=0,null;this._commonMantissaBitsCount=$i.numCommonMostSigMantissaBits(this._commonBits,e),this._commonBits=$i.zeroLowerBits(this._commonBits,64-(12+this._commonMantissaBitsCount))},$i.prototype.toString=function(){if(1===arguments.length){var t=arguments[0],e=v.longBitsToDouble(t),n=\"0000000000000000000000000000000000000000000000000000000000000000\"+v.toBinaryString(t),i=n.substring(n.length-64);return i.substring(0,1)+\"  \"+i.substring(1,12)+\"(exp) \"+i.substring(12)+\" [ \"+e+\" ]\"}},$i.prototype.interfaces_=function(){return[]},$i.prototype.getClass=function(){return $i},$i.getBit=function(t,e){return 0!=(t&1<<e)?1:0},$i.signExpBits=function(t){return t>>52},$i.zeroLowerBits=function(t,e){return t&~((1<<e)-1)},$i.numCommonMostSigMantissaBits=function(t,e){for(var n=0,i=52;i>=0;i--){if($i.getBit(t,i)!==$i.getBit(e,i))return n;n++}return 52};var tr=function(){this._commonCoord=null,this._ccFilter=new nr},er={CommonCoordinateFilter:{configurable:!0},Translater:{configurable:!0}};tr.prototype.addCommonBits=function(t){var e=new ir(this._commonCoord);t.apply(e),t.geometryChanged()},tr.prototype.removeCommonBits=function(t){if(0===this._commonCoord.x&&0===this._commonCoord.y)return t;var e=new C(this._commonCoord);e.x=-e.x,e.y=-e.y;var n=new ir(e);return t.apply(n),t.geometryChanged(),t},tr.prototype.getCommonCoordinate=function(){return this._commonCoord},tr.prototype.add=function(t){t.apply(this._ccFilter),this._commonCoord=this._ccFilter.getCommonCoordinate()},tr.prototype.interfaces_=function(){return[]},tr.prototype.getClass=function(){return tr},er.CommonCoordinateFilter.get=function(){return nr},er.Translater.get=function(){return ir},Object.defineProperties(tr,er);var nr=function(){this._commonBitsX=new $i,this._commonBitsY=new $i};nr.prototype.filter=function(t){this._commonBitsX.add(t.x),this._commonBitsY.add(t.y)},nr.prototype.getCommonCoordinate=function(){return new C(this._commonBitsX.getCommon(),this._commonBitsY.getCommon())},nr.prototype.interfaces_=function(){return[ft]},nr.prototype.getClass=function(){return nr};var ir=function(){this.trans=null;var t=arguments[0];this.trans=t};ir.prototype.filter=function(t,e){var n=t.getOrdinate(e,0)+this.trans.x,i=t.getOrdinate(e,1)+this.trans.y;t.setOrdinate(e,0,n),t.setOrdinate(e,1,i)},ir.prototype.isDone=function(){return!1},ir.prototype.isGeometryChanged=function(){return!0},ir.prototype.interfaces_=function(){return[Ut]},ir.prototype.getClass=function(){return ir};var rr=function(t,e){this._geom=new Array(2).fill(null),this._snapTolerance=null,this._cbr=null,this._geom[0]=t,this._geom[1]=e,this.computeSnapTolerance()};rr.prototype.selfSnap=function(t){return new Ji(t).snapTo(t,this._snapTolerance)},rr.prototype.removeCommonBits=function(t){this._cbr=new tr,this._cbr.add(t[0]),this._cbr.add(t[1]);var e=new Array(2).fill(null);return e[0]=this._cbr.removeCommonBits(t[0].copy()),e[1]=this._cbr.removeCommonBits(t[1].copy()),e},rr.prototype.prepareResult=function(t){return this._cbr.addCommonBits(t),t},rr.prototype.getResultGeometry=function(t){var e=this.snap(this._geom),n=Lr.overlayOp(e[0],e[1],t);return this.prepareResult(n)},rr.prototype.checkValid=function(t){t.isValid()||Y.out.println(\"Snapped geometry is invalid\")},rr.prototype.computeSnapTolerance=function(){this._snapTolerance=Ji.computeOverlaySnapTolerance(this._geom[0],this._geom[1])},rr.prototype.snap=function(t){var e=this.removeCommonBits(t);return Ji.snap(e[0],e[1],this._snapTolerance)},rr.prototype.interfaces_=function(){return[]},rr.prototype.getClass=function(){return rr},rr.overlayOp=function(t,e,n){return new rr(t,e).getResultGeometry(n)},rr.union=function(t,e){return rr.overlayOp(t,e,Lr.UNION)},rr.intersection=function(t,e){return rr.overlayOp(t,e,Lr.INTERSECTION)},rr.symDifference=function(t,e){return rr.overlayOp(t,e,Lr.SYMDIFFERENCE)},rr.difference=function(t,e){return rr.overlayOp(t,e,Lr.DIFFERENCE)};var or=function(t,e){this._geom=new Array(2).fill(null),this._geom[0]=t,this._geom[1]=e};or.prototype.getResultGeometry=function(t){var e=null,n=!1,i=null;try{e=Lr.overlayOp(this._geom[0],this._geom[1],t);n=!0}catch(t){if(!(t instanceof $))throw t;i=t}if(!n)try{e=rr.overlayOp(this._geom[0],this._geom[1],t)}catch(t){throw t instanceof $?i:t}return e},or.prototype.interfaces_=function(){return[]},or.prototype.getClass=function(){return or},or.overlayOp=function(t,e,n){return new or(t,e).getResultGeometry(n)},or.union=function(t,e){return or.overlayOp(t,e,Lr.UNION)},or.intersection=function(t,e){return or.overlayOp(t,e,Lr.INTERSECTION)},or.symDifference=function(t,e){return or.overlayOp(t,e,Lr.SYMDIFFERENCE)},or.difference=function(t,e){return or.overlayOp(t,e,Lr.DIFFERENCE)};var sr=function(){this.mce=null,this.chainIndex=null;var t=arguments[0],e=arguments[1];this.mce=t,this.chainIndex=e};sr.prototype.computeIntersections=function(t,e){this.mce.computeIntersectsForChain(this.chainIndex,t.mce,t.chainIndex,e)},sr.prototype.interfaces_=function(){return[]},sr.prototype.getClass=function(){return sr};var ar=function t(){if(this._label=null,this._xValue=null,this._eventType=null,this._insertEvent=null,this._deleteEventIndex=null,this._obj=null,2===arguments.length){var e=arguments[0],n=arguments[1];this._eventType=t.DELETE,this._xValue=e,this._insertEvent=n}else if(3===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2];this._eventType=t.INSERT,this._label=i,this._xValue=r,this._obj=o}},ur={INSERT:{configurable:!0},DELETE:{configurable:!0}};ar.prototype.isDelete=function(){return this._eventType===ar.DELETE},ar.prototype.setDeleteEventIndex=function(t){this._deleteEventIndex=t},ar.prototype.getObject=function(){return this._obj},ar.prototype.compareTo=function(t){var e=t;return this._xValue<e._xValue?-1:this._xValue>e._xValue?1:this._eventType<e._eventType?-1:this._eventType>e._eventType?1:0},ar.prototype.getInsertEvent=function(){return this._insertEvent},ar.prototype.isInsert=function(){return this._eventType===ar.INSERT},ar.prototype.isSameLabel=function(t){return null!==this._label&&this._label===t._label},ar.prototype.getDeleteEventIndex=function(){return this._deleteEventIndex},ar.prototype.interfaces_=function(){return[E]},ar.prototype.getClass=function(){return ar},ur.INSERT.get=function(){return 1},ur.DELETE.get=function(){return 2},Object.defineProperties(ar,ur);var lr=function(){};lr.prototype.interfaces_=function(){return[]},lr.prototype.getClass=function(){return lr};var cr=function(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._properIntersectionPoint=null,this._li=null,this._includeProper=null,this._recordIsolated=null,this._isSelfIntersection=null,this._numIntersections=0,this.numTests=0,this._bdyNodes=null,this._isDone=!1,this._isDoneWhenProperInt=!1;var t=arguments[0],e=arguments[1],n=arguments[2];this._li=t,this._includeProper=e,this._recordIsolated=n};cr.prototype.isTrivialIntersection=function(t,e,n,i){if(t===n&&1===this._li.getIntersectionNum()){if(cr.isAdjacentSegments(e,i))return!0;if(t.isClosed()){var r=t.getNumPoints()-1;if(0===e&&i===r||0===i&&e===r)return!0}}return!1},cr.prototype.getProperIntersectionPoint=function(){return this._properIntersectionPoint},cr.prototype.setIsDoneIfProperInt=function(t){this._isDoneWhenProperInt=t},cr.prototype.hasProperInteriorIntersection=function(){return this._hasProperInterior},cr.prototype.isBoundaryPointInternal=function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next().getCoordinate();if(t.isIntersection(i))return!0}return!1},cr.prototype.hasProperIntersection=function(){return this._hasProper},cr.prototype.hasIntersection=function(){return this._hasIntersection},cr.prototype.isDone=function(){return this._isDone},cr.prototype.isBoundaryPoint=function(t,e){return null!==e&&(!!this.isBoundaryPointInternal(t,e[0])||!!this.isBoundaryPointInternal(t,e[1]))},cr.prototype.setBoundaryNodes=function(t,e){this._bdyNodes=new Array(2).fill(null),this._bdyNodes[0]=t,this._bdyNodes[1]=e},cr.prototype.addIntersections=function(t,e,n,i){if(t===n&&e===i)return null;this.numTests++;var r=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[i],a=n.getCoordinates()[i+1];this._li.computeIntersection(r,o,s,a),this._li.hasIntersection()&&(this._recordIsolated&&(t.setIsolated(!1),n.setIsolated(!1)),this._numIntersections++,this.isTrivialIntersection(t,e,n,i)||(this._hasIntersection=!0,!this._includeProper&&this._li.isProper()||(t.addIntersections(this._li,e,0),n.addIntersections(this._li,i,1)),this._li.isProper()&&(this._properIntersectionPoint=this._li.getIntersection(0).copy(),this._hasProper=!0,this._isDoneWhenProperInt&&(this._isDone=!0),this.isBoundaryPoint(this._li,this._bdyNodes)||(this._hasProperInterior=!0))))},cr.prototype.interfaces_=function(){return[]},cr.prototype.getClass=function(){return cr},cr.isAdjacentSegments=function(t,e){return 1===Math.abs(t-e)};var pr=function(t){function e(){t.call(this),this.events=new Nt,this.nOverlaps=null}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.prepareEvents=function(){$e.sort(this.events);for(var t=0;t<this.events.size();t++){var e=this.events.get(t);e.isDelete()&&e.getInsertEvent().setDeleteEventIndex(t)}},e.prototype.computeIntersections=function(){if(1===arguments.length){var t=arguments[0];this.nOverlaps=0,this.prepareEvents();for(var e=0;e<this.events.size();e++){var n=this.events.get(e);if(n.isInsert()&&this.processOverlaps(e,n.getDeleteEventIndex(),n,t),t.isDone())break}}else if(3===arguments.length)if(arguments[2]instanceof cr&&T(arguments[0],xt)&&T(arguments[1],xt)){var i=arguments[0],r=arguments[1],o=arguments[2];this.addEdges(i,i),this.addEdges(r,r),this.computeIntersections(o)}else if(\"boolean\"==typeof arguments[2]&&T(arguments[0],xt)&&arguments[1]instanceof cr){var s=arguments[0],a=arguments[1];arguments[2]?this.addEdges(s,null):this.addEdges(s),this.computeIntersections(a)}},e.prototype.addEdge=function(t,e){for(var n=t.getMonotoneChainEdge(),i=n.getStartIndexes(),r=0;r<i.length-1;r++){var o=new sr(n,r),s=new ar(e,n.getMinX(r),o);this.events.add(s),this.events.add(new ar(n.getMaxX(r),s))}},e.prototype.processOverlaps=function(t,e,n,i){for(var r=n.getObject(),o=t;o<e;o++){var s=this.events.get(o);if(s.isInsert()){var a=s.getObject();n.isSameLabel(s)||(r.computeIntersections(a,i),this.nOverlaps++)}}},e.prototype.addEdges=function(){if(1===arguments.length)for(var t=arguments[0].iterator();t.hasNext();){var e=t.next();this.addEdge(e,e)}else if(2===arguments.length)for(var n=arguments[0],i=arguments[1],r=n.iterator();r.hasNext();){var o=r.next();this.addEdge(o,i)}},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(lr),hr=function(){this._min=v.POSITIVE_INFINITY,this._max=v.NEGATIVE_INFINITY},fr={NodeComparator:{configurable:!0}};hr.prototype.getMin=function(){return this._min},hr.prototype.intersects=function(t,e){return!(this._min>e||this._max<t)},hr.prototype.getMax=function(){return this._max},hr.prototype.toString=function(){return Z.toLineString(new C(this._min,0),new C(this._max,0))},hr.prototype.interfaces_=function(){return[]},hr.prototype.getClass=function(){return hr},fr.NodeComparator.get=function(){return gr},Object.defineProperties(hr,fr);var gr=function(){};gr.prototype.compare=function(t,e){var n=t,i=e,r=(n._min+n._max)/2,o=(i._min+i._max)/2;return r<o?-1:r>o?1:0},gr.prototype.interfaces_=function(){return[N]},gr.prototype.getClass=function(){return gr};var dr=function(t){function e(){t.call(this),this._item=null;var e=arguments[0],n=arguments[1],i=arguments[2];this._min=e,this._max=n,this._item=i}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.query=function(t,e,n){if(!this.intersects(t,e))return null;n.visitItem(this._item)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(hr),yr=function(t){function e(){t.call(this),this._node1=null,this._node2=null;var e=arguments[0],n=arguments[1];this._node1=e,this._node2=n,this.buildExtent(this._node1,this._node2)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.buildExtent=function(t,e){this._min=Math.min(t._min,e._min),this._max=Math.max(t._max,e._max)},e.prototype.query=function(t,e,n){if(!this.intersects(t,e))return null;null!==this._node1&&this._node1.query(t,e,n),null!==this._node2&&this._node2.query(t,e,n)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(hr),_r=function(){this._leaves=new Nt,this._root=null,this._level=0};_r.prototype.buildTree=function(){$e.sort(this._leaves,new hr.NodeComparator);for(var t=this._leaves,e=null,n=new Nt;;){if(this.buildLevel(t,n),1===n.size())return n.get(0);e=t,t=n,n=e}},_r.prototype.insert=function(t,e,n){if(null!==this._root)throw new Error(\"Index cannot be added to once it has been queried\");this._leaves.add(new dr(t,e,n))},_r.prototype.query=function(t,e,n){this.init(),this._root.query(t,e,n)},_r.prototype.buildRoot=function(){if(null!==this._root)return null;this._root=this.buildTree()},_r.prototype.printNode=function(t){Y.out.println(Z.toLineString(new C(t._min,this._level),new C(t._max,this._level)))},_r.prototype.init=function(){if(null!==this._root)return null;this.buildRoot()},_r.prototype.buildLevel=function(t,e){this._level++,e.clear();for(var n=0;n<t.size();n+=2){var i=t.get(n);if(null===(n+1<t.size()?t.get(n):null))e.add(i);else{var r=new yr(t.get(n),t.get(n+1));e.add(r)}}},_r.prototype.interfaces_=function(){return[]},_r.prototype.getClass=function(){return _r};var mr=function(){this._items=new Nt};mr.prototype.visitItem=function(t){this._items.add(t)},mr.prototype.getItems=function(){return this._items},mr.prototype.interfaces_=function(){return[Ke]},mr.prototype.getClass=function(){return mr};var vr=function(){this._index=null;var t=arguments[0];if(!T(t,Zt))throw new m(\"Argument must be Polygonal\");this._index=new xr(t)},Ir={SegmentVisitor:{configurable:!0},IntervalIndexedGeometry:{configurable:!0}};vr.prototype.locate=function(t){var e=new st(t),n=new Er(e);return this._index.query(t.y,t.y,n),e.getLocation()},vr.prototype.interfaces_=function(){return[Vn]},vr.prototype.getClass=function(){return vr},Ir.SegmentVisitor.get=function(){return Er},Ir.IntervalIndexedGeometry.get=function(){return xr},Object.defineProperties(vr,Ir);var Er=function(){this._counter=null;var t=arguments[0];this._counter=t};Er.prototype.visitItem=function(t){var e=t;this._counter.countSegment(e.getCoordinate(0),e.getCoordinate(1))},Er.prototype.interfaces_=function(){return[Ke]},Er.prototype.getClass=function(){return Er};var xr=function(){this._index=new _r;var t=arguments[0];this.init(t)};xr.prototype.init=function(t){for(var e=Ci.getLines(t).iterator();e.hasNext();){var n=e.next().getCoordinates();this.addLine(n)}},xr.prototype.addLine=function(t){for(var e=1;e<t.length;e++){var n=new dn(t[e-1],t[e]),i=Math.min(n.p0.y,n.p1.y),r=Math.max(n.p0.y,n.p1.y);this._index.insert(i,r,n)}},xr.prototype.query=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new mr;return this._index.query(t,e,n),n.getItems()}if(3===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2];this._index.query(i,r,o)}},xr.prototype.interfaces_=function(){return[]},xr.prototype.getClass=function(){return xr};var Nr=function(t){function e(){if(t.call(this),this._parentGeom=null,this._lineEdgeMap=new he,this._boundaryNodeRule=null,this._useBoundaryDeterminationRule=!0,this._argIndex=null,this._boundaryNodes=null,this._hasTooFewPoints=!1,this._invalidPoint=null,this._areaPtLocator=null,this._ptLocator=new Si,2===arguments.length){var e=arguments[0],n=arguments[1],i=gt.OGC_SFS_BOUNDARY_RULE;this._argIndex=e,this._parentGeom=n,this._boundaryNodeRule=i,null!==n&&this.add(n)}else if(3===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2];this._argIndex=r,this._parentGeom=o,this._boundaryNodeRule=s,null!==o&&this.add(o)}}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.insertBoundaryPoint=function(t,n){var i=this._nodes.addNode(n).getLabel(),r=1;w.NONE;i.getLocation(t,Se.ON)===w.BOUNDARY&&r++;var o=e.determineBoundary(this._boundaryNodeRule,r);i.setLocation(t,o)},e.prototype.computeSelfNodes=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.computeSelfNodes(t,e,!1)}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],o=new cr(n,!0,!1);o.setIsDoneIfProperInt(r);var s=this.createEdgeSetIntersector(),a=this._parentGeom instanceof ee||this._parentGeom instanceof $t||this._parentGeom instanceof ne,u=i||!a;return s.computeIntersections(this._edges,o,u),this.addSelfIntersectionNodes(this._argIndex),o}},e.prototype.computeSplitEdges=function(t){for(var e=this._edges.iterator();e.hasNext();){e.next().eiList.addSplitEdges(t)}},e.prototype.computeEdgeIntersections=function(t,e,n){var i=new cr(e,n,!0);i.setBoundaryNodes(this.getBoundaryNodes(),t.getBoundaryNodes());return this.createEdgeSetIntersector().computeIntersections(this._edges,t._edges,i),i},e.prototype.getGeometry=function(){return this._parentGeom},e.prototype.getBoundaryNodeRule=function(){return this._boundaryNodeRule},e.prototype.hasTooFewPoints=function(){return this._hasTooFewPoints},e.prototype.addPoint=function(){if(arguments[0]instanceof Qt){var t=arguments[0].getCoordinate();this.insertPoint(this._argIndex,t,w.INTERIOR)}else if(arguments[0]instanceof C){var e=arguments[0];this.insertPoint(this._argIndex,e,w.INTERIOR)}},e.prototype.addPolygon=function(t){this.addPolygonRing(t.getExteriorRing(),w.EXTERIOR,w.INTERIOR);for(var e=0;e<t.getNumInteriorRing();e++){var n=t.getInteriorRingN(e);this.addPolygonRing(n,w.INTERIOR,w.EXTERIOR)}},e.prototype.addEdge=function(t){this.insertEdge(t);var e=t.getCoordinates();this.insertPoint(this._argIndex,e[0],w.BOUNDARY),this.insertPoint(this._argIndex,e[e.length-1],w.BOUNDARY)},e.prototype.addLineString=function(t){var e=Lt.removeRepeatedPoints(t.getCoordinates());if(e.length<2)return this._hasTooFewPoints=!0,this._invalidPoint=e[0],null;var n=new ni(e,new Pe(this._argIndex,w.INTERIOR));this._lineEdgeMap.put(t,n),this.insertEdge(n),et.isTrue(e.length>=2,\"found LineString with single point\"),this.insertBoundaryPoint(this._argIndex,e[0]),this.insertBoundaryPoint(this._argIndex,e[e.length-1])},e.prototype.getInvalidPoint=function(){return this._invalidPoint},e.prototype.getBoundaryPoints=function(){for(var t=this.getBoundaryNodes(),e=new Array(t.size()).fill(null),n=0,i=t.iterator();i.hasNext();){var r=i.next();e[n++]=r.getCoordinate().copy()}return e},e.prototype.getBoundaryNodes=function(){return null===this._boundaryNodes&&(this._boundaryNodes=this._nodes.getBoundaryNodes(this._argIndex)),this._boundaryNodes},e.prototype.addSelfIntersectionNode=function(t,e,n){if(this.isBoundaryNode(t,e))return null;n===w.BOUNDARY&&this._useBoundaryDeterminationRule?this.insertBoundaryPoint(t,e):this.insertPoint(t,e,n)},e.prototype.addPolygonRing=function(t,e,n){if(t.isEmpty())return null;var i=Lt.removeRepeatedPoints(t.getCoordinates());if(i.length<4)return this._hasTooFewPoints=!0,this._invalidPoint=i[0],null;var r=e,o=n;at.isCCW(i)&&(r=n,o=e);var s=new ni(i,new Pe(this._argIndex,w.BOUNDARY,r,o));this._lineEdgeMap.put(t,s),this.insertEdge(s),this.insertPoint(this._argIndex,i[0],w.BOUNDARY)},e.prototype.insertPoint=function(t,e,n){var i=this._nodes.addNode(e),r=i.getLabel();null===r?i._label=new Pe(t,n):r.setLocation(t,n)},e.prototype.createEdgeSetIntersector=function(){return new pr},e.prototype.addSelfIntersectionNodes=function(t){for(var e=this._edges.iterator();e.hasNext();)for(var n=e.next(),i=n.getLabel().getLocation(t),r=n.eiList.iterator();r.hasNext();){var o=r.next();this.addSelfIntersectionNode(t,o.coord,i)}},e.prototype.add=function(){if(1!==arguments.length)return t.prototype.add.apply(this,arguments);var e=arguments[0];if(e.isEmpty())return null;if(e instanceof ne&&(this._useBoundaryDeterminationRule=!1),e instanceof $t)this.addPolygon(e);else if(e instanceof Kt)this.addLineString(e);else if(e instanceof Qt)this.addPoint(e);else if(e instanceof te)this.addCollection(e);else if(e instanceof Xt)this.addCollection(e);else if(e instanceof ne)this.addCollection(e);else{if(!(e instanceof zt))throw new Error(e.getClass().getName());this.addCollection(e)}},e.prototype.addCollection=function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);this.add(n)}},e.prototype.locate=function(t){return T(this._parentGeom,Zt)&&this._parentGeom.getNumGeometries()>50?(null===this._areaPtLocator&&(this._areaPtLocator=new vr(this._parentGeom)),this._areaPtLocator.locate(t)):this._ptLocator.locate(t,this._parentGeom)},e.prototype.findEdge=function(){if(1===arguments.length){var e=arguments[0];return this._lineEdgeMap.get(e)}return t.prototype.findEdge.apply(this,arguments)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.determineBoundary=function(t,e){return t.isInBoundary(e)?w.BOUNDARY:w.INTERIOR},e}(Ye),Cr=function(){if(this._li=new rt,this._resultPrecisionModel=null,this._arg=null,1===arguments.length){var t=arguments[0];this.setComputationPrecision(t.getPrecisionModel()),this._arg=new Array(1).fill(null),this._arg[0]=new Nr(0,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],i=gt.OGC_SFS_BOUNDARY_RULE;e.getPrecisionModel().compareTo(n.getPrecisionModel())>=0?this.setComputationPrecision(e.getPrecisionModel()):this.setComputationPrecision(n.getPrecisionModel()),this._arg=new Array(2).fill(null),this._arg[0]=new Nr(0,e,i),this._arg[1]=new Nr(1,n,i)}else if(3===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2];r.getPrecisionModel().compareTo(o.getPrecisionModel())>=0?this.setComputationPrecision(r.getPrecisionModel()):this.setComputationPrecision(o.getPrecisionModel()),this._arg=new Array(2).fill(null),this._arg[0]=new Nr(0,r,s),this._arg[1]=new Nr(1,o,s)}};Cr.prototype.getArgGeometry=function(t){return this._arg[t].getGeometry()},Cr.prototype.setComputationPrecision=function(t){this._resultPrecisionModel=t,this._li.setPrecisionModel(this._resultPrecisionModel)},Cr.prototype.interfaces_=function(){return[]},Cr.prototype.getClass=function(){return Cr};var Sr=function(){};Sr.prototype.interfaces_=function(){return[]},Sr.prototype.getClass=function(){return Sr},Sr.map=function(){if(arguments[0]instanceof ct&&T(arguments[1],Sr.MapOp)){for(var t=arguments[0],e=arguments[1],n=new Nt,i=0;i<t.getNumGeometries();i++){var r=e.map(t.getGeometryN(i));null!==r&&n.add(r)}return t.getFactory().buildGeometry(n)}if(T(arguments[0],It)&&T(arguments[1],Sr.MapOp)){for(var o=arguments[0],s=arguments[1],a=new Nt,u=o.iterator();u.hasNext();){var l=u.next(),c=s.map(l);null!==c&&a.add(c)}return a}},Sr.MapOp=function(){};var Lr=function(t){function e(){var e=arguments[0],n=arguments[1];t.call(this,e,n),this._ptLocator=new Si,this._geomFact=null,this._resultGeom=null,this._graph=null,this._edgeList=new Hn,this._resultPolyList=new Nt,this._resultLineList=new Nt,this._resultPointList=new Nt,this._graph=new Ye(new kn),this._geomFact=e.getFactory()}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.insertUniqueEdge=function(t){var e=this._edgeList.findEqualEdge(t);if(null!==e){var n=e.getLabel(),i=t.getLabel();e.isPointwiseEqual(t)||(i=new Pe(t.getLabel())).flip();var r=e.getDepth();r.isNull()&&r.add(n),r.add(i),n.merge(i)}else this._edgeList.add(t)},e.prototype.getGraph=function(){return this._graph},e.prototype.cancelDuplicateResultEdges=function(){for(var t=this._graph.getEdgeEnds().iterator();t.hasNext();){var e=t.next(),n=e.getSym();e.isInResult()&&n.isInResult()&&(e.setInResult(!1),n.setInResult(!1))}},e.prototype.isCoveredByLA=function(t){return!!this.isCovered(t,this._resultLineList)||!!this.isCovered(t,this._resultPolyList)},e.prototype.computeGeometry=function(t,n,i,r){var o=new Nt;return o.addAll(t),o.addAll(n),o.addAll(i),o.isEmpty()?e.createEmptyResult(r,this._arg[0].getGeometry(),this._arg[1].getGeometry(),this._geomFact):this._geomFact.buildGeometry(o)},e.prototype.mergeSymLabels=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){t.next().getEdges().mergeSymLabels()}},e.prototype.isCovered=function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next();if(this._ptLocator.locate(t,i)!==w.EXTERIOR)return!0}return!1},e.prototype.replaceCollapsedEdges=function(){for(var t=new Nt,e=this._edgeList.iterator();e.hasNext();){var n=e.next();n.isCollapsed()&&(e.remove(),t.add(n.getCollapsedEdge()))}this._edgeList.addAll(t)},e.prototype.updateNodeLabelling=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){var e=t.next(),n=e.getEdges().getLabel();e.getLabel().merge(n)}},e.prototype.getResultGeometry=function(t){return this.computeOverlay(t),this._resultGeom},e.prototype.insertUniqueEdges=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.insertUniqueEdge(n)}},e.prototype.computeOverlay=function(t){this.copyPoints(0),this.copyPoints(1),this._arg[0].computeSelfNodes(this._li,!1),this._arg[1].computeSelfNodes(this._li,!1),this._arg[0].computeEdgeIntersections(this._arg[1],this._li,!0);var e=new Nt;this._arg[0].computeSplitEdges(e),this._arg[1].computeSplitEdges(e),this.insertUniqueEdges(e),this.computeLabelsFromDepths(),this.replaceCollapsedEdges(),Yi.checkValid(this._edgeList.getEdges()),this._graph.addEdges(this._edgeList.getEdges()),this.computeLabelling(),this.labelIncompleteNodes(),this.findResultAreaEdges(t),this.cancelDuplicateResultEdges();var n=new ke(this._geomFact);n.add(this._graph),this._resultPolyList=n.getPolygons();var i=new ji(this,this._geomFact,this._ptLocator);this._resultLineList=i.build(t);var r=new Hi(this,this._geomFact,this._ptLocator);this._resultPointList=r.build(t),this._resultGeom=this.computeGeometry(this._resultPointList,this._resultLineList,this._resultPolyList,t)},e.prototype.labelIncompleteNode=function(t,e){var n=this._ptLocator.locate(t.getCoordinate(),this._arg[e].getGeometry());t.getLabel().setLocation(e,n)},e.prototype.copyPoints=function(t){for(var e=this._arg[t].getNodeIterator();e.hasNext();){var n=e.next();this._graph.addNode(n.getCoordinate()).setLabel(t,n.getLabel().getLocation(t))}},e.prototype.findResultAreaEdges=function(t){for(var n=this._graph.getEdgeEnds().iterator();n.hasNext();){var i=n.next(),r=i.getLabel();r.isArea()&&!i.isInteriorAreaEdge()&&e.isResultOfOp(r.getLocation(0,Se.RIGHT),r.getLocation(1,Se.RIGHT),t)&&i.setInResult(!0)}},e.prototype.computeLabelsFromDepths=function(){for(var t=this._edgeList.iterator();t.hasNext();){var e=t.next(),n=e.getLabel(),i=e.getDepth();if(!i.isNull()){i.normalize();for(var r=0;r<2;r++)n.isNull(r)||!n.isArea()||i.isNull(r)||(0===i.getDelta(r)?n.toLine(r):(et.isTrue(!i.isNull(r,Se.LEFT),\"depth of LEFT side has not been initialized\"),n.setLocation(r,Se.LEFT,i.getLocation(r,Se.LEFT)),et.isTrue(!i.isNull(r,Se.RIGHT),\"depth of RIGHT side has not been initialized\"),n.setLocation(r,Se.RIGHT,i.getLocation(r,Se.RIGHT))))}}},e.prototype.computeLabelling=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){t.next().getEdges().computeLabelling(this._arg)}this.mergeSymLabels(),this.updateNodeLabelling()},e.prototype.labelIncompleteNodes=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){var e=t.next(),n=e.getLabel();e.isIsolated()&&(n.isNull(0)?this.labelIncompleteNode(e,0):this.labelIncompleteNode(e,1)),e.getEdges().updateLabelling(n)}},e.prototype.isCoveredByA=function(t){return!!this.isCovered(t,this._resultPolyList)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Cr);Lr.overlayOp=function(t,e,n){return new Lr(t,e).getResultGeometry(n)},Lr.intersection=function(t,e){if(t.isEmpty()||e.isEmpty())return Lr.createEmptyResult(Lr.INTERSECTION,t,e,t.getFactory());if(t.isGeometryCollection()){var n=e;return ki.map(t,{interfaces_:function(){return[Sr.MapOp]},map:function(t){return t.intersection(n)}})}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),or.overlayOp(t,e,Lr.INTERSECTION)},Lr.symDifference=function(t,e){if(t.isEmpty()||e.isEmpty()){if(t.isEmpty()&&e.isEmpty())return Lr.createEmptyResult(Lr.SYMDIFFERENCE,t,e,t.getFactory());if(t.isEmpty())return e.copy();if(e.isEmpty())return t.copy()}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),or.overlayOp(t,e,Lr.SYMDIFFERENCE)},Lr.resultDimension=function(t,e,n){var i=e.getDimension(),r=n.getDimension(),o=-1;switch(t){case Lr.INTERSECTION:o=Math.min(i,r);break;case Lr.UNION:o=Math.max(i,r);break;case Lr.DIFFERENCE:o=i;break;case Lr.SYMDIFFERENCE:o=Math.max(i,r)}return o},Lr.createEmptyResult=function(t,e,n,i){var r=null;switch(Lr.resultDimension(t,e,n)){case-1:r=i.createGeometryCollection(new Array(0).fill(null));break;case 0:r=i.createPoint();break;case 1:r=i.createLineString();break;case 2:r=i.createPolygon()}return r},Lr.difference=function(t,e){return t.isEmpty()?Lr.createEmptyResult(Lr.DIFFERENCE,t,e,t.getFactory()):e.isEmpty()?t.copy():(t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),or.overlayOp(t,e,Lr.DIFFERENCE))},Lr.isResultOfOp=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=t.getLocation(0),i=t.getLocation(1);return Lr.isResultOfOp(n,i,e)}if(3===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2];switch(r===w.BOUNDARY&&(r=w.INTERIOR),o===w.BOUNDARY&&(o=w.INTERIOR),s){case Lr.INTERSECTION:return r===w.INTERIOR&&o===w.INTERIOR;case Lr.UNION:return r===w.INTERIOR||o===w.INTERIOR;case Lr.DIFFERENCE:return r===w.INTERIOR&&o!==w.INTERIOR;case Lr.SYMDIFFERENCE:return r===w.INTERIOR&&o!==w.INTERIOR||r!==w.INTERIOR&&o===w.INTERIOR}return!1}},Lr.INTERSECTION=1,Lr.UNION=2,Lr.DIFFERENCE=3,Lr.SYMDIFFERENCE=4;var br=function(){this._g=null,this._boundaryDistanceTolerance=null,this._linework=null,this._ptLocator=new Si,this._seg=new dn;var t=arguments[0],e=arguments[1];this._g=t,this._boundaryDistanceTolerance=e,this._linework=this.extractLinework(t)};br.prototype.isWithinToleranceOfBoundary=function(t){for(var e=0;e<this._linework.getNumGeometries();e++)for(var n=this._linework.getGeometryN(e).getCoordinateSequence(),i=0;i<n.size()-1;i++){n.getCoordinate(i,this._seg.p0),n.getCoordinate(i+1,this._seg.p1);if(this._seg.distance(t)<=this._boundaryDistanceTolerance)return!0}return!1},br.prototype.getLocation=function(t){return this.isWithinToleranceOfBoundary(t)?w.BOUNDARY:this._ptLocator.locate(t,this._g)},br.prototype.extractLinework=function(t){var e=new wr;t.apply(e);var n=e.getLinework(),i=_e.toLineStringArray(n);return t.getFactory().createMultiLineString(i)},br.prototype.interfaces_=function(){return[]},br.prototype.getClass=function(){return br};var wr=function(){this._linework=null,this._linework=new Nt};wr.prototype.getLinework=function(){return this._linework},wr.prototype.filter=function(t){if(t instanceof $t){var e=t;this._linework.add(e.getExteriorRing());for(var n=0;n<e.getNumInteriorRing();n++)this._linework.add(e.getInteriorRingN(n))}},wr.prototype.interfaces_=function(){return[Vt]},wr.prototype.getClass=function(){return wr};var Or=function(){this._g=null,this._doLeft=!0,this._doRight=!0;var t=arguments[0];this._g=t};Or.prototype.extractPoints=function(t,e,n){for(var i=t.getCoordinates(),r=0;r<i.length-1;r++)this.computeOffsetPoints(i[r],i[r+1],e,n)},Or.prototype.setSidesToGenerate=function(t,e){this._doLeft=t,this._doRight=e},Or.prototype.getPoints=function(t){for(var e=new Nt,n=Ci.getLines(this._g).iterator();n.hasNext();){var i=n.next();this.extractPoints(i,t,e)}return e},Or.prototype.computeOffsetPoints=function(t,e,n,i){var r=e.x-t.x,o=e.y-t.y,s=Math.sqrt(r*r+o*o),a=n*r/s,u=n*o/s,l=(e.x+t.x)/2,c=(e.y+t.y)/2;if(this._doLeft){var p=new C(l-u,c+a);i.add(p)}if(this._doRight){var h=new C(l+u,c-a);i.add(h)}},Or.prototype.interfaces_=function(){return[]},Or.prototype.getClass=function(){return Or};var Tr=function t(){this._geom=null,this._locFinder=null,this._location=new Array(3).fill(null),this._invalidLocation=null,this._boundaryDistanceTolerance=t.TOLERANCE,this._testCoords=new Nt;var e=arguments[0],n=arguments[1],i=arguments[2];this._boundaryDistanceTolerance=t.computeBoundaryDistanceTolerance(e,n),this._geom=[e,n,i],this._locFinder=[new br(this._geom[0],this._boundaryDistanceTolerance),new br(this._geom[1],this._boundaryDistanceTolerance),new br(this._geom[2],this._boundaryDistanceTolerance)]},Rr={TOLERANCE:{configurable:!0}};Tr.prototype.reportResult=function(t,e,n){Y.out.println(\"Overlay result invalid - A:\"+w.toLocationSymbol(e[0])+\" B:\"+w.toLocationSymbol(e[1])+\" expected:\"+(n?\"i\":\"e\")+\" actual:\"+w.toLocationSymbol(e[2]))},Tr.prototype.isValid=function(t){this.addTestPts(this._geom[0]),this.addTestPts(this._geom[1]);var e=this.checkValid(t);return e},Tr.prototype.checkValid=function(){if(1===arguments.length){for(var t=arguments[0],e=0;e<this._testCoords.size();e++){var n=this._testCoords.get(e);if(!this.checkValid(t,n))return this._invalidLocation=n,!1}return!0}if(2===arguments.length){var i=arguments[0],r=arguments[1];return this._location[0]=this._locFinder[0].getLocation(r),this._location[1]=this._locFinder[1].getLocation(r),this._location[2]=this._locFinder[2].getLocation(r),!!Tr.hasLocation(this._location,w.BOUNDARY)||this.isValidResult(i,this._location)}},Tr.prototype.addTestPts=function(t){var e=new Or(t);this._testCoords.addAll(e.getPoints(5*this._boundaryDistanceTolerance))},Tr.prototype.isValidResult=function(t,e){var n=Lr.isResultOfOp(e[0],e[1],t),i=!(n^e[2]===w.INTERIOR);return i||this.reportResult(t,e,n),i},Tr.prototype.getInvalidLocation=function(){return this._invalidLocation},Tr.prototype.interfaces_=function(){return[]},Tr.prototype.getClass=function(){return Tr},Tr.hasLocation=function(t,e){for(var n=0;n<3;n++)if(t[n]===e)return!0;return!1},Tr.computeBoundaryDistanceTolerance=function(t,e){return Math.min(Ji.computeSizeBasedSnapTolerance(t),Ji.computeSizeBasedSnapTolerance(e))},Tr.isValid=function(t,e,n,i){return new Tr(t,e,i).isValid(n)},Rr.TOLERANCE.get=function(){return 1e-6},Object.defineProperties(Tr,Rr);var Pr=function t(e){this._geomFactory=null,this._skipEmpty=!1,this._inputGeoms=null,this._geomFactory=t.extractFactory(e),this._inputGeoms=e};Pr.prototype.extractElements=function(t,e){if(null===t)return null;for(var n=0;n<t.getNumGeometries();n++){var i=t.getGeometryN(n);this._skipEmpty&&i.isEmpty()||e.add(i)}},Pr.prototype.combine=function(){for(var t=new Nt,e=this._inputGeoms.iterator();e.hasNext();){var n=e.next();this.extractElements(n,t)}return 0===t.size()?null!==this._geomFactory?this._geomFactory.createGeometryCollection(null):null:this._geomFactory.buildGeometry(t)},Pr.prototype.interfaces_=function(){return[]},Pr.prototype.getClass=function(){return Pr},Pr.combine=function(){if(1===arguments.length){var t=arguments[0];return new Pr(t).combine()}if(2===arguments.length){var e=arguments[0],n=arguments[1];return new Pr(Pr.createList(e,n)).combine()}if(3===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2];return new Pr(Pr.createList(i,r,o)).combine()}},Pr.extractFactory=function(t){return t.isEmpty()?null:t.iterator().next().getFactory()},Pr.createList=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new Nt;return n.add(t),n.add(e),n}if(3===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2],s=new Nt;return s.add(i),s.add(r),s.add(o),s}};var Dr=function(){this._inputPolys=null,this._geomFactory=null;var t=arguments[0];this._inputPolys=t,null===this._inputPolys&&(this._inputPolys=new Nt)},Mr={STRTREE_NODE_CAPACITY:{configurable:!0}};Dr.prototype.reduceToGeometries=function(t){for(var e=new Nt,n=t.iterator();n.hasNext();){var i=n.next(),r=null;T(i,xt)?r=this.unionTree(i):i instanceof ct&&(r=i),e.add(r)}return e},Dr.prototype.extractByEnvelope=function(t,e,n){for(var i=new Nt,r=0;r<e.getNumGeometries();r++){var o=e.getGeometryN(r);o.getEnvelopeInternal().intersects(t)?i.add(o):n.add(o)}return this._geomFactory.buildGeometry(i)},Dr.prototype.unionOptimized=function(t,e){var n=t.getEnvelopeInternal(),i=e.getEnvelopeInternal();if(!n.intersects(i)){return Pr.combine(t,e)}if(t.getNumGeometries()<=1&&e.getNumGeometries()<=1)return this.unionActual(t,e);var r=n.intersection(i);return this.unionUsingEnvelopeIntersection(t,e,r)},Dr.prototype.union=function(){if(null===this._inputPolys)throw new Error(\"union() method cannot be called twice\");if(this._inputPolys.isEmpty())return null;this._geomFactory=this._inputPolys.iterator().next().getFactory();for(var t=new sn(Dr.STRTREE_NODE_CAPACITY),e=this._inputPolys.iterator();e.hasNext();){var n=e.next();t.insert(n.getEnvelopeInternal(),n)}this._inputPolys=null;var i=t.itemsTree();return this.unionTree(i)},Dr.prototype.binaryUnion=function(){if(1===arguments.length){var t=arguments[0];return this.binaryUnion(t,0,t.size())}if(3===arguments.length){var e=arguments[0],n=arguments[1],i=arguments[2];if(i-n<=1){var r=Dr.getGeometry(e,n);return this.unionSafe(r,null)}if(i-n==2)return this.unionSafe(Dr.getGeometry(e,n),Dr.getGeometry(e,n+1));var o=Math.trunc((i+n)/2),s=this.binaryUnion(e,n,o),a=this.binaryUnion(e,o,i);return this.unionSafe(s,a)}},Dr.prototype.repeatedUnion=function(t){for(var e=null,n=t.iterator();n.hasNext();){var i=n.next();e=null===e?i.copy():e.union(i)}return e},Dr.prototype.unionSafe=function(t,e){return null===t&&null===e?null:null===t?e.copy():null===e?t.copy():this.unionOptimized(t,e)},Dr.prototype.unionActual=function(t,e){return Dr.restrictToPolygons(t.union(e))},Dr.prototype.unionTree=function(t){var e=this.reduceToGeometries(t);return this.binaryUnion(e)},Dr.prototype.unionUsingEnvelopeIntersection=function(t,e,n){var i=new Nt,r=this.extractByEnvelope(n,t,i),o=this.extractByEnvelope(n,e,i),s=this.unionActual(r,o);i.add(s);return Pr.combine(i)},Dr.prototype.bufferUnion=function(){if(1===arguments.length){var t=arguments[0];return t.get(0).getFactory().buildGeometry(t).buffer(0)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e.getFactory().createGeometryCollection([e,n]).buffer(0)}},Dr.prototype.interfaces_=function(){return[]},Dr.prototype.getClass=function(){return Dr},Dr.restrictToPolygons=function(t){if(T(t,Zt))return t;var e=Ni.getPolygons(t);return 1===e.size()?e.get(0):t.getFactory().createMultiPolygon(_e.toPolygonArray(e))},Dr.getGeometry=function(t,e){return e>=t.size()?null:t.get(e)},Dr.union=function(t){return new Dr(t).union()},Mr.STRTREE_NODE_CAPACITY.get=function(){return 4},Object.defineProperties(Dr,Mr);var Ar=function(){};Ar.prototype.interfaces_=function(){return[]},Ar.prototype.getClass=function(){return Ar},Ar.union=function(t,e){if(t.isEmpty()||e.isEmpty()){if(t.isEmpty()&&e.isEmpty())return Lr.createEmptyResult(Lr.UNION,t,e,t.getFactory());if(t.isEmpty())return e.copy();if(e.isEmpty())return t.copy()}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),or.overlayOp(t,e,Lr.UNION)},t.GeoJSONReader=Ne,t.GeoJSONWriter=Ce,t.OverlayOp=Lr,t.UnionOp=Ar,t.BufferOp=di,Object.defineProperty(t,\"__esModule\",{value:!0})});\n", "'use strict';\n\nvar center = require('@turf/center');\nvar turfJsts = require('turf-jsts');\nvar meta = require('@turf/meta');\nvar d3Geo = require('d3-geo');\nvar helpers = require('@turf/helpers');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar center__default = /*#__PURE__*/_interopDefaultLegacy(center);\n\n/**\n * Calculates a buffer for input features for a given radius. Units supported are miles, kilometers, and degrees.\n *\n * When using a negative radius, the resulting geometry may be invalid if\n * it's too small compared to the radius magnitude. If the input is a\n * FeatureCollection, only valid members will be returned in the output\n * FeatureCollection - i.e., the output collection may have fewer members than\n * the input, or even be empty.\n *\n * @name buffer\n * @param {FeatureCollection|Geometry|Feature<any>} geojson input to be buffered\n * @param {number} radius distance to draw the buffer (negative values are allowed)\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units=\"kilometers\"] any of the options supported by turf units\n * @param {number} [options.steps=8] number of steps\n * @returns {FeatureCollection|Feature<Polygon|MultiPolygon>|undefined} buffered features\n * @example\n * var point = turf.point([-90.548630, 14.616599]);\n * var buffered = turf.buffer(point, 500, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [point, buffered]\n */\nfunction buffer(geojson, radius, options) {\n  // Optional params\n  options = options || {};\n\n  // use user supplied options or default values\n  var units = options.units || \"kilometers\";\n  var steps = options.steps || 8;\n\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n  if (typeof options !== \"object\") throw new Error(\"options must be an object\");\n  if (typeof steps !== \"number\") throw new Error(\"steps must be an number\");\n\n  // Allow negative buffers (\"erosion\") or zero-sized buffers (\"repair geometry\")\n  if (radius === undefined) throw new Error(\"radius is required\");\n  if (steps <= 0) throw new Error(\"steps must be greater than 0\");\n\n  var results = [];\n  switch (geojson.type) {\n    case \"GeometryCollection\":\n      meta.geomEach(geojson, function (geometry) {\n        var buffered = bufferFeature(geometry, radius, units, steps);\n        if (buffered) results.push(buffered);\n      });\n      return helpers.featureCollection(results);\n    case \"FeatureCollection\":\n      meta.featureEach(geojson, function (feature) {\n        var multiBuffered = bufferFeature(feature, radius, units, steps);\n        if (multiBuffered) {\n          meta.featureEach(multiBuffered, function (buffered) {\n            if (buffered) results.push(buffered);\n          });\n        }\n      });\n      return helpers.featureCollection(results);\n  }\n  return bufferFeature(geojson, radius, units, steps);\n}\n\n/**\n * Buffer single Feature/Geometry\n *\n * @private\n * @param {Feature<any>} geojson input to be buffered\n * @param {number} radius distance to draw the buffer\n * @param {string} [units='kilometers'] any of the options supported by turf units\n * @param {number} [steps=8] number of steps\n * @returns {Feature<Polygon|MultiPolygon>} buffered feature\n */\nfunction bufferFeature(geojson, radius, units, steps) {\n  var properties = geojson.properties || {};\n  var geometry = geojson.type === \"Feature\" ? geojson.geometry : geojson;\n\n  // Geometry Types faster than jsts\n  if (geometry.type === \"GeometryCollection\") {\n    var results = [];\n    meta.geomEach(geojson, function (geometry) {\n      var buffered = bufferFeature(geometry, radius, units, steps);\n      if (buffered) results.push(buffered);\n    });\n    return helpers.featureCollection(results);\n  }\n\n  // Project GeoJSON to Azimuthal Equidistant projection (convert to Meters)\n  var projection = defineProjection(geometry);\n  var projected = {\n    type: geometry.type,\n    coordinates: projectCoords(geometry.coordinates, projection),\n  };\n\n  // JSTS buffer operation\n  var reader = new turfJsts.GeoJSONReader();\n  var geom = reader.read(projected);\n  var distance = helpers.radiansToLength(helpers.lengthToRadians(radius, units), \"meters\");\n  var buffered = turfJsts.BufferOp.bufferOp(geom, distance, steps);\n  var writer = new turfJsts.GeoJSONWriter();\n  buffered = writer.write(buffered);\n\n  // Detect if empty geometries\n  if (coordsIsNaN(buffered.coordinates)) return undefined;\n\n  // Unproject coordinates (convert to Degrees)\n  var result = {\n    type: buffered.type,\n    coordinates: unprojectCoords(buffered.coordinates, projection),\n  };\n\n  return helpers.feature(result, properties);\n}\n\n/**\n * Coordinates isNaN\n *\n * @private\n * @param {Array<any>} coords GeoJSON Coordinates\n * @returns {boolean} if NaN exists\n */\nfunction coordsIsNaN(coords) {\n  if (Array.isArray(coords[0])) return coordsIsNaN(coords[0]);\n  return isNaN(coords[0]);\n}\n\n/**\n * Project coordinates to projection\n *\n * @private\n * @param {Array<any>} coords to project\n * @param {GeoProjection} proj D3 Geo Projection\n * @returns {Array<any>} projected coordinates\n */\nfunction projectCoords(coords, proj) {\n  if (typeof coords[0] !== \"object\") return proj(coords);\n  return coords.map(function (coord) {\n    return projectCoords(coord, proj);\n  });\n}\n\n/**\n * Un-Project coordinates to projection\n *\n * @private\n * @param {Array<any>} coords to un-project\n * @param {GeoProjection} proj D3 Geo Projection\n * @returns {Array<any>} un-projected coordinates\n */\nfunction unprojectCoords(coords, proj) {\n  if (typeof coords[0] !== \"object\") return proj.invert(coords);\n  return coords.map(function (coord) {\n    return unprojectCoords(coord, proj);\n  });\n}\n\n/**\n * Define Azimuthal Equidistant projection\n *\n * @private\n * @param {Geometry|Feature<any>} geojson Base projection on center of GeoJSON\n * @returns {GeoProjection} D3 Geo Azimuthal Equidistant Projection\n */\nfunction defineProjection(geojson) {\n  var coords = center__default['default'](geojson).geometry.coordinates;\n  var rotation = [-coords[0], -coords[1]];\n  return d3Geo.geoAzimuthalEquidistant().rotate(rotation).scale(helpers.earthRadius);\n}\n\nmodule.exports = buffer;\nmodule.exports.default = buffer;\n", "import booleanPointInPolygon from '@turf/boolean-point-in-polygon';\nimport turfDifference from '@turf/difference';\nimport turfBuffer from '@turf/buffer';\nimport lineIntersect from '@turf/line-intersect';\nimport { lineString } from '@turf/helpers';\nimport turfBearing from '@turf/bearing';\nimport turfDistance from '@turf/distance';\nimport turfDestination from '@turf/destination';\nimport turfPolygonToLine from '@turf/polygon-to-line';\nimport nearestPointOnLine from '@turf/nearest-point-on-line';\nimport { generatePointsParallelToLinePoints } from '../utils';\nimport { FeatureCollection } from '../geojson-types';\nimport {\n  ClickEvent,\n  PointerMoveEvent,\n  ModeProps,\n  GuideFeatureCollection,\n  TentativeFeature,\n} from '../types';\nimport { GeoJsonEditMode, GeoJsonEditAction } from './geojson-edit-mode';\nimport { ImmutableFeatureCollection } from './immutable-feature-collection';\n\nexport class SplitPolygonMode extends GeoJsonEditMode {\n  calculateMapCoords(clickSequence: any, mapCoords: any, props: ModeProps<FeatureCollection>) {\n    const modeConfig = props.modeConfig;\n    if (!modeConfig || !modeConfig.lock90Degree || !clickSequence.length) {\n      return mapCoords;\n    }\n    if (clickSequence.length === 1) {\n      // if first point is clicked, then find closest polygon point and build ~90deg vector\n      const firstPoint = clickSequence[0];\n      const selectedGeometry = this.getSelectedGeometry(props);\n      // @ts-ignore\n      const feature = turfPolygonToLine(selectedGeometry);\n\n      const lines = feature.type === 'FeatureCollection' ? feature.features : [feature];\n      let minDistance = Number.MAX_SAFE_INTEGER;\n      let closestPoint = null;\n      // If Multipolygon, then we should find nearest polygon line and stick split to it.\n      lines.forEach((line) => {\n        const snapPoint = nearestPointOnLine(line, firstPoint);\n        const distanceFromOrigin = turfDistance(snapPoint, firstPoint);\n        if (minDistance > distanceFromOrigin) {\n          minDistance = distanceFromOrigin;\n          closestPoint = snapPoint;\n        }\n      });\n\n      if (closestPoint) {\n        // closest point is used as 90degree entry to the polygon\n        const lastBearing = turfBearing(firstPoint, closestPoint);\n        const currentDistance = turfDistance(firstPoint, mapCoords, { units: 'meters' });\n        return turfDestination(firstPoint, currentDistance, lastBearing, {\n          units: 'meters',\n        }).geometry.coordinates;\n      }\n      return mapCoords;\n    }\n    // Allow only 90 degree turns\n    const lastPoint = clickSequence[clickSequence.length - 1];\n    const [approximatePoint] = generatePointsParallelToLinePoints(\n      clickSequence[clickSequence.length - 2],\n      lastPoint,\n      mapCoords\n    );\n    // align point with current ground\n    const nearestPt = nearestPointOnLine(lineString([lastPoint, approximatePoint]), mapCoords)\n      .geometry.coordinates;\n    return nearestPt;\n  }\n\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const clickSequence = this.getClickSequence();\n\n    const guides: GuideFeatureCollection = {\n      type: 'FeatureCollection',\n      features: [],\n    };\n\n    if (clickSequence.length === 0 || !props.lastPointerMoveEvent) {\n      // nothing to do yet\n      return guides;\n    }\n\n    const { mapCoords } = props.lastPointerMoveEvent;\n\n    guides.features.push({\n      type: 'Feature',\n      properties: {\n        guideType: 'tentative',\n      },\n      geometry: {\n        type: 'LineString',\n        coordinates: [...clickSequence, this.calculateMapCoords(clickSequence, mapCoords, props)],\n      },\n    });\n\n    return guides;\n  }\n\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>) {\n    const tentativeFeature = this.getTentativeGuide(props);\n\n    const selectedGeometry = this.getSelectedGeometry(props);\n\n    if (!selectedGeometry) {\n      // eslint-disable-next-line no-console,no-undef\n      console.warn('A polygon must be selected for splitting');\n      return;\n    }\n\n    const clickSequence = this.getClickSequence();\n    if (tentativeFeature && tentativeFeature.geometry.type === 'LineString') {\n      clickSequence.push(\n        tentativeFeature.geometry.coordinates[tentativeFeature.geometry.coordinates.length - 1]\n      );\n    } else {\n      this.addClickSequence(event);\n    }\n\n    const pt = {\n      type: 'Point',\n      coordinates: clickSequence[clickSequence.length - 1],\n    };\n    // @ts-ignore\n    const isPointInPolygon = booleanPointInPolygon(pt, selectedGeometry);\n    if (clickSequence.length > 1 && tentativeFeature && !isPointInPolygon) {\n      this.resetClickSequence();\n      // @ts-ignore\n      const isLineInterectingWithPolygon = lineIntersect(tentativeFeature, selectedGeometry);\n      if (isLineInterectingWithPolygon.features.length === 0) {\n        return;\n      }\n\n      const editAction = this.splitPolygon(tentativeFeature, props);\n\n      if (editAction) {\n        props.onEdit(editAction);\n      }\n    }\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    props.onUpdateCursor('cell');\n  }\n\n  splitPolygon(tentativeFeature: TentativeFeature, props: ModeProps<FeatureCollection>) {\n    const selectedGeometry = this.getSelectedGeometry(props);\n    const featureIndex = props.selectedIndexes[0];\n    const modeConfig = props.modeConfig || {};\n\n    // Default gap in between the polygon\n    let { gap = 0.1, units = 'centimeters' } = modeConfig;\n    if (gap === 0) {\n      gap = 0.1;\n      units = 'centimeters';\n    }\n\n    const buffer = turfBuffer(tentativeFeature, gap, { units });\n    // @ts-ignore\n    const updatedGeometry = turfDifference(selectedGeometry, buffer);\n    if (!updatedGeometry) {\n      // eslint-disable-next-line no-console,no-undef\n      console.warn('Canceling edit. Split Polygon erased');\n      return null;\n    }\n\n    const { type, coordinates } = updatedGeometry.geometry;\n    let updatedCoordinates = [];\n    if (type === 'Polygon') {\n      // Update the coordinates as per Multipolygon\n      // @ts-ignore\n      updatedCoordinates = coordinates.map((c) => [c]);\n    } else {\n      // Handle Case when Multipolygon has holes\n      // @ts-ignore\n      updatedCoordinates = coordinates.reduce((agg, prev) => {\n        prev.forEach((p) => {\n          agg.push([p]);\n        });\n        return agg;\n      }, []);\n    }\n\n    // Update the type to Mulitpolygon\n    const updatedData = new ImmutableFeatureCollection(props.data).replaceGeometry(featureIndex, {\n      type: 'MultiPolygon',\n      coordinates: updatedCoordinates,\n    });\n\n    const editAction: GeoJsonEditAction = {\n      updatedData: updatedData.getObject(),\n      editType: 'split',\n      editContext: {\n        featureIndexes: [featureIndex],\n      },\n    };\n\n    return editAction;\n  }\n}\n", "import bearing from '@turf/bearing';\nimport {\n  generatePointsParallelToLinePoints,\n  getPickedEditHandle,\n  getPickedIntermediateEditHandle,\n} from '../utils';\nimport { FeatureCollection } from '../geojson-types';\nimport { ModeProps, StartDraggingEvent, StopDraggingEvent, DraggingEvent } from '../types';\nimport { ModifyMode } from './modify-mode';\nimport { ImmutableFeatureCollection } from './immutable-feature-collection';\n\nexport class ExtrudeMode extends ModifyMode {\n  // this mode is busted =(\n\n  isPointAdded = false;\n\n  handleDragging(event: DraggingEvent, props: ModeProps<FeatureCollection>): void {\n    const editHandle = getPickedEditHandle(event.pointerDownPicks);\n\n    if (editHandle) {\n      const { featureIndex } = editHandle.properties;\n      let { positionIndexes } = editHandle.properties;\n\n      const size = this.coordinatesSize(positionIndexes, featureIndex, props.data);\n      positionIndexes = this.isPointAdded\n        ? this.nextPositionIndexes(positionIndexes, size)\n        : positionIndexes;\n      // p1 and p1 are end points for edge\n      const p1 = this.getPointForPositionIndexes(\n        this.prevPositionIndexes(positionIndexes, size),\n        featureIndex,\n        props.data\n      );\n      const p2 = this.getPointForPositionIndexes(positionIndexes, featureIndex, props.data);\n      if (p1 && p2) {\n        // p3 and p4 are end points for moving (extruding) edge\n        const [p3, p4] = generatePointsParallelToLinePoints(p1, p2, event.mapCoords);\n\n        const updatedData = new ImmutableFeatureCollection(props.data)\n          .replacePosition(featureIndex, this.prevPositionIndexes(positionIndexes, size), p4)\n          .replacePosition(featureIndex, positionIndexes, p3)\n          .getObject();\n\n        props.onEdit({\n          updatedData,\n          editType: 'extruding',\n          editContext: {\n            featureIndexes: [featureIndex],\n            positionIndexes: this.nextPositionIndexes(positionIndexes, size),\n            position: p3,\n          },\n        });\n\n        event.cancelPan();\n      }\n    }\n  }\n\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>) {\n    const selectedFeatureIndexes = props.selectedIndexes;\n\n    const editHandle = getPickedIntermediateEditHandle(event.picks);\n    if (selectedFeatureIndexes.length && editHandle) {\n      const { positionIndexes, featureIndex } = editHandle.properties;\n\n      const size = this.coordinatesSize(positionIndexes, featureIndex, props.data);\n      // p1 and p1 are end points for edge\n      const p1 = this.getPointForPositionIndexes(\n        this.prevPositionIndexes(positionIndexes, size),\n        featureIndex,\n        props.data\n      );\n      const p2 = this.getPointForPositionIndexes(positionIndexes, featureIndex, props.data);\n\n      if (p1 && p2) {\n        let updatedData = new ImmutableFeatureCollection(props.data);\n        if (!this.isOrthogonal(positionIndexes, featureIndex, size, props.data)) {\n          updatedData = updatedData.addPosition(featureIndex, positionIndexes, p2);\n        }\n        if (\n          !this.isOrthogonal(\n            this.prevPositionIndexes(positionIndexes, size),\n            featureIndex,\n            size,\n            props.data\n          )\n        ) {\n          updatedData = updatedData.addPosition(featureIndex, positionIndexes, p1);\n          this.isPointAdded = true;\n        }\n\n        props.onEdit({\n          updatedData: updatedData.getObject(),\n          editType: 'startExtruding',\n          editContext: {\n            featureIndexes: [featureIndex],\n            positionIndexes,\n            position: p1,\n          },\n        });\n      }\n    }\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>) {\n    const selectedFeatureIndexes = props.selectedIndexes;\n    const editHandle = getPickedEditHandle(event.pointerDownPicks);\n    if (selectedFeatureIndexes.length && editHandle) {\n      const { featureIndex } = editHandle.properties;\n      let { positionIndexes } = editHandle.properties;\n\n      const size = this.coordinatesSize(positionIndexes, featureIndex, props.data);\n      positionIndexes = this.isPointAdded\n        ? this.nextPositionIndexes(positionIndexes, size)\n        : positionIndexes;\n      // p1 and p1 are end points for edge\n      const p1 = this.getPointForPositionIndexes(\n        this.prevPositionIndexes(positionIndexes, size),\n        featureIndex,\n        props.data\n      );\n      const p2 = this.getPointForPositionIndexes(positionIndexes, featureIndex, props.data);\n\n      if (p1 && p2) {\n        // p3 and p4 are end points for new moved (extruded) edge\n        const [p3, p4] = generatePointsParallelToLinePoints(p1, p2, event.mapCoords);\n\n        const updatedData = new ImmutableFeatureCollection(props.data)\n          .replacePosition(featureIndex, this.prevPositionIndexes(positionIndexes, size), p4)\n          .replacePosition(featureIndex, positionIndexes, p3)\n          .getObject();\n\n        props.onEdit({\n          updatedData,\n          editType: 'extruded',\n          editContext: {\n            featureIndexes: [featureIndex],\n            positionIndexes,\n            position: p3,\n          },\n        });\n      }\n    }\n    this.isPointAdded = false;\n  }\n\n  coordinatesSize(\n    positionIndexes: number[] | null | undefined,\n    featureIndex: number,\n    { features }: FeatureCollection\n  ) {\n    let size = 0;\n    if (Array.isArray(positionIndexes)) {\n      const feature = features[featureIndex];\n      const coordinates: any = feature.geometry.coordinates;\n      // for Multi polygons, length will be 3\n      if (positionIndexes.length === 3) {\n        const [a, b] = positionIndexes;\n        if (coordinates.length && coordinates[a].length) {\n          size = coordinates[a][b].length;\n        }\n      } else {\n        const [b] = positionIndexes;\n        if (coordinates.length && coordinates[b].length) {\n          size = coordinates[b].length;\n        }\n      }\n    }\n    return size;\n  }\n\n  getBearing(p1: any, p2: any) {\n    const angle = bearing(p1, p2);\n    if (angle < 0) {\n      return Math.floor(360 + angle);\n    }\n    return Math.floor(angle);\n  }\n\n  isOrthogonal(\n    positionIndexes: number[] | null | undefined,\n    featureIndex: number,\n    size: number,\n    features: FeatureCollection\n  ) {\n    if (!Array.isArray(positionIndexes)) {\n      return false;\n    }\n    if (positionIndexes[positionIndexes.length - 1] === size - 1) {\n      positionIndexes[positionIndexes.length - 1] = 0;\n    }\n    const prevPoint = this.getPointForPositionIndexes(\n      this.prevPositionIndexes(positionIndexes, size),\n      featureIndex,\n      features\n    );\n    const nextPoint = this.getPointForPositionIndexes(\n      this.nextPositionIndexes(positionIndexes, size),\n      featureIndex,\n      features\n    );\n    const currentPoint = this.getPointForPositionIndexes(positionIndexes, featureIndex, features);\n    const prevAngle = this.getBearing(currentPoint, prevPoint);\n    const nextAngle = this.getBearing(currentPoint, nextPoint);\n    return [89, 90, 91, 269, 270, 271].includes(Math.abs(prevAngle - nextAngle));\n  }\n\n  nextPositionIndexes(positionIndexes: number[] | null | undefined, size: number): number[] {\n    if (!Array.isArray(positionIndexes)) {\n      return [];\n    }\n    const next = [...positionIndexes];\n    if (next.length) {\n      next[next.length - 1] = next[next.length - 1] === size - 1 ? 0 : next[next.length - 1] + 1;\n    }\n    return next;\n  }\n\n  prevPositionIndexes(positionIndexes: number[] | null | undefined, size: number): number[] {\n    if (!Array.isArray(positionIndexes)) {\n      return [];\n    }\n    const prev = [...positionIndexes];\n    if (prev.length) {\n      prev[prev.length - 1] = prev[prev.length - 1] === 0 ? size - 2 : prev[prev.length - 1] - 1;\n    }\n    return prev;\n  }\n\n  getPointForPositionIndexes(\n    positionIndexes: number[] | null | undefined,\n    featureIndex: number,\n    { features }: FeatureCollection\n  ) {\n    let p1;\n    if (Array.isArray(positionIndexes)) {\n      const feature = features[featureIndex];\n      const coordinates: any = feature.geometry.coordinates;\n      // for Multi polygons, length will be 3\n      if (positionIndexes.length === 3) {\n        const [a, b, c] = positionIndexes;\n        if (coordinates.length && coordinates[a].length) {\n          p1 = coordinates[a][b][c];\n        }\n      } else {\n        const [b, c] = positionIndexes;\n        if (coordinates.length && coordinates[b].length) {\n          p1 = coordinates[b][c];\n        }\n      }\n    }\n    return p1;\n  }\n}\n", "import { ModeProps, PointerMoveEvent, StopDraggingEvent } from '../types';\nimport { Position, FeatureCollection } from '../geojson-types';\nimport { getPickedEditHandle } from '../utils';\nimport { ModifyMode } from './modify-mode';\n\nfunction defaultCalculateElevationChange({\n  pointerDownScreenCoords,\n  screenCoords,\n}: {\n  pointerDownScreenCoords: Position;\n  screenCoords: Position;\n}) {\n  return 10 * (pointerDownScreenCoords[1] - screenCoords[1]);\n}\n\nexport class ElevationMode extends ModifyMode {\n  makeElevatedEvent(\n    event: PointerMoveEvent | StopDraggingEvent,\n    position: Position,\n    props: ModeProps<FeatureCollection>\n  ): Record<string, any> {\n    const {\n      minElevation = 0,\n      maxElevation = 20000,\n      calculateElevationChange = defaultCalculateElevationChange,\n    } = props.modeConfig || {};\n\n    if (!event.pointerDownScreenCoords) {\n      return event;\n    }\n\n    // $FlowFixMe - really, I know it has something at index 2\n    let elevation = position.length === 3 ? position[2] : 0;\n\n    // calculateElevationChange is configurable because (at this time) modes are not aware of the viewport\n    elevation += calculateElevationChange({\n      pointerDownScreenCoords: event.pointerDownScreenCoords,\n      screenCoords: event.screenCoords,\n    });\n    elevation = Math.min(elevation, maxElevation);\n    elevation = Math.max(elevation, minElevation);\n\n    return Object.assign({}, event, {\n      mapCoords: [position[0], position[1], elevation],\n    });\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    const editHandle = getPickedEditHandle(event.pointerDownPicks);\n    const position = editHandle ? editHandle.geometry.coordinates : event.mapCoords;\n    // @ts-ignore\n    super.handlePointerMove(this.makeElevatedEvent(event, position, props), props);\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>) {\n    const editHandle = getPickedEditHandle(event.picks);\n    const position = editHandle ? editHandle.geometry.coordinates : event.mapCoords;\n    // @ts-ignore\n    super.handleStopDragging(this.makeElevatedEvent(event, position, props), props);\n  }\n\n  getCursor(event: PointerMoveEvent): string | null | undefined {\n    let cursor = super.getCursor(event);\n    if (cursor === 'cell') {\n      cursor = 'ns-resize';\n    }\n    return cursor;\n  }\n\n  static calculateElevationChangeWithViewport(\n    viewport: any,\n    {\n      pointerDownScreenCoords,\n      screenCoords,\n    }: {\n      pointerDownScreenCoords: Position;\n      screenCoords: Position;\n    }\n  ): number {\n    // Source: https://gis.stackexchange.com/a/127949/111804\n    const metersPerPixel =\n      (156543.03392 * Math.cos((viewport.latitude * Math.PI) / 180)) / Math.pow(2, viewport.zoom);\n\n    return (metersPerPixel * (pointerDownScreenCoords[1] - screenCoords[1])) / 2;\n  }\n}\n", "import { FeatureCollection } from '../geojson-types';\nimport {\n  ModeProps,\n  ClickEvent,\n  PointerMoveEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  DraggingEvent,\n  GuideFeatureCollection,\n} from '../types';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\n\nexport class CompositeMode extends GeoJsonEditMode {\n  _modes: Array<GeoJsonEditMode>;\n\n  constructor(modes: Array<GeoJsonEditMode>) {\n    super();\n    this._modes = modes;\n  }\n\n  _coalesce<T>(\n    callback: (arg0: GeoJsonEditMode) => T,\n    resultEval: (arg0: T) => boolean | null | undefined = null\n  ): T {\n    let result: T;\n\n    for (let i = 0; i < this._modes.length; i++) {\n      result = callback(this._modes[i]);\n      if (resultEval ? resultEval(result) : result) {\n        break;\n      }\n    }\n\n    return result as any;\n  }\n\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>): void {\n    this._coalesce((handler) => handler.handleClick(event, props));\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>): void {\n    return this._coalesce((handler) => handler.handlePointerMove(event, props));\n  }\n\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>): void {\n    return this._coalesce((handler) => handler.handleStartDragging(event, props));\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>): void {\n    return this._coalesce((handler) => handler.handleStopDragging(event, props));\n  }\n\n  handleDragging(event: DraggingEvent, props: ModeProps<FeatureCollection>): void {\n    return this._coalesce((handler) => handler.handleDragging(event, props));\n  }\n\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    // TODO: Combine the guides *BUT* make sure if none of the results have\n    // changed to return the same object so that \"guides !== this.state.guides\"\n    // in editable-geojson-layer works.\n\n    const allGuides = [];\n    for (const mode of this._modes) {\n      allGuides.push(...mode.getGuides(props).features);\n    }\n\n    return {\n      type: 'FeatureCollection',\n      features: allGuides,\n    };\n  }\n}\n", "import { featureCollection } from '@turf/helpers';\nimport { PointerMoveEvent, ModeProps, StartDraggingEvent } from '../types';\nimport { FeatureCollection } from '../geojson-types';\nimport { TranslateMode } from './translate-mode';\nimport { ScaleMode } from './scale-mode';\nimport { RotateMode } from './rotate-mode';\n\nimport { CompositeMode } from './composite-mode';\n\nexport class TransformMode extends CompositeMode {\n  constructor() {\n    super([new TranslateMode(), new ScaleMode(), new RotateMode()]);\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    let updatedCursor = null;\n    super.handlePointerMove(event, {\n      ...props,\n      onUpdateCursor: (cursor) => {\n        updatedCursor = cursor || updatedCursor;\n      },\n    });\n    props.onUpdateCursor(updatedCursor);\n  }\n\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>) {\n    let scaleMode = null;\n    let translateMode = null;\n    const filteredModes = [];\n\n    // If the user selects a scaling edit handle that overlaps with part of the selected feature,\n    // it is possible for both scale and translate actions to be triggered. This logic prevents\n    // this simultaneous action trigger from happening by putting a higher priority on scaling\n    // since the user needs to be more precise to hover over a scaling edit handle.\n    this._modes.forEach((mode) => {\n      if (mode instanceof TranslateMode) {\n        translateMode = mode;\n      } else {\n        if (mode instanceof ScaleMode) {\n          scaleMode = mode;\n        }\n        filteredModes.push(mode);\n      }\n    });\n\n    if (scaleMode instanceof ScaleMode && !scaleMode.isEditHandleSelected()) {\n      filteredModes.push(translateMode);\n    }\n\n    filteredModes.filter(Boolean).forEach((mode) => mode.handleStartDragging(event, props));\n  }\n\n  getGuides(props: ModeProps<FeatureCollection>) {\n    let compositeGuides = super.getGuides(props);\n    const rotateMode = (this._modes || []).find((mode) => mode instanceof RotateMode);\n\n    if (rotateMode instanceof RotateMode) {\n      const nonEnvelopeGuides = compositeGuides.features.filter((guide) => {\n        const { editHandleType, mode } = (guide.properties as any) || {};\n        // Both scale and rotate modes have the same enveloping box as a guide - only need one\n        const guidesToFilterOut = [mode];\n        // Do not render scaling edit handles if rotating\n        if (rotateMode.getIsRotating()) {\n          guidesToFilterOut.push(editHandleType);\n        }\n        return !guidesToFilterOut.includes('scale');\n      });\n      // @ts-ignore\n      compositeGuides = featureCollection(nonEnvelopeGuides);\n    }\n    return compositeGuides;\n  }\n}\n", "import { ClickEvent, PointerMoveEvent, ModeProps, TentativeFeature } from '../types';\nimport { FeatureCollection } from '../geojson-types';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\n\nexport class DrawPointMode extends GeoJsonEditMode {\n  createTentativeFeature(props: ModeProps<FeatureCollection>): TentativeFeature {\n    const { lastPointerMoveEvent } = props;\n    const lastCoords = lastPointerMoveEvent ? [lastPointerMoveEvent.mapCoords] : [];\n\n    return {\n      type: 'Feature',\n      properties: {\n        guideType: 'tentative',\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: lastCoords[0],\n      },\n    };\n  }\n\n  handleClick({ mapCoords }: ClickEvent, props: ModeProps<FeatureCollection>): void {\n    const geometry = {\n      type: 'Point',\n      coordinates: mapCoords,\n    };\n    // @ts-ignore\n    props.onEdit(this.getAddFeatureAction(geometry, props.data));\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    props.onUpdateCursor('cell');\n    super.handlePointerMove(event, props);\n  }\n}\n", "import { LineString, FeatureCollection } from '../geojson-types';\nimport { ClickEvent, PointerMoveEvent, ModeProps, GuideFeatureCollection } from '../types';\nimport { getPickedEditHandle } from '../utils';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\n\nexport class DrawLineStringMode extends GeoJsonEditMode {\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>) {\n    const { picks } = event;\n    const clickedEditHandle = getPickedEditHandle(picks);\n\n    let positionAdded = false;\n    if (!clickedEditHandle) {\n      // Don't add another point right next to an existing one\n      this.addClickSequence(event);\n      positionAdded = true;\n    }\n    const clickSequence = this.getClickSequence();\n\n    if (\n      clickSequence.length > 1 &&\n      clickedEditHandle &&\n      Array.isArray(clickedEditHandle.properties.positionIndexes) &&\n      clickedEditHandle.properties.positionIndexes[0] === clickSequence.length - 1\n    ) {\n      // They clicked the last point (or double-clicked), so add the LineString\n\n      const lineStringToAdd: LineString = {\n        type: 'LineString',\n        coordinates: [...clickSequence],\n      };\n\n      this.resetClickSequence();\n\n      const editAction = this.getAddFeatureAction(lineStringToAdd, props.data);\n      if (editAction) {\n        props.onEdit(editAction);\n      }\n    } else if (positionAdded) {\n      // new tentative point\n      props.onEdit({\n        // data is the same\n        updatedData: props.data,\n        editType: 'addTentativePosition',\n        editContext: {\n          position: event.mapCoords,\n        },\n      });\n    }\n  }\n  handleKeyUp(event: KeyboardEvent, props: ModeProps<FeatureCollection>) {\n    const { key } = event;\n    if (key === 'Enter') {\n      const clickSequence = this.getClickSequence();\n      if (clickSequence.length > 1) {\n        const lineStringToAdd: LineString = {\n          type: 'LineString',\n          coordinates: [...clickSequence],\n        };\n        this.resetClickSequence();\n        const editAction = this.getAddFeatureAction(lineStringToAdd, props.data);\n        if (editAction) {\n          props.onEdit(editAction);\n        }\n      }\n    }\n  }\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const { lastPointerMoveEvent } = props;\n    const clickSequence = this.getClickSequence();\n\n    const lastCoords = lastPointerMoveEvent ? [lastPointerMoveEvent.mapCoords] : [];\n\n    const guides = {\n      type: 'FeatureCollection',\n      features: [],\n    };\n\n    let tentativeFeature;\n    if (clickSequence.length > 0) {\n      tentativeFeature = {\n        type: 'Feature',\n        properties: {\n          guideType: 'tentative',\n        },\n        geometry: {\n          type: 'LineString',\n          coordinates: [...clickSequence, ...lastCoords],\n        },\n      };\n    }\n\n    if (tentativeFeature) {\n      guides.features.push(tentativeFeature);\n    }\n\n    const editHandles = clickSequence.map((clickedCoord, index) => ({\n      type: 'Feature',\n      properties: {\n        guideType: 'editHandle',\n        editHandleType: 'existing',\n        featureIndex: -1,\n        positionIndexes: [index],\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: clickedCoord,\n      },\n    }));\n\n    guides.features.push(...editHandles);\n    // @ts-ignore\n    return guides;\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    props.onUpdateCursor('cell');\n  }\n}\n", "import lineIntersect from '@turf/line-intersect';\nimport { lineString as turfLineString } from '@turf/helpers';\nimport {\n  ClickEvent,\n  PointerMoveEvent,\n  ModeProps,\n  GuideFeatureCollection,\n  TentativeFeature,\n} from '../types';\nimport { Polygon, FeatureCollection } from '../geojson-types';\nimport { getPickedEditHandle } from '../utils';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\n\nexport class DrawPolygonMode extends GeoJsonEditMode {\n  createTentativeFeature(props: ModeProps<FeatureCollection>): TentativeFeature {\n    const { lastPointerMoveEvent } = props;\n    const clickSequence = this.getClickSequence();\n\n    const lastCoords = lastPointerMoveEvent ? [lastPointerMoveEvent.mapCoords] : [];\n\n    let tentativeFeature;\n    if (clickSequence.length === 1 || clickSequence.length === 2) {\n      tentativeFeature = {\n        type: 'Feature',\n        properties: {\n          guideType: 'tentative',\n        },\n        geometry: {\n          type: 'LineString',\n          coordinates: [...clickSequence, ...lastCoords],\n        },\n      };\n    } else if (clickSequence.length > 2) {\n      tentativeFeature = {\n        type: 'Feature',\n        properties: {\n          guideType: 'tentative',\n        },\n        geometry: {\n          type: 'Polygon',\n          coordinates: [[...clickSequence, ...lastCoords, clickSequence[0]]],\n        },\n      };\n    }\n\n    return tentativeFeature;\n  }\n\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const clickSequence = this.getClickSequence();\n\n    const guides = {\n      type: 'FeatureCollection',\n      features: [],\n    };\n\n    const tentativeFeature = this.createTentativeFeature(props);\n    if (tentativeFeature) {\n      guides.features.push(tentativeFeature);\n    }\n\n    const editHandles = clickSequence.map((clickedCoord, index) => ({\n      type: 'Feature',\n      properties: {\n        guideType: 'editHandle',\n        editHandleType: 'existing',\n        featureIndex: -1,\n        positionIndexes: [index],\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: clickedCoord,\n      },\n    }));\n\n    guides.features.push(...editHandles);\n    // @ts-ignore\n    return guides;\n  }\n\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>) {\n    const { picks } = event;\n    const clickedEditHandle = getPickedEditHandle(picks);\n    const clickSequence = this.getClickSequence();\n\n    let overlappingLines = false;\n    if (clickSequence.length > 2 && props.modeConfig && props.modeConfig.preventOverlappingLines) {\n      const currentLine = turfLineString([\n        clickSequence[clickSequence.length - 1],\n        event.mapCoords,\n      ]);\n      const otherLines = turfLineString([...clickSequence.slice(0, clickSequence.length - 1)]);\n      const intersectingPoints = lineIntersect(currentLine, otherLines);\n      if (intersectingPoints.features.length > 0) {\n        overlappingLines = true;\n      }\n    }\n\n    let positionAdded = false;\n    if (!clickedEditHandle && !overlappingLines) {\n      // Don't add another point right next to an existing one\n      this.addClickSequence(event);\n      positionAdded = true;\n    }\n\n    if (\n      clickSequence.length > 2 &&\n      clickedEditHandle &&\n      Array.isArray(clickedEditHandle.properties.positionIndexes) &&\n      (clickedEditHandle.properties.positionIndexes[0] === 0 ||\n        clickedEditHandle.properties.positionIndexes[0] === clickSequence.length - 1)\n    ) {\n      // They clicked the first or last point (or double-clicked), so complete the polygon\n\n      // Remove the hovered position\n      const polygonToAdd: Polygon = {\n        type: 'Polygon',\n        coordinates: [[...clickSequence, clickSequence[0]]],\n      };\n\n      this.resetClickSequence();\n\n      const editAction = this.getAddFeatureOrBooleanPolygonAction(polygonToAdd, props);\n      if (editAction) {\n        props.onEdit(editAction);\n      }\n    } else if (positionAdded) {\n      // new tentative point\n      props.onEdit({\n        // data is the same\n        updatedData: props.data,\n        editType: 'addTentativePosition',\n        editContext: {\n          position: event.mapCoords,\n        },\n      });\n    }\n  }\n\n  handleKeyUp(event: KeyboardEvent, props: ModeProps<FeatureCollection>) {\n    if (event.key === 'Enter') {\n      const clickSequence = this.getClickSequence();\n      if (clickSequence.length > 2) {\n        const polygonToAdd: Polygon = {\n          type: 'Polygon',\n          coordinates: [[...clickSequence, clickSequence[0]]],\n        };\n        this.resetClickSequence();\n\n        const editAction = this.getAddFeatureOrBooleanPolygonAction(polygonToAdd, props);\n        if (editAction) {\n          props.onEdit(editAction);\n        }\n      }\n    }\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    props.onUpdateCursor('cell');\n    super.handlePointerMove(event, props);\n  }\n}\n", "import {\n  ClickEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  PointerMoveEvent,\n  ModeProps,\n  GuideFeatureCollection,\n  TentativeFeature,\n} from '../types';\nimport { Polygon, FeatureCollection, FeatureOf, Position } from '../geojson-types';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\n\nexport class TwoClickPolygonMode extends GeoJsonEditMode {\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>) {\n    if (props.modeConfig && props.modeConfig.dragToDraw) {\n      // handled in drag handlers\n      return;\n    }\n\n    this.addClickSequence(event);\n\n    this.checkAndFinishPolygon(props);\n  }\n\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>): void {\n    if (!props.modeConfig || !props.modeConfig.dragToDraw) {\n      // handled in click handlers\n      return;\n    }\n\n    this.addClickSequence(event);\n    event.cancelPan();\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>): void {\n    if (!props.modeConfig || !props.modeConfig.dragToDraw) {\n      // handled in click handlers\n      return;\n    }\n    this.addClickSequence(event);\n\n    this.checkAndFinishPolygon(props);\n  }\n\n  checkAndFinishPolygon(props: ModeProps<FeatureCollection>) {\n    const clickSequence = this.getClickSequence();\n    const tentativeFeature = this.getTentativeGuide(props);\n\n    if (\n      clickSequence.length > 1 &&\n      tentativeFeature &&\n      tentativeFeature.geometry.type === 'Polygon'\n    ) {\n      const feature: FeatureOf<Polygon> = {\n        type: 'Feature',\n        properties: {\n          shape: tentativeFeature.properties.shape,\n        },\n        geometry: {\n          type: 'Polygon',\n          coordinates: tentativeFeature.geometry.coordinates,\n        },\n      };\n      const editAction = this.getAddFeatureOrBooleanPolygonAction(feature, props);\n\n      this.resetClickSequence();\n\n      if (editAction) {\n        props.onEdit(editAction);\n      }\n    }\n  }\n\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const { lastPointerMoveEvent, modeConfig } = props;\n    const clickSequence = this.getClickSequence();\n\n    const guides: GuideFeatureCollection = {\n      type: 'FeatureCollection',\n      features: [],\n    };\n\n    if (clickSequence.length === 0) {\n      // nothing to do yet\n      return guides;\n    }\n\n    const corner1 = clickSequence[0];\n    const corner2 = lastPointerMoveEvent.mapCoords;\n\n    const polygon = this.getTwoClickPolygon(corner1, corner2, modeConfig);\n    if (polygon) {\n      guides.features.push({\n        type: 'Feature',\n        properties: {\n          shape: polygon.properties && polygon.properties.shape,\n          guideType: 'tentative',\n        },\n        geometry: polygon.geometry,\n      });\n    }\n\n    return guides;\n  }\n\n  getTwoClickPolygon(\n    coord1: Position,\n    coord2: Position,\n    modeConfig: any\n  ): FeatureOf<Polygon> | null | undefined {\n    return null;\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    props.onUpdateCursor('cell');\n    super.handlePointerMove(event, props);\n  }\n\n  createTentativeFeature(props: ModeProps<FeatureCollection>): TentativeFeature {\n    const { lastPointerMoveEvent } = props;\n    const clickSequence = this.getClickSequence();\n\n    const lastCoords = lastPointerMoveEvent ? [lastPointerMoveEvent.mapCoords] : [];\n\n    let tentativeFeature;\n    if (clickSequence.length === 1) {\n      tentativeFeature = this.getTwoClickPolygon(clickSequence[0], lastCoords[0], props.modeConfig);\n    }\n\n    return tentativeFeature;\n  }\n}\n", "import bboxPolygon from '@turf/bbox-polygon';\nimport { Position, Polygon, FeatureOf } from '../geojson-types';\nimport { TwoClickPolygonMode } from './two-click-polygon-mode';\n\nexport class DrawRectangleMode extends TwoClickPolygonMode {\n  getTwoClickPolygon(coord1: Position, coord2: Position, modeConfig: any): FeatureOf<Polygon> {\n    const rectangle = bboxPolygon([coord1[0], coord1[1], coord2[0], coord2[1]]);\n    rectangle.properties = rectangle.properties || {};\n    rectangle.properties.shape = 'Rectangle';\n\n    // @ts-ignore\n    return rectangle;\n  }\n}\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bearing_1 = __importDefault(require(\"@turf/bearing\"));\nvar destination_1 = __importDefault(require(\"@turf/destination\"));\nvar distance_1 = __importDefault(require(\"@turf/distance\"));\nvar helpers_1 = require(\"@turf/helpers\");\nvar invariant_1 = require(\"@turf/invariant\");\n/**\n * Takes a {@link LineString} and returns a {@link Point} at a specified distance along the line.\n *\n * @name along\n * @param {Feature<LineString>} line input line\n * @param {number} distance distance along the line\n * @param {Object} [options] Optional parameters\n * @param {string} [options.units=\"kilometers\"] can be degrees, radians, miles, or kilometers\n * @returns {Feature<Point>} Point `distance` `units` along the line\n * @example\n * var line = turf.lineString([[-83, 30], [-84, 36], [-78, 41]]);\n * var options = {units: 'miles'};\n *\n * var along = turf.along(line, 200, options);\n *\n * //addToMap\n * var addToMap = [along, line]\n */\nfunction along(line, distance, options) {\n    if (options === void 0) { options = {}; }\n    // Get Coords\n    var geom = invariant_1.getGeom(line);\n    var coords = geom.coordinates;\n    var travelled = 0;\n    for (var i = 0; i < coords.length; i++) {\n        if (distance >= travelled && i === coords.length - 1) {\n            break;\n        }\n        else if (travelled >= distance) {\n            var overshot = distance - travelled;\n            if (!overshot) {\n                return helpers_1.point(coords[i]);\n            }\n            else {\n                var direction = bearing_1.default(coords[i], coords[i - 1]) - 180;\n                var interpolated = destination_1.default(coords[i], overshot, direction, options);\n                return interpolated;\n            }\n        }\n        else {\n            travelled += distance_1.default(coords[i], coords[i + 1], options);\n        }\n    }\n    return helpers_1.point(coords[coords.length - 1]);\n}\nexports.default = along;\n", "import bboxPolygon from '@turf/bbox-polygon';\nimport turfDistance from '@turf/distance';\nimport turfAlong from '@turf/along';\nimport { point, lineString as turfLineString } from '@turf/helpers';\nimport { Position, Polygon, FeatureOf } from '../geojson-types';\nimport { TwoClickPolygonMode } from './two-click-polygon-mode';\n\nexport class DrawSquareMode extends TwoClickPolygonMode {\n  getTwoClickPolygon(coord1: Position, coord2: Position, modeConfig: any): FeatureOf<Polygon> {\n    // get the coordinates of the other two rectangle vertices\n    const coord3 = [coord2[0], coord1[1]];\n    const coord4 = [coord1[0], coord2[1]];\n\n    // determine the shortest distance to the origin, which will be the length of each square side\n    const distance1 = turfDistance(point(coord3), point(coord1));\n    const distance2 = turfDistance(point(coord4), point(coord1));\n    const shortestDistance = distance1 <= distance2 ? distance1 : distance2;\n\n    // determine which coordinate pair of the two is closest to the origin\n    const closestPoint = distance1 <= distance2 ? coord3 : coord4;\n\n    // create a linestring which will used to locate the second square vertex\n    const line = turfLineString([closestPoint, coord2]);\n\n    // get the coordinates of the second square vertex\n    const newPoint = turfAlong(line, shortestDistance);\n    const corner = newPoint.geometry.coordinates;\n\n    const square = bboxPolygon([coord1[0], coord1[1], corner[0], corner[1]]);\n    square.properties = square.properties || {};\n    square.properties.shape = 'Square';\n\n    // @ts-ignore\n    return square;\n  }\n}\n", "import bboxPolygon from '@turf/bbox-polygon';\nimport { Position, Polygon, FeatureOf } from '../geojson-types';\nimport { TwoClickPolygonMode } from './two-click-polygon-mode';\n\nexport class DrawRectangleFromCenterMode extends TwoClickPolygonMode {\n  getTwoClickPolygon(coord1: Position, coord2: Position, modeConfig: any): FeatureOf<Polygon> {\n    const longitude =\n      coord1[0] > coord2[0]\n        ? coord1[0] + Math.abs(coord1[0] - coord2[0])\n        : coord1[0] - Math.abs(coord1[0] - coord2[0]);\n    const latitude =\n      coord1[1] > coord2[1]\n        ? coord1[1] + Math.abs(coord1[1] - coord2[1])\n        : coord1[1] - Math.abs(coord1[1] - coord2[1]);\n\n    const rectangle = bboxPolygon([longitude, latitude, coord2[0], coord2[1]]);\n    rectangle.properties = rectangle.properties || {};\n    rectangle.properties.shape = 'Rectangle';\n\n    // @ts-ignore\n    return rectangle;\n  }\n}\n", "import bboxPolygon from '@turf/bbox-polygon';\nimport turfDistance from '@turf/distance';\nimport turfAlong from '@turf/along';\nimport { point, lineString as turfLineString } from '@turf/helpers';\nimport { Position, Polygon, FeatureOf } from '../geojson-types';\nimport { TwoClickPolygonMode } from './two-click-polygon-mode';\n\nexport class DrawSquareFromCenterMode extends TwoClickPolygonMode {\n  getTwoClickPolygon(coord1: Position, coord2: Position, modeConfig: any): FeatureOf<Polygon> {\n    // get the coordinates of the other two rectangle vertices\n    const coord3 = [coord2[0], coord1[1]];\n    const coord4 = [coord1[0], coord2[1]];\n\n    // determine the shortest distance to the origin, which will be the length of each square side\n    const distance1 = turfDistance(point(coord3), point(coord1));\n    const distance2 = turfDistance(point(coord4), point(coord1));\n    const shortestDistance = distance1 <= distance2 ? distance1 : distance2;\n\n    // determine which coordinate pair of the two is closest to the origin\n    const closestPoint = distance1 <= distance2 ? coord3 : coord4;\n\n    // create a linestring which will used to locate the second square vertex\n    const line = turfLineString([closestPoint, coord2]);\n\n    // get the coordinates of the second square vertex\n    const newPoint = turfAlong(line, shortestDistance);\n    const corner = newPoint.geometry.coordinates;\n\n    // determine the longitude and latitude values of the opposite corner\n    const longitude =\n      coord1[0] > corner[0]\n        ? coord1[0] + Math.abs(coord1[0] - corner[0])\n        : coord1[0] - Math.abs(coord1[0] - corner[0]);\n    const latitude =\n      coord1[1] > corner[1]\n        ? coord1[1] + Math.abs(coord1[1] - corner[1])\n        : coord1[1] - Math.abs(coord1[1] - corner[1]);\n\n    const square = bboxPolygon([longitude, latitude, corner[0], corner[1]]);\n    square.properties = square.properties || {};\n    square.properties.shape = 'Square';\n\n    // @ts-ignore\n    return square;\n  }\n}\n", "import circle from '@turf/circle';\nimport distance from '@turf/distance';\nimport { Position, Polygon, FeatureOf } from '../geojson-types';\nimport { getIntermediatePosition } from './geojson-edit-mode';\nimport { TwoClickPolygonMode } from './two-click-polygon-mode';\n\nexport class DrawCircleByDiameterMode extends TwoClickPolygonMode {\n  getTwoClickPolygon(coord1: Position, coord2: Position, modeConfig: any): FeatureOf<Polygon> {\n    // Default turf value for circle is 64\n    const { steps = 64 } = modeConfig || {};\n    const options = { steps };\n\n    if (steps < 4) {\n      console.warn(`Minimum steps to draw a circle is 4 `); // eslint-disable-line no-console,no-undef\n      options.steps = 4;\n    }\n\n    const centerCoordinates = getIntermediatePosition(coord1, coord2);\n    const radius = Math.max(distance(coord1, centerCoordinates), 0.001);\n\n    const geometry = circle(centerCoordinates, radius, options);\n\n    geometry.properties = geometry.properties || {};\n    geometry.properties.shape = 'Circle';\n\n    return geometry;\n  }\n}\n", "import circle from '@turf/circle';\nimport distance from '@turf/distance';\nimport { Position, Polygon, FeatureOf } from '../geojson-types';\nimport { TwoClickPolygonMode } from './two-click-polygon-mode';\n\nexport class DrawCircleFromCenterMode extends TwoClickPolygonMode {\n  getTwoClickPolygon(coord1: Position, coord2: Position, modeConfig: any): FeatureOf<Polygon> {\n    // Default turf value for circle is 64\n    const { steps = 64 } = modeConfig || {};\n    const options = { steps };\n\n    if (steps < 4) {\n      console.warn(`Minimum steps to draw a circle is 4 `); // eslint-disable-line no-console,no-undef\n      options.steps = 4;\n    }\n\n    const radius = Math.max(distance(coord1, coord2), 0.001);\n    const geometry = circle(coord1, radius, options);\n\n    geometry.properties = geometry.properties || {};\n    geometry.properties.shape = 'Circle';\n\n    return geometry;\n  }\n}\n", "'use strict';\n\nvar helpers = require('@turf/helpers');\nvar rhumbDestination = require('@turf/rhumb-destination');\nvar transformRotate = require('@turf/transform-rotate');\nvar invariant = require('@turf/invariant');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar rhumbDestination__default = /*#__PURE__*/_interopDefaultLegacy(rhumbDestination);\nvar transformRotate__default = /*#__PURE__*/_interopDefaultLegacy(transformRotate);\n\n/**\n * Takes a {@link Point} and calculates the ellipse polygon given two semi-axes expressed in variable units and steps for precision.\n *\n * @param {Coord} center center point\n * @param {number} xSemiAxis semi (major) axis of the ellipse along the x-axis\n * @param {number} ySemiAxis semi (minor) axis of the ellipse along the y-axis\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.angle=0] angle of rotation in decimal degrees, positive clockwise\n * @param {Coord} [options.pivot='origin'] point around which the rotation will be performed\n * @param {number} [options.steps=64] number of steps\n * @param {string} [options.units='kilometers'] unit of measurement for axes\n * @param {Object} [options.properties={}] properties\n * @returns {Feature<Polygon>} ellipse polygon\n * @example\n * var center = [-75, 40];\n * var xSemiAxis = 5;\n * var ySemiAxis = 2;\n * var ellipse = turf.ellipse(center, xSemiAxis, ySemiAxis);\n *\n * //addToMap\n * var addToMap = [turf.point(center), ellipse]\n */\nfunction ellipse(center, xSemiAxis, ySemiAxis, options) {\n  // Optional params\n  options = options || {};\n  var steps = options.steps || 64;\n  var units = options.units || \"kilometers\";\n  var angle = options.angle || 0;\n  var pivot = options.pivot || center;\n  var properties = options.properties || center.properties || {};\n\n  // validation\n  if (!center) throw new Error(\"center is required\");\n  if (!xSemiAxis) throw new Error(\"xSemiAxis is required\");\n  if (!ySemiAxis) throw new Error(\"ySemiAxis is required\");\n  if (!helpers.isObject(options)) throw new Error(\"options must be an object\");\n  if (!helpers.isNumber(steps)) throw new Error(\"steps must be a number\");\n  if (!helpers.isNumber(angle)) throw new Error(\"angle must be a number\");\n\n  var centerCoords = invariant.getCoord(center);\n  if (units === \"degrees\") {\n    var angleRad = helpers.degreesToRadians(angle);\n  } else {\n    xSemiAxis = rhumbDestination__default['default'](center, xSemiAxis, 90, { units: units });\n    ySemiAxis = rhumbDestination__default['default'](center, ySemiAxis, 0, { units: units });\n    xSemiAxis = invariant.getCoord(xSemiAxis)[0] - centerCoords[0];\n    ySemiAxis = invariant.getCoord(ySemiAxis)[1] - centerCoords[1];\n  }\n\n  var coordinates = [];\n  for (var i = 0; i < steps; i += 1) {\n    var stepAngle = (i * -360) / steps;\n    var x =\n      (xSemiAxis * ySemiAxis) /\n      Math.sqrt(\n        Math.pow(ySemiAxis, 2) +\n          Math.pow(xSemiAxis, 2) * Math.pow(getTanDeg(stepAngle), 2)\n      );\n    var y =\n      (xSemiAxis * ySemiAxis) /\n      Math.sqrt(\n        Math.pow(xSemiAxis, 2) +\n          Math.pow(ySemiAxis, 2) / Math.pow(getTanDeg(stepAngle), 2)\n      );\n\n    if (stepAngle < -90 && stepAngle >= -270) x = -x;\n    if (stepAngle < -180 && stepAngle >= -360) y = -y;\n    if (units === \"degrees\") {\n      var newx = x * Math.cos(angleRad) + y * Math.sin(angleRad);\n      var newy = y * Math.cos(angleRad) - x * Math.sin(angleRad);\n      x = newx;\n      y = newy;\n    }\n\n    coordinates.push([x + centerCoords[0], y + centerCoords[1]]);\n  }\n  coordinates.push(coordinates[0]);\n  if (units === \"degrees\") {\n    return helpers.polygon([coordinates], properties);\n  } else {\n    return transformRotate__default['default'](helpers.polygon([coordinates], properties), angle, {\n      pivot: pivot,\n    });\n  }\n}\n\n/**\n * Get Tan Degrees\n *\n * @private\n * @param {number} deg Degrees\n * @returns {number} Tan Degrees\n */\nfunction getTanDeg(deg) {\n  var rad = (deg * Math.PI) / 180;\n  return Math.tan(rad);\n}\n\nmodule.exports = ellipse;\nmodule.exports.default = ellipse;\n", "import bboxPolygon from '@turf/bbox-polygon';\nimport distance from '@turf/distance';\nimport ellipse from '@turf/ellipse';\nimport { point } from '@turf/helpers';\nimport { Position, Polygon, FeatureOf } from '../geojson-types';\nimport { getIntermediatePosition } from './geojson-edit-mode';\nimport { TwoClickPolygonMode } from './two-click-polygon-mode';\n\nexport class DrawEllipseByBoundingBoxMode extends TwoClickPolygonMode {\n  getTwoClickPolygon(coord1: Position, coord2: Position, modeConfig: any): FeatureOf<Polygon> {\n    const minX = Math.min(coord1[0], coord2[0]);\n    const minY = Math.min(coord1[1], coord2[1]);\n    const maxX = Math.max(coord1[0], coord2[0]);\n    const maxY = Math.max(coord1[1], coord2[1]);\n\n    const polygonPoints = bboxPolygon([minX, minY, maxX, maxY]).geometry.coordinates[0];\n    const centerCoordinates = getIntermediatePosition(coord1, coord2);\n\n    const xSemiAxis = Math.max(distance(point(polygonPoints[0]), point(polygonPoints[1])), 0.001);\n    const ySemiAxis = Math.max(distance(point(polygonPoints[0]), point(polygonPoints[3])), 0.001);\n\n    // @ts-ignore\n    return ellipse(centerCoordinates, xSemiAxis, ySemiAxis);\n  }\n}\n", "import {\n  ClickEvent,\n  PointerMoveEvent,\n  ModeProps,\n  GuideFeatureCollection,\n  TentativeFeature,\n} from '../types';\nimport { Position, Polygon, FeatureOf, FeatureCollection } from '../geojson-types';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\n\nexport class ThreeClickPolygonMode extends GeoJsonEditMode {\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>) {\n    this.addClickSequence(event);\n    const clickSequence = this.getClickSequence();\n    const tentativeFeature = this.getTentativeGuide(props);\n\n    if (\n      clickSequence.length > 2 &&\n      tentativeFeature &&\n      tentativeFeature.geometry.type === 'Polygon'\n    ) {\n      const editAction = this.getAddFeatureOrBooleanPolygonAction(tentativeFeature.geometry, props);\n      this.resetClickSequence();\n\n      if (editAction) {\n        props.onEdit(editAction);\n      }\n    }\n  }\n\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const { lastPointerMoveEvent, modeConfig } = props;\n    const clickSequence = this.getClickSequence();\n\n    const guides: GuideFeatureCollection = {\n      type: 'FeatureCollection',\n      features: [],\n    };\n\n    if (clickSequence.length === 0) {\n      // nothing to do yet\n      return guides;\n    }\n\n    const hoveredCoord = lastPointerMoveEvent.mapCoords;\n\n    if (clickSequence.length === 1) {\n      guides.features.push({\n        type: 'Feature',\n        properties: {\n          guideType: 'tentative',\n        },\n        geometry: {\n          type: 'LineString',\n          coordinates: [clickSequence[0], hoveredCoord],\n        },\n      });\n    } else {\n      const polygon = this.getThreeClickPolygon(\n        clickSequence[0],\n        clickSequence[1],\n        hoveredCoord,\n        modeConfig\n      );\n      if (polygon) {\n        guides.features.push({\n          type: 'Feature',\n          properties: {\n            guideType: 'tentative',\n          },\n          geometry: polygon.geometry,\n        });\n      }\n    }\n\n    return guides;\n  }\n\n  getThreeClickPolygon(\n    coord1: Position,\n    coord2: Position,\n    coord3: Position,\n    modeConfig: any\n  ): FeatureOf<Polygon> | null | undefined {\n    return null;\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    props.onUpdateCursor('cell');\n    super.handlePointerMove(event, props);\n  }\n\n  createTentativeFeature(props: ModeProps<FeatureCollection>): TentativeFeature {\n    const { lastPointerMoveEvent } = props;\n    const clickSequence = this.getClickSequence();\n\n    const lastCoords = lastPointerMoveEvent ? [lastPointerMoveEvent.mapCoords] : [];\n\n    let tentativeFeature;\n    if (clickSequence.length === 2) {\n      tentativeFeature = this.getThreeClickPolygon(\n        clickSequence[0],\n        clickSequence[1],\n        lastCoords[0],\n        props.modeConfig\n      );\n    }\n\n    return tentativeFeature;\n  }\n}\n", "import distance from '@turf/distance';\nimport ellipse from '@turf/ellipse';\nimport bearing from '@turf/bearing';\nimport { point } from '@turf/helpers';\nimport { Position, Polygon, FeatureOf } from '../geojson-types';\nimport { getIntermediatePosition } from './geojson-edit-mode';\nimport { ThreeClickPolygonMode } from './three-click-polygon-mode';\n\nexport class DrawEllipseUsingThreePointsMode extends ThreeClickPolygonMode {\n  getThreeClickPolygon(\n    coord1: Position,\n    coord2: Position,\n    coord3: Position,\n    modeConfig: any\n  ): FeatureOf<Polygon> | null | undefined {\n    const centerCoordinates = getIntermediatePosition(coord1, coord2);\n    const xSemiAxis = Math.max(distance(centerCoordinates, point(coord3)), 0.001);\n    const ySemiAxis = Math.max(distance(coord1, coord2), 0.001) / 2;\n    const options = { angle: bearing(coord1, coord2) };\n    // @ts-ignore\n    return ellipse(centerCoordinates, xSemiAxis, ySemiAxis, options);\n  }\n}\n", "import { generatePointsParallelToLinePoints } from '../utils';\nimport { Position, Polygon, FeatureOf } from '../geojson-types';\nimport { ThreeClickPolygonMode } from './three-click-polygon-mode';\n\nexport class DrawRectangleUsingThreePointsMode extends ThreeClickPolygonMode {\n  getThreeClickPolygon(\n    coord1: Position,\n    coord2: Position,\n    coord3: Position,\n    modeConfig: any\n  ): FeatureOf<Polygon> | null | undefined {\n    const [p3, p4] = generatePointsParallelToLinePoints(coord1, coord2, coord3);\n\n    return {\n      type: 'Feature',\n      properties: {\n        shape: 'Rectangle',\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            // Draw a polygon containing all the points of the LineString,\n            // then the points orthogonal to the lineString,\n            // then back to the starting position\n            coord1,\n            coord2,\n            p3,\n            p4,\n            coord1,\n          ],\n        ],\n      },\n    };\n  }\n}\n", "import destination from '@turf/destination';\nimport bearing from '@turf/bearing';\nimport lineIntersect from '@turf/line-intersect';\nimport turfDistance from '@turf/distance';\nimport { point, lineString as turfLineString } from '@turf/helpers';\nimport {\n  generatePointsParallelToLinePoints,\n  getPickedEditHandle,\n  getEditHandlesForGeometry,\n} from '../utils';\nimport {\n  ClickEvent,\n  PointerMoveEvent,\n  ModeProps,\n  GuideFeatureCollection,\n  TentativeFeature,\n} from '../types';\nimport { Polygon, LineString, Position, FeatureCollection } from '../geojson-types';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\n\nexport class Draw90DegreePolygonMode extends GeoJsonEditMode {\n  createTentativeFeature(props: ModeProps<FeatureCollection>): TentativeFeature {\n    const clickSequence = this.getClickSequence();\n\n    const { mapCoords } = props.lastPointerMoveEvent;\n\n    let p3;\n    if (clickSequence.length === 1) {\n      p3 = mapCoords;\n    } else {\n      const p1 = clickSequence[clickSequence.length - 2];\n      const p2 = clickSequence[clickSequence.length - 1];\n      [p3] = generatePointsParallelToLinePoints(p1, p2, mapCoords);\n    }\n\n    let tentativeFeature;\n\n    if (clickSequence.length < 3) {\n      // Draw a LineString connecting all the clicked points with the hovered point\n      tentativeFeature = {\n        type: 'Feature',\n        properties: {\n          guideType: 'tentative',\n        },\n        geometry: {\n          type: 'LineString',\n          coordinates: [...clickSequence, p3],\n        },\n      };\n    } else {\n      // Draw a Polygon connecting all the clicked points with the hovered point\n      tentativeFeature = {\n        type: 'Feature',\n        properties: {\n          guideType: 'tentative',\n        },\n        geometry: {\n          type: 'Polygon',\n          coordinates: [[...clickSequence, p3, clickSequence[0]]],\n        },\n      };\n    }\n\n    return tentativeFeature;\n  }\n\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const guides: GuideFeatureCollection = {\n      type: 'FeatureCollection',\n      features: [],\n    };\n\n    const clickSequence = this.getClickSequence();\n\n    if (clickSequence.length === 0 || !props.lastPointerMoveEvent) {\n      return guides;\n    }\n    const tentativeFeature = this.createTentativeFeature(props);\n\n    guides.features.push(tentativeFeature);\n\n    guides.features = guides.features.concat(\n      getEditHandlesForGeometry(tentativeFeature.geometry, -1)\n    );\n\n    // Slice off the handles that are are next to the pointer\n    guides.features = guides.features.slice(0, -1);\n\n    return guides;\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    props.onUpdateCursor('cell');\n    super.handlePointerMove(event, props);\n  }\n\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>) {\n    const { picks } = event;\n    const tentativeFeature = this.getTentativeGuide(props);\n    this.addClickSequence(event);\n    const clickSequence = this.getClickSequence();\n\n    if (!tentativeFeature) {\n      // nothing else to do\n      return;\n    }\n\n    if (clickSequence.length === 3 && tentativeFeature.geometry.type === 'LineString') {\n      const lineString: LineString = tentativeFeature.geometry;\n\n      // Tweak the clicked position to be the snapped 90 degree point along the polygon\n      clickSequence[clickSequence.length - 1] =\n        lineString.coordinates[lineString.coordinates.length - 1];\n    } else if (clickSequence.length > 3 && tentativeFeature.geometry.type === 'Polygon') {\n      const polygon: Polygon = tentativeFeature.geometry;\n\n      // Tweak the clicked position to be the snapped 90 degree point along the polygon\n      clickSequence[clickSequence.length - 1] =\n        polygon.coordinates[0][polygon.coordinates[0].length - 2];\n\n      const clickedEditHandle = getPickedEditHandle(picks);\n\n      if (\n        clickedEditHandle &&\n        Array.isArray(clickedEditHandle.properties.positionIndexes) &&\n        (clickedEditHandle.properties.positionIndexes[1] === 0 ||\n          clickedEditHandle.properties.positionIndexes[1] === polygon.coordinates[0].length - 3)\n      ) {\n        // They clicked the first or last point (or double-clicked), so complete the polygon\n        const polygonToAdd: Polygon = {\n          type: 'Polygon',\n          coordinates: this.finalizedCoordinates([...polygon.coordinates[0]]),\n        };\n\n        this.resetClickSequence();\n\n        const editAction = this.getAddFeatureOrBooleanPolygonAction(polygonToAdd, props);\n        if (editAction) {\n          props.onEdit(editAction);\n        }\n      }\n    }\n\n    // Trigger pointer move right away in order for it to update edit handles (to support double-click)\n    const fakePointerMoveEvent: PointerMoveEvent = {\n      screenCoords: [-1, -1],\n      mapCoords: event.mapCoords,\n      picks: [],\n      pointerDownPicks: null,\n      pointerDownScreenCoords: null,\n      pointerDownMapCoords: null,\n      cancelPan: () => {},\n      sourceEvent: null,\n    };\n\n    this.handlePointerMove(fakePointerMoveEvent, props);\n  }\n\n  finalizedCoordinates(coords: Position[]) {\n    // Remove the hovered position\n    let coordinates = [[...coords.slice(0, -2), coords[0]]];\n    let pt = this.getIntermediatePoint([...coords]);\n    if (!pt) {\n      // if intermediate point with 90 degree not available\n      // try remove the last clicked point and get the intermediate point.\n      const tc = [...coords];\n      tc.splice(-3, 1);\n      pt = this.getIntermediatePoint([...tc]);\n      if (pt) {\n        coordinates = [[...coords.slice(0, -3), pt, coords[0]]];\n      }\n    } else {\n      coordinates = [[...coords.slice(0, -2), pt, coords[0]]];\n    }\n    return coordinates;\n  }\n\n  getIntermediatePoint(coordinates: Position[]) {\n    let pt;\n    if (coordinates.length > 4) {\n      const [p1, p2] = [...coordinates];\n      const angle1 = bearing(p1, p2);\n      const p3 = coordinates[coordinates.length - 3];\n      const p4 = coordinates[coordinates.length - 4];\n      const angle2 = bearing(p3, p4);\n\n      const angles = { first: [], second: [] };\n      // calculate 3 right angle points for first and last points in lineString\n      [1, 2, 3].forEach((factor) => {\n        const newAngle1 = angle1 + factor * 90;\n        // convert angles to 0 to -180 for anti-clock and 0 to 180 for clock wise\n        angles.first.push(newAngle1 > 180 ? newAngle1 - 360 : newAngle1);\n        const newAngle2 = angle2 + factor * 90;\n        angles.second.push(newAngle2 > 180 ? newAngle2 - 360 : newAngle2);\n      });\n\n      const distance = turfDistance(point(p1), point(p3));\n      // Draw imaginary right angle lines for both first and last points in lineString\n      // If there is intersection point for any 2 lines, will be the 90 degree point.\n      [0, 1, 2].forEach((indexFirst) => {\n        const line1 = turfLineString([\n          p1,\n          destination(p1, distance, angles.first[indexFirst]).geometry.coordinates,\n        ]);\n        [0, 1, 2].forEach((indexSecond) => {\n          const line2 = turfLineString([\n            p3,\n            destination(p3, distance, angles.second[indexSecond]).geometry.coordinates,\n          ]);\n          const fc = lineIntersect(line1, line2);\n          if (fc && fc.features.length) {\n            // found the intersect point\n            pt = fc.features[0].geometry.coordinates;\n          }\n        });\n      });\n    }\n    return pt;\n  }\n}\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = throttle;\n", "import throttle from 'lodash.throttle';\nimport {\n  ClickEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  DraggingEvent,\n  ModeProps,\n} from '../types';\nimport { Polygon, FeatureCollection } from '../geojson-types';\nimport { getPickedEditHandle } from '../utils';\nimport { DrawPolygonMode } from './draw-polygon-mode';\n\ntype DraggingHandler = (event: DraggingEvent, props: ModeProps<FeatureCollection>) => void;\n\nexport class DrawPolygonByDraggingMode extends DrawPolygonMode {\n  handleDraggingThrottled: DraggingHandler | null | undefined = null;\n\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>) {\n    // No-op\n  }\n\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>) {\n    event.cancelPan();\n    if (props.modeConfig && props.modeConfig.throttleMs) {\n      this.handleDraggingThrottled = throttle(this.handleDraggingAux, props.modeConfig.throttleMs);\n    } else {\n      this.handleDraggingThrottled = this.handleDraggingAux;\n    }\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>) {\n    this.addClickSequence(event);\n    const clickSequence = this.getClickSequence();\n    // @ts-ignore\n    if (this.handleDraggingThrottled && this.handleDraggingThrottled.cancel) {\n      // @ts-ignore\n      this.handleDraggingThrottled.cancel();\n    }\n\n    if (clickSequence.length > 2) {\n      // Complete the polygon.\n      const polygonToAdd: Polygon = {\n        type: 'Polygon',\n        coordinates: [[...clickSequence, clickSequence[0]]],\n      };\n\n      this.resetClickSequence();\n\n      const editAction = this.getAddFeatureOrBooleanPolygonAction(polygonToAdd, props);\n      if (editAction) {\n        props.onEdit(editAction);\n      }\n    }\n  }\n\n  handleDraggingAux(event: DraggingEvent, props: ModeProps<FeatureCollection>) {\n    const { picks } = event;\n    const clickedEditHandle = getPickedEditHandle(picks);\n\n    if (!clickedEditHandle) {\n      // Don't add another point right next to an existing one.\n      this.addClickSequence(event);\n    }\n  }\n\n  handleDragging(event: DraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (this.handleDraggingThrottled) {\n      this.handleDraggingThrottled(event, props);\n    }\n  }\n}\n", "import { GeoJsonEditMode } from './geojson-edit-mode';\n\nexport class ViewMode extends GeoJsonEditMode {}\n", "'use strict';\n\nvar bearing = require('@turf/bearing');\nvar destination = require('@turf/destination');\nvar distance = require('@turf/distance');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar bearing__default = /*#__PURE__*/_interopDefaultLegacy(bearing);\nvar destination__default = /*#__PURE__*/_interopDefaultLegacy(destination);\nvar distance__default = /*#__PURE__*/_interopDefaultLegacy(distance);\n\n/**\n * Takes two {@link Point|points} and returns a point midway between them.\n * The midpoint is calculated geodesically, meaning the curvature of the earth is taken into account.\n *\n * @name midpoint\n * @param {Coord} point1 first point\n * @param {Coord} point2 second point\n * @returns {Feature<Point>} a point midway between `pt1` and `pt2`\n * @example\n * var point1 = turf.point([144.834823, -37.771257]);\n * var point2 = turf.point([145.14244, -37.830937]);\n *\n * var midpoint = turf.midpoint(point1, point2);\n *\n * //addToMap\n * var addToMap = [point1, point2, midpoint];\n * midpoint.properties['marker-color'] = '#f00';\n */\nfunction midpoint(point1, point2) {\n  var dist = distance__default['default'](point1, point2);\n  var heading = bearing__default['default'](point1, point2);\n  var midpoint = destination__default['default'](point1, dist / 2, heading);\n\n  return midpoint;\n}\n\nmodule.exports = midpoint;\nmodule.exports.default = midpoint;\n", "import turfDistance from '@turf/distance';\nimport turfMidpoint from '@turf/midpoint';\nimport { FeatureCollection } from '../geojson-types';\nimport { ClickEvent, PointerMoveEvent, ModeProps, GuideFeatureCollection, Tooltip } from '../types';\nimport { getPickedEditHandle } from '../utils';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\n\nexport class MeasureDistanceMode extends GeoJsonEditMode {\n  _isMeasuringSessionFinished = false;\n  _currentTooltips = [];\n  _currentDistance = 0;\n\n  _calculateDistanceForTooltip = ({ positionA, positionB, modeConfig }) => {\n    const { turfOptions, measurementCallback } = modeConfig || {};\n    const distance = turfDistance(positionA, positionB, turfOptions);\n\n    if (measurementCallback) {\n      measurementCallback(distance);\n    }\n\n    return distance;\n  };\n\n  _formatTooltip(distance, modeConfig?) {\n    const { formatTooltip, turfOptions } = modeConfig || {};\n    const units = (turfOptions && turfOptions.units) || 'kilometers';\n\n    let text;\n    if (formatTooltip) {\n      text = formatTooltip(distance);\n    } else {\n      // By default, round to 2 decimal places and append units\n      text = `${parseFloat(distance).toFixed(2)} ${units}`;\n    }\n\n    return text;\n  }\n\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>) {\n    const { modeConfig, data, onEdit } = props;\n    const { centerTooltipsOnLine = false } = modeConfig || {};\n\n    // restart measuring session\n    if (this._isMeasuringSessionFinished) {\n      this._isMeasuringSessionFinished = false;\n      this.resetClickSequence();\n      this._currentTooltips = [];\n      this._currentDistance = 0;\n    }\n\n    const { picks } = event;\n    const clickedEditHandle = getPickedEditHandle(picks);\n\n    let positionAdded = false;\n    if (!clickedEditHandle) {\n      // Don't add another point right next to an existing one\n      this.addClickSequence(event);\n      positionAdded = true;\n    }\n    const clickSequence = this.getClickSequence();\n\n    if (\n      clickSequence.length > 1 &&\n      clickedEditHandle &&\n      Array.isArray(clickedEditHandle.properties.positionIndexes) &&\n      clickedEditHandle.properties.positionIndexes[0] === clickSequence.length - 1\n    ) {\n      // They clicked the last point (or double-clicked), so add the LineString\n      this._isMeasuringSessionFinished = true;\n    } else if (positionAdded) {\n      if (clickSequence.length > 1) {\n        this._currentDistance += this._calculateDistanceForTooltip({\n          positionA: clickSequence[clickSequence.length - 2],\n          positionB: clickSequence[clickSequence.length - 1],\n          modeConfig,\n        });\n\n        const tooltipPosition = centerTooltipsOnLine\n          ? turfMidpoint(\n              clickSequence[clickSequence.length - 2],\n              clickSequence[clickSequence.length - 1]\n            ).geometry.coordinates\n          : event.mapCoords;\n\n        this._currentTooltips.push({\n          position: tooltipPosition,\n          text: this._formatTooltip(this._currentDistance, modeConfig),\n        });\n      }\n\n      // new tentative point\n      onEdit({\n        // data is the same\n        updatedData: data,\n        editType: 'addTentativePosition',\n        editContext: {\n          position: event.mapCoords,\n        },\n      });\n    }\n  }\n\n  handleKeyUp(event: KeyboardEvent, props: ModeProps<FeatureCollection>) {\n    if (this._isMeasuringSessionFinished) return;\n\n    event.stopPropagation();\n    const { key } = event;\n\n    const clickSequenceLength = this.getClickSequence().length;\n\n    switch (key) {\n      case 'Escape':\n        this._isMeasuringSessionFinished = true;\n        if (clickSequenceLength === 1) {\n          this.resetClickSequence();\n          this._currentTooltips = [];\n        }\n        // force update drawings\n        props.onUpdateCursor('cell');\n        break;\n      case 'Enter':\n        this.handleClick(props.lastPointerMoveEvent, props);\n        this._isMeasuringSessionFinished = true;\n        break;\n      default:\n        break;\n    }\n  }\n\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const { lastPointerMoveEvent } = props;\n    const clickSequence = this.getClickSequence();\n\n    const lastCoords =\n      lastPointerMoveEvent && !this._isMeasuringSessionFinished\n        ? [lastPointerMoveEvent.mapCoords]\n        : [];\n\n    const guides = {\n      type: 'FeatureCollection',\n      features: [],\n    };\n\n    if (clickSequence.length > 0) {\n      guides.features.push({\n        type: 'Feature',\n        properties: {\n          guideType: 'tentative',\n        },\n        geometry: {\n          type: 'LineString',\n          coordinates: [...clickSequence, ...lastCoords],\n        },\n      });\n    }\n\n    const editHandles = clickSequence.map((clickedCoord, index) => ({\n      type: 'Feature',\n      properties: {\n        guideType: 'editHandle',\n        editHandleType: 'existing',\n        featureIndex: -1,\n        positionIndexes: [index],\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: clickedCoord,\n      },\n    }));\n\n    guides.features.push(...editHandles);\n    // @ts-ignore\n    return guides;\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    props.onUpdateCursor('cell');\n  }\n\n  getTooltips(props: ModeProps<FeatureCollection>): Tooltip[] {\n    const { lastPointerMoveEvent, modeConfig } = props;\n    const { centerTooltipsOnLine = false } = modeConfig || {};\n    const positions = this.getClickSequence();\n\n    if (positions.length > 0 && lastPointerMoveEvent && !this._isMeasuringSessionFinished) {\n      const distance = this._calculateDistanceForTooltip({\n        positionA: positions[positions.length - 1],\n        positionB: lastPointerMoveEvent.mapCoords,\n        modeConfig: props.modeConfig,\n      });\n\n      const tooltipPosition = centerTooltipsOnLine\n        ? turfMidpoint(positions[positions.length - 1], lastPointerMoveEvent.mapCoords).geometry\n            .coordinates\n        : lastPointerMoveEvent.mapCoords;\n\n      return [\n        ...this._currentTooltips,\n        {\n          position: tooltipPosition,\n          text: this._formatTooltip(this._currentDistance + distance, modeConfig),\n        },\n      ];\n    }\n\n    return this._currentTooltips;\n  }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar meta_1 = require(\"@turf/meta\");\n// Note: change RADIUS => earthRadius\nvar RADIUS = 6378137;\n/**\n * Takes one or more features and returns their area in square meters.\n *\n * @name area\n * @param {GeoJSON} geojson input GeoJSON feature(s)\n * @returns {number} area in square meters\n * @example\n * var polygon = turf.polygon([[[125, -15], [113, -22], [154, -27], [144, -15], [125, -15]]]);\n *\n * var area = turf.area(polygon);\n *\n * //addToMap\n * var addToMap = [polygon]\n * polygon.properties.area = area\n */\nfunction area(geojson) {\n    return meta_1.geomReduce(geojson, function (value, geom) {\n        return value + calculateArea(geom);\n    }, 0);\n}\nexports.default = area;\n/**\n * Calculate Area\n *\n * @private\n * @param {Geometry} geom GeoJSON Geometries\n * @returns {number} area\n */\nfunction calculateArea(geom) {\n    var total = 0;\n    var i;\n    switch (geom.type) {\n        case \"Polygon\":\n            return polygonArea(geom.coordinates);\n        case \"MultiPolygon\":\n            for (i = 0; i < geom.coordinates.length; i++) {\n                total += polygonArea(geom.coordinates[i]);\n            }\n            return total;\n        case \"Point\":\n        case \"MultiPoint\":\n        case \"LineString\":\n        case \"MultiLineString\":\n            return 0;\n    }\n    return 0;\n}\nfunction polygonArea(coords) {\n    var total = 0;\n    if (coords && coords.length > 0) {\n        total += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            total -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return total;\n}\n/**\n * @private\n * Calculate the approximate area of the polygon were it projected onto the earth.\n * Note that this area will be positive if ring is oriented clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for Polygons on a Sphere\",\n * JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007 https://trs.jpl.nasa.gov/handle/2014/40409\n *\n * @param {Array<Array<number>>} coords Ring Coordinates\n * @returns {number} The approximate signed geodesic area of the polygon in square meters.\n */\nfunction ringArea(coords) {\n    var p1;\n    var p2;\n    var p3;\n    var lowerIndex;\n    var middleIndex;\n    var upperIndex;\n    var i;\n    var total = 0;\n    var coordsLength = coords.length;\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) {\n                // i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength - 1;\n                upperIndex = 0;\n            }\n            else if (i === coordsLength - 1) {\n                // i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            }\n            else {\n                // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i + 1;\n                upperIndex = i + 2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            total += (rad(p3[0]) - rad(p1[0])) * Math.sin(rad(p2[1]));\n        }\n        total = (total * RADIUS * RADIUS) / 2;\n    }\n    return total;\n}\nfunction rad(num) {\n    return (num * Math.PI) / 180;\n}\n", "import turfArea from '@turf/area';\nimport turfCentroid from '@turf/centroid';\nimport { ClickEvent, Tooltip, ModeProps } from '../types';\nimport { FeatureCollection } from '../geojson-types';\nimport { DrawPolygonMode } from './draw-polygon-mode';\n\nconst DEFAULT_TOOLTIPS = [];\n\nexport class MeasureAreaMode extends DrawPolygonMode {\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>) {\n    const propsWithoutEdit = {\n      ...props,\n      // @ts-ignore\n      onEdit: () => {},\n    };\n\n    super.handleClick(event, propsWithoutEdit);\n  }\n\n  getTooltips(props: ModeProps<FeatureCollection>): Tooltip[] {\n    const tentativeGuide = this.getTentativeGuide(props);\n\n    if (tentativeGuide && tentativeGuide.geometry.type === 'Polygon') {\n      const { modeConfig } = props;\n      const { formatTooltip, measurementCallback } = modeConfig || {};\n      const units = 'sq. m';\n\n      const centroid = turfCentroid(tentativeGuide);\n      const area = turfArea(tentativeGuide);\n\n      let text;\n      if (formatTooltip) {\n        text = formatTooltip(area);\n      } else {\n        // By default, round to 2 decimal places and append units\n        // @ts-ignore\n        text = `${parseFloat(area).toFixed(2)} ${units}`;\n      }\n\n      if (measurementCallback) {\n        measurementCallback(area);\n      }\n\n      return [\n        {\n          position: centroid.geometry.coordinates,\n          text,\n        },\n      ];\n    }\n    return DEFAULT_TOOLTIPS;\n  }\n}\n", "// port from @deck.gl/core\nfunction isEqual(a: any, b: any) {\n  if (a === b) {\n    return true;\n  }\n  if (Array.isArray(a)) {\n    // Special treatment for arrays: compare 1-level deep\n    // This is to support equality of matrix/coordinate props\n    const len = a.length;\n    if (!b || b.length !== len) {\n      return false;\n    }\n\n    for (let i = 0; i < len; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\n/**\n * Speed up consecutive function calls by caching the result of calls with identical input\n * https://en.wikipedia.org/wiki/Memoization\n * @param {function} compute - the function to be memoized\n */\nexport default function memoize(compute: Function) {\n  let cachedArgs = {};\n  let cachedResult;\n\n  return (args: any) => {\n    for (const key in args) {\n      if (!isEqual(args[key], cachedArgs[key])) {\n        cachedResult = compute(args);\n        cachedArgs = args;\n        break;\n      }\n    }\n    return cachedResult;\n  };\n}\n", "import turfBearing from '@turf/bearing';\n// @ts-ignore\nimport turfCenter from '@turf/center';\n// @ts-ignore\nimport memoize from '../memoize';\n\nimport { ClickEvent, PointerMoveEvent, Tooltip, ModeProps, GuideFeatureCollection } from '../types';\nimport { FeatureCollection } from '../geojson-types';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\n\nconst DEFAULT_TOOLTIPS = [];\n\nexport class MeasureAngleMode extends GeoJsonEditMode {\n  _getTooltips = memoize(({ modeConfig, vertex, point1, point2 }) => {\n    let tooltips = DEFAULT_TOOLTIPS;\n\n    if (vertex && point1 && point2) {\n      const { formatTooltip, measurementCallback } = modeConfig || {};\n      const units = 'deg';\n\n      const angle1 = turfBearing(vertex, point1);\n      const angle2 = turfBearing(vertex, point2);\n      let angle = Math.abs(angle1 - angle2);\n      if (angle > 180) {\n        angle = 360 - angle;\n      }\n\n      let text;\n      if (formatTooltip) {\n        text = formatTooltip(angle);\n      } else {\n        // By default, round to 2 decimal places and append units\n        // @ts-ignore\n        text = `${parseFloat(angle).toFixed(2)} ${units}`;\n      }\n\n      if (measurementCallback) {\n        measurementCallback(angle);\n      }\n\n      const position = turfCenter({\n        type: 'FeatureCollection',\n        features: [point1, point2].map((p) => ({\n          type: 'Feature',\n          geometry: {\n            type: 'Point',\n            coordinates: p,\n          },\n        })),\n      }).geometry.coordinates;\n\n      tooltips = [\n        {\n          position,\n          text,\n        },\n      ];\n    }\n\n    return tooltips;\n  });\n\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>): void {\n    if (this.getClickSequence().length >= 3) {\n      this.resetClickSequence();\n    }\n\n    this.addClickSequence(event);\n  }\n\n  // Called when the pointer moved, regardless of whether the pointer is down, up, and whether something was picked\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>): void {\n    props.onUpdateCursor('cell');\n  }\n\n  getPoints(props: ModeProps<FeatureCollection>) {\n    const clickSequence = this.getClickSequence();\n\n    const points = [...clickSequence];\n\n    if (clickSequence.length < 3 && props.lastPointerMoveEvent) {\n      points.push(props.lastPointerMoveEvent.mapCoords);\n    }\n\n    return points;\n  }\n\n  // Return features that can be used as a guide for editing the data\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const guides: GuideFeatureCollection = { type: 'FeatureCollection', features: [] };\n    const { features } = guides;\n\n    const points = this.getPoints(props);\n\n    if (points.length > 2) {\n      features.push({\n        type: 'Feature',\n        properties: { guideType: 'tentative' },\n        geometry: {\n          type: 'LineString',\n          coordinates: [points[1], points[0], points[2]],\n        },\n      });\n    } else if (points.length > 1) {\n      features.push({\n        type: 'Feature',\n        properties: { guideType: 'tentative' },\n        geometry: {\n          type: 'LineString',\n          coordinates: [points[1], points[0]],\n        },\n      });\n    }\n\n    return guides;\n  }\n\n  getTooltips(props: ModeProps<FeatureCollection>): Tooltip[] {\n    const points = this.getPoints(props);\n\n    return this._getTooltips({\n      modeConfig: props.modeConfig,\n      vertex: points[0],\n      point1: points[1],\n      point2: points[2],\n    });\n  }\n}\n", "import { Position, Feature, FeatureCollection } from '../geojson-types';\nimport {\n  PointerMoveEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  DraggingEvent,\n  ModeProps,\n  Pick,\n  GuideFeatureCollection,\n  EditHandleFeature,\n} from '../types';\nimport {\n  getPickedSnapSourceEditHandle,\n  getPickedEditHandles,\n  getEditHandlesForGeometry,\n} from '../utils';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\n\ntype MovementTypeEvent = PointerMoveEvent | StartDraggingEvent | StopDraggingEvent | DraggingEvent;\n\nexport class SnappableMode extends GeoJsonEditMode {\n  _handler: GeoJsonEditMode;\n\n  constructor(handler: GeoJsonEditMode) {\n    super();\n    this._handler = handler;\n  }\n\n  _getSnappedMouseEvent<T extends MovementTypeEvent>(\n    event: T,\n    snapSource: EditHandleFeature,\n    snapTarget: EditHandleFeature\n  ): T {\n    return Object.assign(event, {\n      mapCoords: snapTarget.geometry.coordinates,\n      pointerDownMapCoords: snapSource && snapSource.geometry.coordinates,\n    });\n  }\n\n  _getPickedSnapTarget(picks: Pick[]): EditHandleFeature | null | undefined {\n    return getPickedEditHandles(picks).find(\n      (handle) => handle.properties.editHandleType === 'snap-target'\n    );\n  }\n\n  _getPickedSnapSource(\n    pointerDownPicks: Pick[] | null | undefined\n  ): EditHandleFeature | null | undefined {\n    return getPickedSnapSourceEditHandle(pointerDownPicks);\n  }\n\n  _getUpdatedSnapSourceHandle(\n    snapSourceHandle: EditHandleFeature,\n    data: FeatureCollection\n  ): EditHandleFeature {\n    const { featureIndex, positionIndexes } = snapSourceHandle.properties;\n    if (!Array.isArray(positionIndexes)) {\n      return snapSourceHandle;\n    }\n    const snapSourceFeature = data.features[featureIndex];\n\n    // $FlowFixMe\n    const snapSourceCoordinates: Position = positionIndexes.reduce(\n      (a: any[], b: number) => a[b],\n      snapSourceFeature.geometry.coordinates\n    );\n\n    return {\n      ...snapSourceHandle,\n      geometry: {\n        type: 'Point',\n        coordinates: snapSourceCoordinates,\n      },\n    };\n  }\n\n  // If additionalSnapTargets is present in modeConfig and is populated, this\n  // method will return those features along with the features\n  // that live in the current layer. Otherwise, this method will simply return the\n  // features from the current layer\n  _getSnapTargets(props: ModeProps<FeatureCollection>): Feature[] {\n    let { additionalSnapTargets } = props.modeConfig || {};\n    additionalSnapTargets = additionalSnapTargets || [];\n\n    const features = [...props.data.features, ...additionalSnapTargets];\n    return features;\n  }\n\n  _getSnapTargetHandles(props: ModeProps<FeatureCollection>): EditHandleFeature[] {\n    const handles = [];\n    const features = this._getSnapTargets(props);\n\n    for (let i = 0; i < features.length; i++) {\n      // Filter out the currently selected feature(s)\n      const isCurrentIndexFeatureNotSelected = !props.selectedIndexes.includes(i);\n\n      if (isCurrentIndexFeatureNotSelected) {\n        const { geometry } = features[i];\n        handles.push(...getEditHandlesForGeometry(geometry, i, 'snap-target'));\n      }\n    }\n    return handles;\n  }\n\n  // If no snap handle has been picked, only display the edit handles of the\n  // selected feature. If a snap handle has been picked, display said snap handle\n  // along with all snappable points on all non-selected features.\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const { modeConfig, lastPointerMoveEvent } = props;\n    const { enableSnapping } = modeConfig || {};\n\n    const guides: GuideFeatureCollection = {\n      type: 'FeatureCollection',\n      features: [...this._handler.getGuides(props).features],\n    };\n\n    if (!enableSnapping) {\n      return guides;\n    }\n\n    const snapSourceHandle: EditHandleFeature | null | undefined =\n      lastPointerMoveEvent && this._getPickedSnapSource(lastPointerMoveEvent.pointerDownPicks);\n\n    // They started dragging a handle\n    // So render the picked handle (in its updated location) and all possible snap targets\n    if (snapSourceHandle) {\n      guides.features.push(\n        ...this._getSnapTargetHandles(props),\n        this._getUpdatedSnapSourceHandle(snapSourceHandle, props.data)\n      );\n\n      return guides;\n    }\n\n    // Render the possible snap source handles\n    const { features } = props.data;\n    for (const index of props.selectedIndexes) {\n      if (index < features.length) {\n        const { geometry } = features[index];\n        guides.features.push(...getEditHandlesForGeometry(geometry, index, 'snap-source'));\n      }\n    }\n\n    return guides;\n  }\n\n  _getSnapAwareEvent<T extends MovementTypeEvent>(\n    event: T,\n    props: ModeProps<FeatureCollection>\n  ): T {\n    const snapSource = this._getPickedSnapSource(props.lastPointerMoveEvent.pointerDownPicks);\n    const snapTarget = this._getPickedSnapTarget(event.picks);\n\n    return snapSource && snapTarget\n      ? this._getSnappedMouseEvent(event, snapSource, snapTarget)\n      : event;\n  }\n\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>) {\n    this._handler.handleStartDragging(event, props);\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>) {\n    this._handler.handleStopDragging(this._getSnapAwareEvent(event, props), props);\n  }\n\n  handleDragging(event: DraggingEvent, props: ModeProps<FeatureCollection>) {\n    this._handler.handleDragging(this._getSnapAwareEvent(event, props), props);\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    this._handler.handlePointerMove(this._getSnapAwareEvent(event, props), props);\n  }\n}\n", "export type { EditMode } from './lib/edit-mode';\nexport type { GeoJsonEditModeType } from './lib/geojson-edit-mode';\nexport type { GeoJsonEditModeConstructor } from './lib/geojson-edit-mode';\n\nexport { GeoJsonEditMode } from './lib/geojson-edit-mode';\n\n// Alter modes\nexport { ModifyMode } from './lib/modify-mode';\nexport { ResizeCircleMode } from './lib/resize-circle-mode';\nexport { TranslateMode } from './lib/translate-mode';\nexport { ScaleMode } from './lib/scale-mode';\nexport { RotateMode } from './lib/rotate-mode';\nexport { DuplicateMode } from './lib/duplicate-mode';\nexport { ExtendLineStringMode } from './lib/extend-line-string-mode';\nexport { SplitPolygonMode } from './lib/split-polygon-mode';\nexport { ExtrudeMode } from './lib/extrude-mode';\nexport { ElevationMode } from './lib/elevation-mode';\nexport { TransformMode } from './lib/transform-mode';\n\n// Draw modes\nexport { DrawPointMode } from './lib/draw-point-mode';\nexport { DrawLineStringMode } from './lib/draw-line-string-mode';\nexport { DrawPolygonMode } from './lib/draw-polygon-mode';\nexport { DrawRectangleMode } from './lib/draw-rectangle-mode';\nexport { DrawSquareMode } from './lib/draw-square-mode';\nexport { DrawRectangleFromCenterMode } from './lib/draw-rectangle-from-center-mode';\nexport { DrawSquareFromCenterMode } from './lib/draw-square-from-center-mode';\nexport { DrawCircleByDiameterMode } from './lib/draw-circle-by-diameter-mode';\nexport { DrawCircleFromCenterMode } from './lib/draw-circle-from-center-mode';\nexport { DrawEllipseByBoundingBoxMode } from './lib/draw-ellipse-by-bounding-box-mode';\nexport { DrawEllipseUsingThreePointsMode } from './lib/draw-ellipse-using-three-points-mode';\nexport { DrawRectangleUsingThreePointsMode } from './lib/draw-rectangle-using-three-points-mode';\nexport { Draw90DegreePolygonMode } from './lib/draw-90degree-polygon-mode';\nexport { DrawPolygonByDraggingMode } from './lib/draw-polygon-by-dragging-mode';\nexport { ImmutableFeatureCollection } from './lib/immutable-feature-collection';\n\n// Other modes\nexport { ViewMode } from './lib/view-mode';\nexport { MeasureDistanceMode } from './lib/measure-distance-mode';\nexport { MeasureAreaMode } from './lib/measure-area-mode';\nexport { MeasureAngleMode } from './lib/measure-angle-mode';\nexport { CompositeMode } from './lib/composite-mode';\nexport { SnappableMode } from './lib/snappable-mode';\n\n// Experimental\nexport { default as _memoize } from './memoize';\n\nexport type {\n  ScreenCoordinates,\n  EditAction,\n  Pick,\n  ClickEvent,\n  PointerMoveEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  DraggingEvent,\n  ModeProps,\n  GuideFeatureCollection,\n  Viewport,\n  Tooltip,\n} from './types';\n\nexport type {\n  Position,\n  PointCoordinates,\n  LineStringCoordinates,\n  PolygonCoordinates,\n  MultiPointCoordinates,\n  MultiLineStringCoordinates,\n  MultiPolygonCoordinates,\n  AnyCoordinates,\n  Point,\n  LineString,\n  Polygon,\n  MultiPoint,\n  MultiLineString,\n  MultiPolygon,\n  Geometry,\n  Polygonal,\n  BoundingBoxArray,\n  FeatureOf,\n  FeatureWithProps,\n  Feature,\n  FeatureCollection,\n  AnyGeoJson,\n} from './geojson-types';\n\n// Utils\nimport * as utils from './utils';\nexport { utils };\n"],
  "mappings": "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",
  "names": ["global", "Node", "cmp", "Tree", "index", "printNode", "isInBbox", "point", "getBboxOverlap", "PtRounder", "CoordRounder", "crossProduct", "dotProduct", "compareVectorAngles", "length", "sineOfAngle", "cosineOfAngle", "horizontalIntersection", "verticalIntersection", "intersection", "SweepEvent", "fillCache", "Segment", "split", "isJustSubject", "RingIn", "PolyIn", "MultiPolyIn", "RingOut", "PolyOut", "MultiPolyOut", "SweepLine", "process", "Operation", "union", "xor", "difference", "require_js", "getCoords", "feature", "featureCollection", "require_js", "require_js", "require_js", "feature", "geom", "init_main_es", "init_main_es", "main_es_default", "init_main_es", "isNumber", "earthRadius", "factors", "unitsFactors", "init_main_es", "init_main_es", "getCoords", "init_main_es", "main_es_default", "feature", "getCoords", "init_main_es", "require_js", "require_js", "require_js", "require_js", "require_js", "toDeckColor", "color", "defaultColor", "Array", "isArray", "recursivelyTraverseNestedArrays", "array", "prefix", "fn", "i", "length", "generatePointsParallelToLinePoints", "p1", "p2", "mapCoords", "lineString", "type", "coordinates", "pt", "ddistance", "lineBearing", "isPointToLeftOfLine", "orthogonalBearing", "p3", "p4", "geometry", "distance2d", "x1", "y1", "x2", "y2", "dx", "dy", "Math", "sqrt", "mix", "a", "b", "ratio", "nearestPointOnProjectedLine", "line", "inPoint", "viewport", "wmViewport", "WebMercatorViewport", "projectedCoords", "map", "x", "y", "z", "project", "minDistance", "Infinity", "minPointInfo", "forEach", "index", "A", "B", "C", "div", "distance", "abs", "x0", "y0", "z1", "z2", "lineLength", "startToPointLength", "z0", "unproject", "properties", "dist", "nearestPointOnLine", "lines", "mercator", "closestPoint", "coords", "pointCoords", "minDist", "to", "from", "segmentIdx", "lineCoordinates", "pointCoordinate", "lineCoordinate", "n", "slope", "inverseSlope", "rl2", "pow", "ln2", "lnm12", "dist2", "calcrl2", "min", "undefined", "snapPoint", "idx", "pixelToLatLong", "getPickedEditHandle", "picks", "handles", "getPickedEditHandles", "getPickedSnapSourceEditHandle", "find", "handle", "editHandleType", "getNonGuidePicks", "filter", "pick", "isGuide", "getPickedExistingEditHandle", "featureIndex", "getPickedIntermediateEditHandle", "object", "guideType", "getEditHandlesForGeometry", "positionIndexes", "concat", "getEditHandlesForCoordinates", "slice", "Error", "positionIndexPrefix", "editHandles", "position", "push", "updateRectanglePosition", "feature", "editHandleIndex", "points", "p0", "callback", "isNaN", "isFinite", "coord", "Boolean", "ImmutableFeatureCollection", "featureCollection", "featureIndex", "positionIndexes", "updatedPosition", "geometry", "features", "isPolygonal", "type", "updatedGeometry", "coordinates", "immutablyReplacePosition", "replaceGeometry", "Error", "length", "Array", "isArray", "immutablyRemovePosition", "pruneGeometryIfNecessary", "positionToAdd", "immutablyAddPosition", "updatedFeature", "updatedFeatureCollection", "slice", "feature", "addFeatures", "deleteFeatures", "featureIndexes", "sort", "i", "splice", "getUpdatedPosition", "previousPosition", "elevation", "updated", "prunePolygonIfNecessary", "pruneMultiLineStringIfNecessary", "pruneMultiPolygonIfNecessary", "polygon", "holeIndex", "removeHoleIfNecessary", "lineStringIndex", "lineString", "polygonIndex", "outerRing", "hole", "DEFAULT_GUIDES", "type", "features", "DEFAULT_TOOLTIPS", "GeoJsonEditMode", "props", "selectedIndexes", "length", "data", "feature", "getSelectedFeature", "geometry", "selectedFeatures", "map", "selectedIndex", "_clickSequence", "mapCoords", "push", "guides", "getGuides", "find", "f", "properties", "guideType", "picks", "pickedFeatures", "index", "pickedHandles", "featureIndex", "pickedIndexes", "Set", "some", "has", "isPolygonal", "featureOrGeometry", "featureOrGeometryAsAny", "rewindFeature", "rewindPolygon", "updatedData", "ImmutableFeatureCollection", "addFeature", "getObject", "editType", "editContext", "featureIndexes", "featuresToAdd", "initialIndex", "updatedIndexes", "geometryAsAny", "selectedFeature", "modeConfig", "booleanOperation", "console", "warn", "updatedGeometry", "replaceGeometry", "editAction", "getAddFeatureAction", "event", "tentativeFeature", "createTentativeFeature", "onEdit", "key", "resetClickSequence", "getIntermediatePosition", "position1", "position2", "intermediatePosition", "ModifyMode", "props", "handles", "data", "lastPointerMoveEvent", "features", "picks", "mapCoords", "selectedIndexes", "index", "length", "geometry", "push", "console", "warn", "existingEditHandle", "featureAsPick", "find", "pick", "isGuide", "object", "type", "includes", "modeConfig", "lockRectangles", "properties", "shape", "intermediatePoint", "positionIndexPrefix", "referencePoint", "coordinates", "lineString", "prefix", "lineStringFeature", "candidateIntermediatePoint", "getNearestPoint", "viewport", "dist", "position", "guideType", "editHandleType", "featureIndex", "positionIndexes", "line", "inPoint", "some", "coord", "log", "event", "pickedExistingHandle", "pickedIntermediateHandle", "updatedData", "ImmutableFeatureCollection", "removePosition", "getObject", "ignored", "onEdit", "editType", "editContext", "featureIndexes", "feature", "canAddPosition", "addPosition", "editHandle", "pointerDownPicks", "cancelPan", "_dragEditHandle", "editHandleProperties", "editedFeature", "replaceGeometry", "replacePosition", "cursor", "getCursor", "onUpdateCursor", "selectedFeatureIndexes", "handlesPicked", "GeoJsonEditMode", "require_js", "feature", "require_js", "intersect", "require_js", "require_js", "require_js", "ResizeCircleMode", "props", "handles", "selectedFeatureIndexes", "selectedIndexes", "lastPointerMoveEvent", "picks", "mapCoords", "length", "_isResizing", "featureAsPick", "find", "pick", "isGuide", "object", "properties", "shape", "includes", "index", "intermediatePoint", "positionIndexPrefix", "referencePoint", "geometry", "coordinates", "lineString", "prefix", "lineStringFeature", "candidateIntermediatePoint", "getNearestPoint", "modeConfig", "viewport", "dist", "position", "push", "type", "guideType", "editHandleType", "featureIndex", "positionIndexes", "features", "line", "inPoint", "some", "coord", "console", "log", "event", "editHandle", "pointerDownPicks", "cancelPan", "editHandleProperties", "feature", "getSelectedFeature", "center", "numberOfSteps", "Object", "entries", "radius", "Math", "max", "steps", "options", "updatedFeature", "updatedData", "ImmutableFeatureCollection", "data", "replaceGeometry", "getObject", "onEdit", "editType", "editContext", "featureIndexes", "selectedEditHandle", "_selectedEditHandle", "cursor", "getCursor", "onUpdateCursor", "handlesPicked", "GeoJsonEditMode", "require_js", "clone", "cloneFeature", "cloneFeatureCollection", "cloneGeometry", "cloneProperties", "feature", "deepSlice", "require_js", "require_js", "clone", "TranslateMode", "event", "props", "_isTranslatable", "_geometryBeforeTranslate", "editAction", "getTranslateAction", "pointerDownMapCoords", "mapCoords", "onEdit", "cancelPan", "isSelectionPicked", "pointerDownPicks", "picks", "updateCursor", "getSelectedFeaturesAsFeatureCollection", "onUpdateCursor", "startDragPoint", "currentPoint", "editType", "updatedData", "ImmutableFeatureCollection", "data", "selectedIndexes", "modeConfig", "viewportDesc", "viewport", "screenSpace", "project", "WebMercatorViewport", "from", "to", "dx", "dy", "i", "length", "selectedIndex", "feature", "features", "coordinates", "geometry", "coord", "pixels", "unproject", "replaceGeometry", "type", "p1", "p2", "distanceMoved", "direction", "movedFeatures", "movedFeature", "getObject", "editContext", "featureIndexes", "GeoJsonEditMode", "require_js", "require_js", "require_js", "require_js", "require_js", "clone", "feature", "ScaleMode", "geometry", "features", "Array", "isArray", "length", "type", "selectedHandle", "selectedHandleIndex", "properties", "positionIndexes", "guidePointCount", "_cornerGuidePoints", "oppositeIndex", "find", "p", "props", "editedData", "updatedData", "ImmutableFeatureCollection", "data", "selectedIndexes", "i", "selectedIndex", "movedFeature", "replaceGeometry", "getObject", "Boolean", "_selectedEditHandle", "startDragPoint", "currentPoint", "editType", "oppositeHandle", "_getOppositeScaleHandle", "origin", "scaleFactor", "getScaleFactor", "scaledFeatures", "_geometryBeingScaled", "_getUpdatedData", "editContext", "featureIndexes", "_cursor", "onUpdateCursor", "cursorGeometry", "getSelectedFeaturesAsFeatureCollection", "centroid", "bearing", "positiveBearing", "event", "_isScaling", "selectedEditHandle", "picks", "editHandleType", "updateCursor", "scaleAction", "getScaleAction", "pointerDownMapCoords", "mapCoords", "onEdit", "cancelPan", "selectedGeometry", "_isSinglePointGeometrySelected", "boundingBox", "mode", "cornerGuidePoints", "coord", "coordIndex", "cornerPoint", "guideType", "push", "GeoJsonEditMode", "startDistance", "endDistance", "require_js", "clone", "RotateMode", "geometry", "features", "Array", "isArray", "length", "type", "_isRotating", "props", "selectedGeometry", "_geometryBeingRotated", "getSelectedFeaturesAsFeatureCollection", "_isSinglePointGeometrySelected", "boundingBox", "previousCoord", "topEdgeMidpointCoords", "longestEdgeLength", "coord", "edgeMidpoint", "edgeDistance", "Math", "max", "rotateHandleCoords", "lineFromEnvelopeToRotateHandle", "rotateHandle", "guideType", "editHandleType", "event", "rotateAction", "getRotateAction", "pointerDownMapCoords", "mapCoords", "onEdit", "cancelPan", "selectedEditHandle", "picks", "_selectedEditHandle", "properties", "updateCursor", "onUpdateCursor", "startDragPoint", "currentPoint", "editType", "centroid", "angle", "getRotationAngle", "rotatedFeatures", "pivot", "updatedData", "ImmutableFeatureCollection", "data", "selectedIndexes", "i", "selectedIndex", "movedFeature", "replaceGeometry", "getObject", "editContext", "featureIndexes", "GeoJsonEditMode", "bearing1", "bearing2", "DuplicateMode", "event", "props", "_geometryBeforeTranslate", "onEdit", "getAddManyFeaturesAction", "data", "_isTranslatable", "onUpdateCursor", "TranslateMode", "ExtendLineStringMode", "props", "selectedGeometry", "getSelectedGeometry", "type", "event", "selectedIndexes", "selectedLineString", "getSingleSelectedLineString", "console", "warn", "positionIndexes", "coordinates", "length", "modeConfig", "drawAtFront", "featureIndex", "updatedData", "ImmutableFeatureCollection", "data", "addPosition", "mapCoords", "getObject", "onEdit", "editType", "editContext", "featureIndexes", "position", "guides", "features", "lastPointerMoveEvent", "startPosition", "push", "properties", "guideType", "geometry", "onUpdateCursor", "GeoJsonEditMode", "require_js", "point", "t", "e", "n", "i", "r", "o", "s", "a", "u", "l", "c", "p", "h", "f", "g", "d", "y", "_", "m", "v", "I", "require_js", "feature", "geometry", "buffered", "SplitPolygonMode", "clickSequence", "mapCoords", "props", "modeConfig", "lock90Degree", "length", "firstPoint", "selectedGeometry", "getSelectedGeometry", "feature", "lines", "type", "features", "minDistance", "Number", "MAX_SAFE_INTEGER", "closestPoint", "forEach", "line", "snapPoint", "distanceFromOrigin", "lastBearing", "currentDistance", "units", "geometry", "coordinates", "lastPoint", "approximatePoint", "nearestPt", "getClickSequence", "guides", "lastPointerMoveEvent", "push", "properties", "guideType", "calculateMapCoords", "event", "tentativeFeature", "getTentativeGuide", "console", "warn", "addClickSequence", "pt", "isPointInPolygon", "resetClickSequence", "isLineInterectingWithPolygon", "editAction", "splitPolygon", "onEdit", "onUpdateCursor", "featureIndex", "selectedIndexes", "gap", "buffer", "updatedGeometry", "updatedCoordinates", "map", "c", "reduce", "agg", "prev", "p", "updatedData", "ImmutableFeatureCollection", "data", "replaceGeometry", "getObject", "editType", "editContext", "featureIndexes", "GeoJsonEditMode", "ExtrudeMode", "event", "props", "editHandle", "pointerDownPicks", "featureIndex", "properties", "positionIndexes", "size", "coordinatesSize", "data", "isPointAdded", "nextPositionIndexes", "p1", "getPointForPositionIndexes", "prevPositionIndexes", "p2", "mapCoords", "p3", "p4", "updatedData", "ImmutableFeatureCollection", "replacePosition", "getObject", "onEdit", "editType", "editContext", "featureIndexes", "position", "cancelPan", "selectedFeatureIndexes", "selectedIndexes", "picks", "length", "isOrthogonal", "addPosition", "features", "Array", "isArray", "feature", "coordinates", "geometry", "a", "b", "angle", "Math", "floor", "prevPoint", "nextPoint", "currentPoint", "prevAngle", "getBearing", "nextAngle", "includes", "abs", "next", "prev", "c", "ModifyMode", "defaultCalculateElevationChange", "pointerDownScreenCoords", "screenCoords", "ElevationMode", "event", "position", "props", "modeConfig", "minElevation", "maxElevation", "calculateElevationChange", "elevation", "length", "Math", "min", "max", "Object", "assign", "mapCoords", "editHandle", "pointerDownPicks", "geometry", "coordinates", "makeElevatedEvent", "picks", "cursor", "viewport", "metersPerPixel", "cos", "latitude", "PI", "pow", "zoom", "ModifyMode", "CompositeMode", "modes", "_modes", "callback", "resultEval", "result", "i", "length", "event", "props", "_coalesce", "handler", "handleClick", "handlePointerMove", "handleStartDragging", "handleStopDragging", "handleDragging", "allGuides", "mode", "push", "getGuides", "features", "type", "GeoJsonEditMode", "TransformMode", "TranslateMode", "ScaleMode", "RotateMode", "event", "props", "updatedCursor", "onUpdateCursor", "cursor", "scaleMode", "translateMode", "filteredModes", "_modes", "forEach", "mode", "push", "isEditHandleSelected", "filter", "Boolean", "handleStartDragging", "compositeGuides", "rotateMode", "find", "nonEnvelopeGuides", "features", "guide", "properties", "editHandleType", "guidesToFilterOut", "getIsRotating", "includes", "CompositeMode", "DrawPointMode", "props", "lastPointerMoveEvent", "lastCoords", "mapCoords", "type", "properties", "guideType", "geometry", "coordinates", "onEdit", "getAddFeatureAction", "data", "event", "onUpdateCursor", "GeoJsonEditMode", "DrawLineStringMode", "event", "props", "picks", "clickedEditHandle", "positionAdded", "addClickSequence", "clickSequence", "getClickSequence", "length", "Array", "isArray", "properties", "positionIndexes", "lineStringToAdd", "type", "coordinates", "resetClickSequence", "editAction", "getAddFeatureAction", "data", "onEdit", "updatedData", "editType", "editContext", "position", "mapCoords", "key", "lastPointerMoveEvent", "lastCoords", "guides", "features", "tentativeFeature", "guideType", "geometry", "push", "editHandles", "map", "clickedCoord", "index", "editHandleType", "featureIndex", "onUpdateCursor", "GeoJsonEditMode", "DrawPolygonMode", "props", "lastPointerMoveEvent", "clickSequence", "getClickSequence", "lastCoords", "mapCoords", "tentativeFeature", "length", "type", "properties", "guideType", "geometry", "coordinates", "guides", "features", "createTentativeFeature", "push", "editHandles", "map", "clickedCoord", "index", "editHandleType", "featureIndex", "positionIndexes", "event", "picks", "clickedEditHandle", "overlappingLines", "modeConfig", "preventOverlappingLines", "currentLine", "otherLines", "slice", "intersectingPoints", "positionAdded", "addClickSequence", "Array", "isArray", "polygonToAdd", "resetClickSequence", "editAction", "getAddFeatureOrBooleanPolygonAction", "onEdit", "updatedData", "data", "editType", "editContext", "position", "key", "onUpdateCursor", "GeoJsonEditMode", "TwoClickPolygonMode", "event", "props", "modeConfig", "dragToDraw", "addClickSequence", "checkAndFinishPolygon", "cancelPan", "clickSequence", "getClickSequence", "tentativeFeature", "getTentativeGuide", "length", "geometry", "type", "feature", "properties", "shape", "coordinates", "editAction", "getAddFeatureOrBooleanPolygonAction", "resetClickSequence", "onEdit", "lastPointerMoveEvent", "guides", "features", "corner1", "corner2", "mapCoords", "polygon", "getTwoClickPolygon", "push", "guideType", "coord1", "coord2", "onUpdateCursor", "lastCoords", "GeoJsonEditMode", "DrawRectangleMode", "coord1", "coord2", "modeConfig", "rectangle", "properties", "shape", "TwoClickPolygonMode", "require_js", "DrawSquareMode", "coord1", "coord2", "modeConfig", "coord3", "coord4", "distance1", "distance2", "shortestDistance", "closestPoint", "line", "newPoint", "corner", "geometry", "coordinates", "square", "properties", "shape", "TwoClickPolygonMode", "DrawRectangleFromCenterMode", "coord1", "coord2", "modeConfig", "longitude", "Math", "abs", "latitude", "rectangle", "properties", "shape", "TwoClickPolygonMode", "DrawSquareFromCenterMode", "coord1", "coord2", "modeConfig", "coord3", "coord4", "distance1", "distance2", "shortestDistance", "closestPoint", "line", "newPoint", "corner", "geometry", "coordinates", "longitude", "Math", "abs", "latitude", "square", "properties", "shape", "TwoClickPolygonMode", "DrawCircleByDiameterMode", "coord1", "coord2", "modeConfig", "steps", "options", "console", "warn", "centerCoordinates", "radius", "Math", "max", "geometry", "properties", "shape", "TwoClickPolygonMode", "DrawCircleFromCenterMode", "coord1", "coord2", "modeConfig", "steps", "options", "console", "warn", "radius", "Math", "max", "geometry", "properties", "shape", "TwoClickPolygonMode", "require_js", "DrawEllipseByBoundingBoxMode", "coord1", "coord2", "modeConfig", "minX", "Math", "min", "minY", "maxX", "max", "maxY", "polygonPoints", "geometry", "coordinates", "centerCoordinates", "xSemiAxis", "ySemiAxis", "TwoClickPolygonMode", "ThreeClickPolygonMode", "event", "props", "addClickSequence", "clickSequence", "getClickSequence", "tentativeFeature", "getTentativeGuide", "length", "geometry", "type", "editAction", "getAddFeatureOrBooleanPolygonAction", "resetClickSequence", "onEdit", "lastPointerMoveEvent", "modeConfig", "guides", "features", "hoveredCoord", "mapCoords", "push", "properties", "guideType", "coordinates", "polygon", "getThreeClickPolygon", "coord1", "coord2", "coord3", "onUpdateCursor", "lastCoords", "GeoJsonEditMode", "DrawEllipseUsingThreePointsMode", "coord1", "coord2", "coord3", "modeConfig", "centerCoordinates", "xSemiAxis", "Math", "max", "ySemiAxis", "options", "angle", "ThreeClickPolygonMode", "DrawRectangleUsingThreePointsMode", "coord1", "coord2", "coord3", "modeConfig", "p3", "p4", "type", "properties", "shape", "geometry", "coordinates", "ThreeClickPolygonMode", "Draw90DegreePolygonMode", "props", "clickSequence", "getClickSequence", "mapCoords", "lastPointerMoveEvent", "p3", "length", "p1", "p2", "tentativeFeature", "type", "properties", "guideType", "geometry", "coordinates", "guides", "features", "createTentativeFeature", "push", "concat", "slice", "event", "onUpdateCursor", "picks", "getTentativeGuide", "addClickSequence", "lineString", "polygon", "clickedEditHandle", "Array", "isArray", "positionIndexes", "polygonToAdd", "finalizedCoordinates", "resetClickSequence", "editAction", "getAddFeatureOrBooleanPolygonAction", "onEdit", "fakePointerMoveEvent", "screenCoords", "pointerDownPicks", "pointerDownScreenCoords", "pointerDownMapCoords", "cancelPan", "sourceEvent", "handlePointerMove", "coords", "pt", "getIntermediatePoint", "tc", "splice", "angle1", "p4", "angle2", "angles", "first", "second", "forEach", "factor", "newAngle1", "newAngle2", "distance", "indexFirst", "line1", "indexSecond", "line2", "fc", "GeoJsonEditMode", "isObject", "result", "DrawPolygonByDraggingMode", "event", "props", "cancelPan", "modeConfig", "throttleMs", "handleDraggingThrottled", "handleDraggingAux", "addClickSequence", "clickSequence", "getClickSequence", "cancel", "length", "polygonToAdd", "type", "coordinates", "resetClickSequence", "editAction", "getAddFeatureOrBooleanPolygonAction", "onEdit", "picks", "clickedEditHandle", "DrawPolygonMode", "ViewMode", "GeoJsonEditMode", "require_js", "midpoint", "MeasureDistanceMode", "positionA", "positionB", "modeConfig", "turfOptions", "measurementCallback", "distance", "formatTooltip", "units", "text", "parseFloat", "toFixed", "event", "props", "data", "onEdit", "centerTooltipsOnLine", "_isMeasuringSessionFinished", "resetClickSequence", "_currentTooltips", "_currentDistance", "picks", "clickedEditHandle", "positionAdded", "addClickSequence", "clickSequence", "getClickSequence", "length", "Array", "isArray", "properties", "positionIndexes", "_calculateDistanceForTooltip", "tooltipPosition", "geometry", "coordinates", "mapCoords", "push", "position", "_formatTooltip", "updatedData", "editType", "editContext", "stopPropagation", "key", "clickSequenceLength", "onUpdateCursor", "handleClick", "lastPointerMoveEvent", "lastCoords", "guides", "type", "features", "guideType", "editHandles", "map", "clickedCoord", "index", "editHandleType", "featureIndex", "positions", "GeoJsonEditMode", "require_js", "DEFAULT_TOOLTIPS", "MeasureAreaMode", "event", "props", "propsWithoutEdit", "onEdit", "tentativeGuide", "getTentativeGuide", "geometry", "type", "modeConfig", "formatTooltip", "measurementCallback", "units", "centroid", "area", "text", "parseFloat", "toFixed", "position", "coordinates", "DrawPolygonMode", "isEqual", "a", "b", "Array", "isArray", "len", "length", "i", "memoize", "compute", "cachedArgs", "cachedResult", "args", "key", "DEFAULT_TOOLTIPS", "MeasureAngleMode", "modeConfig", "vertex", "point1", "point2", "tooltips", "formatTooltip", "measurementCallback", "units", "angle1", "angle2", "angle", "Math", "abs", "text", "parseFloat", "toFixed", "position", "type", "features", "map", "p", "geometry", "coordinates", "event", "props", "getClickSequence", "length", "resetClickSequence", "addClickSequence", "onUpdateCursor", "clickSequence", "points", "lastPointerMoveEvent", "push", "mapCoords", "guides", "getPoints", "properties", "guideType", "_getTooltips", "GeoJsonEditMode", "SnappableMode", "handler", "_handler", "event", "snapSource", "snapTarget", "Object", "assign", "mapCoords", "geometry", "coordinates", "pointerDownMapCoords", "picks", "find", "handle", "properties", "editHandleType", "pointerDownPicks", "snapSourceHandle", "data", "featureIndex", "positionIndexes", "Array", "isArray", "snapSourceFeature", "features", "snapSourceCoordinates", "reduce", "a", "b", "type", "props", "modeConfig", "additionalSnapTargets", "handles", "_getSnapTargets", "i", "length", "isCurrentIndexFeatureNotSelected", "selectedIndexes", "includes", "push", "lastPointerMoveEvent", "enableSnapping", "guides", "getGuides", "_getPickedSnapSource", "_getSnapTargetHandles", "_getUpdatedSnapSourceHandle", "index", "_getPickedSnapTarget", "_getSnappedMouseEvent", "handleStartDragging", "handleStopDragging", "_getSnapAwareEvent", "handleDragging", "handlePointerMove", "GeoJsonEditMode"]
}
